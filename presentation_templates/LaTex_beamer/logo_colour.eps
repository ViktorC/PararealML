%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2Col1Line_CMYK_CS3.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Susan Halcro
%%CreationDate: 02/12/2009
%%BoundingBox: 0 0 532 86
%%HiResBoundingBox: 0 0 531.2911 85.1973
%%CropBox: 0 0 531.2911 85.1973
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2ColUncoated</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2009-11-12T11:05:09Z</xmp:MetadataDate>
         <xmp:ModifyDate>2009-11-12T11:05:09Z</xmp:ModifyDate>
         <xmp:CreateDate>2009-11-12T11:05:09Z</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>44</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgALAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9P3mq6bZXFrb3VzHDPeu&#xA;Y7WNzQuwFaD8B8yB1IrIRJ5It4/+ZvnjU9G1PUNK1rVPStbj05LCLTGK3USRTRywyIsckcgZl9RJ&#xA;hPKiNxVozuyDIhwACX3/AI+74t2m0WfUz4MUTI+XT3np8S85l/M7TJbJ7CTR5pYTaadYpefWIYrh&#xA;Y9KuXnt3AS2KrJxkCGhptXB+ZgDe/Xp3/F38fYzWmNngB7uI39ka+1kuj/mxdtcarL5aEjatfy2k&#xA;Gi6JdO62ttbRIiSCO3VpFkfjCqKIm9RixbgqimWREJgb+/vdJruzNTpD+9gY3y6x+Y2/S920LzRo&#xA;uuG5XTLkXRsmWO5kjWT0Q7CoEcrKqSjbqhO1PEZizxmPNxRIFNcgl2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4H+bGv6jcW91qmp2NteeXGcL5YnIEh+sAt&#xA;GxjuImgkQOI/UlhkR1dVKhxtmbEjHG/4hzbdHpJ6rPHFH+I/LvPwG75713zDrdtrKXt1W6W6b6zM&#xA;9ygY3LFj6haUjmakU2bbtl+LFDJAGQ3b9brM+g1E8OCcowjI9efn73o0d/8AlVeW1rrUIntNEVK6&#xA;rA5ikuoZQCWgjFEDszUEbdCDUjY5X+UHKhfxR/oh1nPxZ173muoeYn1vX5zpliNP0pubQ2MVZGji&#xA;RdmeUjmW25M2wr0AGXDTQgLA3DSe2dXnPhzySljkaIJe/wD5XeY/MOq6W97axC81fy6A001zcx2d&#xA;lFa7MzlEQCW5u40ljaSWoUrzLLWmYgnGY36/f+pyu2OzJaLUHHzjzif6P6+h9z6Ct7iC5gjuLeRZ&#xA;YJkWSKVCCrIwqrKR1BBzFIpwEg1r8w/JWh30tjq2rQWV1CiSSxy8hxSWoQk0p8XE98sjhlIWAxMw&#xA;Oanb/mZ5EuGgSHWIWa5uTZW4IdS9wFR/TXkoqeMqn6cTgmOiOMIm889eUbK9vrG61OKK702H6zfw&#xA;ty5Qw7fvH22X4hvgGKRF1zSZh2h+e/KGvXpstH1SG9uxCbn0YyeXohlUyCoHw8nUV98Z4pRFkKJg&#xA;8kTH5n0CTX5PL6Xsba1DGJpbEV9RYyAwc7UoQeuDwzXF0TxC6S6H8yvIcsUEya3bejcXJsYZWYqj&#xA;XIpWHkwA5/ENjkjgn3MeMd6O1Hzb5c02+exvr6OC7jt3vHhblUW8YJeU0B+FabnIxxyIsBkZAIWx&#xA;/MHyXf3lhZ2erwTXWqI0unRKTynRCwZo6jcD02+7CcMgCSOSBMKVz+ZnkO29T19ZgjENy1lITyoL&#xA;lK8oa0+2KfZwjBM9EcY73D8y/IjWkd4uswNbS3Jso5ByINyqq5h2FefF1PHHwJ3VJ4wjD518p/oG&#xA;XzANWtjo0J4y3yyBo1cELwNN+fIheH2q7UrkfDldVuvEKtDRfmN5Kla1RNViEl7O1pbRssiO9wnH&#xA;lFxZQ3NeYqD0yRwz7l4wgW/OL8s1i9U6/b8PT9fYSFvSP7fELyp9GS/Lz7keJHvRq/mT5Fa21K5X&#xA;WrYwaOyJqknI0t2kk9JBJtsS/wAOR8Ge23NeMd7ILa4gubeK5gcSQToskUg6MjjkpHzBysimaVaj&#xA;5x8vafrEGj3Nw/6RuDCqxRQTzBTcu0cPqyRI8cXqMjBfUZa0OSGORF9GJkLpA235m+Qrm9jsYNbt&#xA;3u5ZxaRwgsCbgtwEW4+3y2pkjgmBdLxjvbg/MvyFMwC65aqDIYPUlf0kEq7GMvIFUPXbjWuJwTHR&#xA;eMd6L1Lzt5V0zUn0y/1GK3v44DdPbNy5iBQS0pAB+EU64I4pEWApkAuk85+Vo9Cg186lCdGuSqwX&#xA;ykvEzOxRQCoO5Ycfnt1wDHK6rdeIVaHP5heSV1J9MfWbaO+ilW3khkb0+MrglI2ZwFDPT4QT8XbJ&#xA;eDOrpeMIq383eW7m+1Gwgv45LzSVL6lAvItAq71cU+7xyJxyoGua8QQC/mZ5De2tblNZgeC+Mq2c&#xA;i82EpgFZeFF+LgOtMl4E+5HGE0j8zeXpNC/T6albNonAy/pESp6HAHiT6leOzDj89uuQ4DdVuy4h&#xA;VoC0/MHyfdm5WLUlElnbteXMUqSxSJbLSsxSRUbh8Q+KlMmcMh0RxhuXz/5Nh0a21uTVYV0m9k9G&#xA;1vDy9OSQ1AVTTetDTAMMrqt14xVvEv8AnIDy7peh2Xl+LS9Mg0yGVrpLgQdZfq3BLZ5GoC7mORyS&#xA;1W3IJOHJMmBs3uP0vT+yEI/nRe1QlXv2H3WpR6b5Cvf+cd2l83SC2FrcXJ0u7jAa5W7Y1RIFqOfO&#xA;lHQmhG5pTkLdOZCUeHudP2+I/mst/wA8s1tn8mDy1YtPBav9T0i/tIZpIlcx1aIwojFWNCrErv4+&#xA;+WES4j7w6zamD+WNG/Lq3/I/zbqXl6VbvWplaPWZXVVmgb1wY4EQE8YNqqwPx9TuOKyzSnxgHl+x&#xA;OlEbFd4+9LPyJ0jT9W80ajaahYQanbjTZZorK64mKS4SSMRAhgw+y778TTrmFgkRE0a3H6Xu/biM&#xA;ePEf4ql/va/S+o7O0gs7SC0t1KQW8axQqSWIRFCqOTEsdh1JyJNm3iXnf5/rYwflbr0pWKK5vDZx&#xA;86KskrJdRsq16vxUMQOwrmRpbMw1ZfpKD/Ni4tU80/l/JZ3Nrbz3GrtOLhwJEblamJJXVXiLg/Ag&#xA;PIdhXJYAeGV9yMnMe9juu33oecfzMj1LULWW6byoIleFfq6FxHKPTCPLMeYMiinLuNssiPTCh/Ex&#xA;J3PuZJ+VGsfWT5etz5h07UUj8vQRRaRZwA3Nq8Yh9VriUPOy7cEYMyAsB8FRtVnjz2I9TPGeW/RE&#xA;atrGlaF+d51DWruLTbC88tR21reXTiGGSaG+lkkiWR6LzVHVuNa0OCMTLFQ39X6FJqe/cxTSr3yV&#xA;rfl/9H65LG2m6v5x1eJradWSWl2LsQExsBJGwaeMhiBwJBNMuIlE2OYiGAojfvKYafP5l0jW7zy7&#xA;5oczx6B5e1Y2HmGQ0W7sriWzEJlJ6TxeiUk8djvWpiREgSj1kNvmkWDR6BDXjm0/KP8AL3z1pKG5&#xA;uvKFvZPcRRfaktZIEs9RgAIpyr1r0K4jfJKB/i/AR/CCOiI8/wBmfL/lPyLDfXVvaau/mWy1HU7i&#xA;cqYxcytLNdzOA0XKKOWXc8hRaCoxxHilKuXDTKewHvQHnHWxc6forf4j0zU74edrOZNStoAlpHGI&#xA;aoGCOomECOgciZiBRWcHDjjudiPQiR8+qjZzaRbaN5j8p+b9RfQvNlz5iXUH1WEosSXM5SWz1C2D&#xA;cONv/o6I4LMVP2mHLYkEkSiLjw/gIHIg87UovMt3qGqeSW1q4sZb+z80XNvNqtnwjgv0itBGt6KU&#xA;B5cliJG3JaDsMlwUJVf0/gIuyL72a/7iv+V9/o79x6P+E/qn1P4OH+9vP0fT6f3XxcKfZ9sx9/Cv&#xA;+k2fx/BB+Z9H8vf8rs0OEXRjOt20lxrmlrIBDcz6aUfTnnj/AGmBZytevAe9ZQlLwj5cvjzRIDjC&#xA;N/M7z7rej61Fouk3CWV2dPk1Gy5wG4fUbtZlhh02FCVH7wn94VPMAgigBORw4gRZ7/l5pnMg0ET+&#xA;WMF9deYvOuvXdwZJLnVBp4g4pxRdPhRKK6hSwSSSRBt2qdycc5AEQO770w5ksR8l+YbY6pqcUPmT&#xA;TLe0k843kj6TJEs15dpNOEhMB5uSrSsjK6RbULcwActyR2Gx+lhE+fVvy55k8pL5J/MG0vrq3u/0&#xA;hrmti206NllmuhcyUhEESEvJ6hYcGUe9dq4yhLijXQBYkUfeUBoD3Wka9pNj5juo4tVtvIFxbXSy&#xA;uqskn1iORIX5H+8WFNx1+Enpkpbixy42MdiL/mt6TpWoaBo/le68uqb7yZ5ou9Ck1G3jJYafqKXt&#xA;s0k6d1inaIpIv7Mnh9nBKQkTf1Rv4hIFVXI0lP5kTrceYfzNSDVYBCZND56NxWSXUnt0WttC6t6i&#xA;srrRvTUkHrTJ4RtDbv8AgxnzPwZ7ovmXSPL/AOaHnW48xXCaOdWtdJvLCO6PBpkhtWjlWH/frpJ8&#xA;HFKsT0GUSgZQjw71baJASNsJ8makV8tflPb2F9a2mrLf6ukZu42mSOSSO6RUliSSBwXaZFA5jdh1&#xA;6ZdkjvOxts1xO0Vlu09l5S0y1vbaX655a81jUfP2nhPUNHkeQXkUUagNa/ErqFWn3VJ5yNdY+n8d&#xA;6OnuO7NtS/MPT9W866pp2nNpV9pll5furqXXYLgvLFFNxVrclQ0fJpURqcvs++2UxxVEE3fFybDO&#xA;z8GKWV7Nbfk75An1DUrL9Exano5lt/QcTIsF2ryh5PXdT6aqS49LplhF5JUDdFgPoHwRX5meQ767&#xA;l1HSNG0vU7+6nuW1VNSljjW0V4omlkhR0UGR5vrLryalSsafEIyVqsThuQNvx+Pe7Ls3WHS6mOUC&#xA;+E7+7r9hfPj6T5v82eYNP8sack131/R1oarFEHNJ5G7KA6Hmx8KdgMzMFQxgy2cbtnKM+sySgbjK&#xA;RIZve+TtA0S4f8sLqHS7nVrq6gM3mkzSK8E0nH04eVOEbKvqj0mNH5KTRhhEyfXvXc4PAB6WI6h5&#xA;Z83fl55tvtC1JntRPbTxzSxE/V7u1KMUcHYMhdVO/wBlhvQjJGUckLCcIMMovveneTPJ0S29npWu&#xA;rPYX3meS3udHdIbedlEJlETSW8yGb0/tPK0TqVUx8tieODhiYRsdOb0XtF2mNZqjKP0R9MfOuvxP&#xA;2U+oLO0gs7SC0gBWC3jSKIEliERQq1JqTsO+YhNm3VK2BXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yqlut2mv3C2x0bUYdPkil53H1i1N2k0fBl9MqJbdl+Jg1VatQO1ayiR1FoN9FPyt5eh8v6NHp0cz&#xA;3UnqTXF1eShRJNcXMrTTStxAHxSSGg7Cg7YZz4jaxFBNsgl2KuxV2KuxV2KuxV2KuxV2KoXVk1N9&#xA;Muk0qWKHUmiYWktwpeJZafCXVSpIr/memGNXvyQXgOu/ltc/4m0nRhPfx67dxK+reZIUmaFp5Ekd&#xA;nYMsUcyQiFVkk9VHJkUnlTgM4z4ok8h03Tgy+FP6Yy7+IWP0H5EMVi/L/wAzX1zpOmDULP1vMSW+&#xA;rWfrxzC4kUpJ6crukMqh4o15MPV5KCPobkIn1HbyH63M/NaaWQSOAcvpE5CJPQ8idt9hLu7tzXyt&#xA;5Fe/s7PzHbW915snhvTBd6feKIfQuYXikaN4mmk+2rOqzM/FCVZo6HkpvhNE9HF1GoGX6YRhHuF/&#xA;eST9teT3byR5JXyvHfRrqV5fxXc7SwR3cryehG3xen8TOGbkTWTq21d6k4mXLx1s1RjTJ8qZuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVTuPq/wBXl+s8&#xA;Pq/BvW9SnDhT4uXLbjTrXCFSyD/CP1qw+r/o/wCtelD+jPT9H1PR9Kb0PQp8XD0fX4cduPOm3LJH&#xA;i35o2Relfoj6qf0T9X+q+o9fqvD0/U5H1P7vbly+174JXe6ikZkUuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:InstanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F87F117407206811AFA6A99C165E9A27</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stRef:instanceID>
            <stRef:documentID>xmp.did:8761C994412368119109824FDF4D96F1</stRef:documentID>
            <stRef:originalDocumentID>uuid:5B20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CF7F11740720681191099C3B601C4548</stEvt:instanceID>
                  <stEvt:when>2008-04-17T14:19:07+05:30</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/pdf to &lt;unknown&gt;</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0080117407206811BDDDFD38D0CF24DD</stEvt:instanceID>
                  <stEvt:when>2008-05-16T12:18:29-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811B628E3BF27C8C41B</stEvt:instanceID>
                  <stEvt:when>2008-05-22T12:59:33-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:params>from application/vnd.adobe.illustrator to application/vnd.adobe.illustrator</stEvt:params>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0BC3BD25102DDD1181B594070CEB88D9</stEvt:instanceID>
                  <stEvt:when>2008-05-28T17:02:32-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:10-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811BB1DBF8F242B6F84</stEvt:instanceID>
                  <stEvt:when>2008-06-09T15:05:47-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F77F117407206811ACAFB8DA80854E76</stEvt:instanceID>
                  <stEvt:when>2008-06-11T14:30:01-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FEE440664A3DDD11BD33D3EB8D3A1068</stEvt:instanceID>
                  <stEvt:when>2008-06-18T22:22:44+07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2F85BBCD703EDD11A8D1DFE8FDCD79D1</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:30:09-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:676AE2A5723EDD11A6F1BABF7C5A7A51</stEvt:instanceID>
                  <stEvt:when>2008-06-19T19:43:22-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:81784906200A11689FE8CB9EA85C5459</stEvt:instanceID>
                  <stEvt:when>2008-06-26T06:08:19-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>
                     <rdf:Bag>
                        <rdf:li>/</rdf:li>
                     </rdf:Bag>
                  </stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FC7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:07:10+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:FE7F1174072068119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:11+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8661C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8761C994412368119109824FDF4D96F1</stEvt:instanceID>
                  <stEvt:when>2009-08-04T12:39:19+01:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F87F117407206811AFA6A99C165E9A27</stEvt:instanceID>
                  <stEvt:when>2009-11-12T11:05:09Z</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Basic CMYK</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>296.999959</stDim:w>
            <stDim:h>60.000472</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 282 CVU</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>100.000000</xmpG:cyan>
                           <xmpG:magenta>68.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>54.000004</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 199 U</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>62.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -85.1973 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 85.1973 li
531.291 85.1973 li
531.291 0 li
cp
clp
[1 0 0 1 0 0 ]ct
115.202 45.7871 mo
115.202 47.9941 115.618 48.6025 117.186 48.6025 cv
117.186 49.1465 li
110.69 49.1465 li
110.69 48.6025 li
112.002 48.6025 112.77 48.2188 112.77 45.6914 cv
112.77 31.7075 li
110.114 31.7075 li
107.65 31.7075 106.53 32.4116 106.37 34.3315 cv
105.826 34.3315 li
105.826 30.1396 li
106.37 30.1396 li
106.626 30.3638 106.914 30.5239 107.362 30.6519 cv
107.778 30.748 108.354 30.812 109.122 30.812 cv
118.721 30.812 li
120.321 30.812 121.057 30.6196 121.633 30.1396 cv
122.209 30.1396 li
122.209 34.3315 li
121.857 34.3315 li
121.505 32.7959 120.897 31.7075 117.985 31.7075 cv
115.202 31.7075 li
115.202 45.7871 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
1 .68 0 .54 cmyk
f
129.025 40.3789 mo
129.025 45.6914 li
129.025 47.8984 129.569 48.6025 131.137 48.6025 cv
131.137 49.1465 li
124.514 49.1465 li
124.514 48.6025 li
125.922 48.6025 126.594 48.123 126.594 45.6914 cv
126.594 34.2676 li
126.594 32.0918 126.146 31.356 124.514 31.356 cv
124.514 30.812 li
131.137 30.812 li
131.137 31.356 li
129.697 31.356 129.025 31.9316 129.025 34.2676 cv
129.025 39.4834 li
139.009 39.4834 li
139.009 34.2676 li
139.009 32.0278 138.529 31.356 136.961 31.356 cv
136.961 30.812 li
143.521 30.812 li
143.521 31.356 li
141.953 31.356 141.44 32.0918 141.44 34.2676 cv
141.44 45.6914 li
141.44 47.8672 141.953 48.6025 143.521 48.6025 cv
143.521 49.1465 li
136.961 49.1465 li
136.961 48.6025 li
138.401 48.6025 139.009 48.123 139.009 45.6914 cv
139.009 40.3789 li
129.025 40.3789 li
cp
f
158.273 42.2031 mo
157.729 42.2031 li
157.345 40.6353 157.057 40.4434 155.169 40.4434 cv
150.625 40.4434 li
150.625 47.002 li
150.625 47.8984 150.945 48.25 151.969 48.25 cv
155.169 48.25 li
157.857 48.25 158.529 48.123 159.617 45.7227 cv
160.161 45.7227 li
159.329 49.1465 li
146.114 49.1465 li
146.114 48.6025 li
147.554 48.6025 148.194 48.1543 148.194 45.7227 cv
148.194 34.2676 li
148.194 31.9956 147.682 31.356 146.114 31.356 cv
146.114 30.812 li
159.329 30.812 li
159.329 33.8838 li
158.977 33.8838 li
158.561 31.8677 157.921 31.7075 155.905 31.7075 cv
150.625 31.7075 li
150.625 39.5474 li
155.745 39.5474 li
156.993 39.5474 157.473 39.3232 157.729 37.7554 cv
158.273 37.7554 li
158.273 42.2031 li
cp
f
184.8 46.5869 mo
183.04 48.6348 181.12 49.5938 178.688 49.5938 cv
174.241 49.5938 172.449 46.459 172.449 43.291 cv
172.449 34.2676 li
172.449 31.8359 171.809 31.356 170.369 31.356 cv
170.369 30.812 li
176.993 30.812 li
176.993 31.356 li
175.489 31.356 174.881 31.8999 174.881 34.2354 cv
174.881 43.5146 li
174.881 46.3301 176.449 48.3467 179.552 48.3467 cv
181.664 48.3467 183.52 47.291 184.8 45.3066 cv
184.8 34.2676 li
184.8 32.1558 184.32 31.4199 182.848 31.356 cv
182.848 30.812 li
189.312 30.812 li
189.312 31.356 li
187.776 31.356 187.232 32.0596 187.232 34.2676 cv
187.232 45.6914 li
187.232 48.0898 187.904 48.6025 189.312 48.6025 cv
189.312 49.1465 li
184.8 49.1465 li
184.8 46.5869 li
cp
f
208.608 49.1465 mo
208.064 49.1465 li
195.137 33.2114 li
195.073 33.2114 li
195.073 46.0742 li
195.073 47.9307 195.809 48.6025 197.473 48.6025 cv
197.473 49.1465 li
191.905 49.1465 li
191.905 48.6025 li
193.441 48.6025 194.177 48.123 194.177 45.4668 cv
194.177 34.7476 li
194.177 32.6997 193.633 31.5479 191.457 31.356 cv
191.457 30.812 li
196.161 30.812 li
207.616 45.083 li
207.68 45.083 li
207.68 34.3638 li
207.68 31.9639 207.04 31.356 205.44 31.356 cv
205.44 30.812 li
210.976 30.812 li
210.976 31.356 li
209.184 31.356 208.608 32.0918 208.608 34.2354 cv
208.608 49.1465 li
cp
f
217.888 45.6914 mo
217.888 47.9307 218.432 48.6025 219.968 48.6025 cv
219.968 49.1465 li
213.376 49.1465 li
213.376 48.6025 li
214.88 48.6025 215.457 48.0264 215.457 45.6914 cv
215.457 34.2676 li
215.457 31.9639 214.944 31.356 213.376 31.356 cv
213.376 30.812 li
219.968 30.812 li
219.968 31.356 li
218.432 31.356 217.888 32.0596 217.888 34.2676 cv
217.888 45.6914 li
cp
f
230.976 49.4023 mo
230.464 49.4023 li
224.801 34.5234 li
223.937 32.2837 223.489 31.4199 221.761 31.356 cv
221.761 30.812 li
228.417 30.812 li
228.417 31.356 li
227.104 31.356 226.464 32.0596 227.008 33.4995 cv
231.488 45.3389 li
235.744 33.9155 li
236.32 32.3477 236.032 31.356 234.368 31.356 cv
234.368 30.812 li
239.711 30.812 li
239.711 31.3877 li
238.335 31.3877 237.312 32.4438 236.384 34.9395 cv
230.976 49.4023 li
cp
f
253.728 42.2031 mo
253.184 42.2031 li
252.8 40.6353 252.512 40.4434 250.624 40.4434 cv
246.08 40.4434 li
246.08 47.002 li
246.08 47.8984 246.4 48.25 247.424 48.25 cv
250.624 48.25 li
253.312 48.25 253.983 48.123 255.071 45.7227 cv
255.615 45.7227 li
254.783 49.1465 li
241.568 49.1465 li
241.568 48.6025 li
243.008 48.6025 243.648 48.1543 243.648 45.7227 cv
243.648 34.2676 li
243.648 31.9956 243.136 31.356 241.568 31.356 cv
241.568 30.812 li
254.783 30.812 li
254.783 33.8838 li
254.432 33.8838 li
254.016 31.8677 253.375 31.7075 251.36 31.7075 cv
246.08 31.7075 li
246.08 39.5474 li
251.2 39.5474 li
252.448 39.5474 252.928 39.3232 253.184 37.7554 cv
253.728 37.7554 li
253.728 42.2031 li
cp
f
262.72 39.8989 mo
264.959 39.8989 li
268.063 39.8989 269.279 37.7871 269.279 35.6753 cv
269.279 33.2437 267.456 31.5156 264.64 31.5156 cv
262.72 31.5156 li
262.72 39.8989 li
cp
262.72 45.6914 mo
262.72 47.9307 263.296 48.6025 264.8 48.6025 cv
264.8 49.1465 li
258.208 49.1465 li
258.208 48.6025 li
259.616 48.6025 260.288 48.1543 260.288 45.6914 cv
260.288 34.2036 li
260.288 31.8037 259.68 31.356 258.208 31.356 cv
258.208 30.812 li
265.728 30.812 li
269.855 30.812 271.839 33.1797 271.839 35.6113 cv
271.839 37.6274 270.751 39.3232 268.063 40.123 cv
271.487 42.3311 272.639 48.3789 275.679 48.6025 cv
275.679 49.1465 li
271.935 49.1465 li
268.511 44.9863 267.551 40.667 264.191 40.667 cv
262.72 40.667 li
262.72 45.6914 li
cp
f
287.199 34.8438 mo
286.655 34.8438 li
286.367 32.1235 284.447 31.0679 282.592 31.0679 cv
280.672 31.0679 279.296 32.1235 279.296 33.8198 cv
279.296 37.2114 283.967 38.1074 286.592 40.731 cv
287.871 42.0112 288.191 43.1631 288.191 44.3789 cv
288.191 47.2588 285.855 49.5938 282.976 49.5938 cv
281.023 49.5938 279.392 48.6348 278.783 48.6348 cv
278.464 48.6348 278.24 48.8584 278.08 49.3379 cv
277.536 49.3379 li
277.536 44.3789 li
278.08 44.3789 li
278.111 47.7705 280.896 48.8906 282.496 48.8906 cv
284.703 48.8906 286.176 47.6104 286.176 45.627 cv
286.176 42.459 281.248 40.9873 279.199 38.9395 cv
278.08 37.8193 277.632 36.5396 277.632 35.0996 cv
277.632 32.2837 279.648 30.3638 282.623 30.3638 cv
284.576 30.3638 285.504 31.0679 286.207 31.0679 cv
286.495 31.0679 286.56 31.0039 286.688 30.5557 cv
287.199 30.5557 li
287.199 34.8438 li
cp
f
294.848 45.6914 mo
294.848 47.9307 295.391 48.6025 296.928 48.6025 cv
296.928 49.1465 li
290.336 49.1465 li
290.336 48.6025 li
291.84 48.6025 292.416 48.0264 292.416 45.6914 cv
292.416 34.2676 li
292.416 31.9639 291.903 31.356 290.336 31.356 cv
290.336 30.812 li
296.928 30.812 li
296.928 31.356 li
295.391 31.356 294.848 32.0596 294.848 34.2676 cv
294.848 45.6914 li
cp
f
308.287 45.7871 mo
308.287 47.9941 308.703 48.6025 310.271 48.6025 cv
310.271 49.1465 li
303.775 49.1465 li
303.775 48.6025 li
305.088 48.6025 305.855 48.2188 305.855 45.6914 cv
305.855 31.7075 li
303.199 31.7075 li
300.736 31.7075 299.615 32.4116 299.455 34.3315 cv
298.912 34.3315 li
298.912 30.1396 li
299.455 30.1396 li
299.712 30.3638 300 30.5239 300.447 30.6519 cv
300.863 30.748 301.439 30.812 302.207 30.812 cv
311.807 30.812 li
313.406 30.812 314.143 30.6196 314.719 30.1396 cv
315.295 30.1396 li
315.295 34.3315 li
314.942 34.3315 li
314.591 32.7959 313.982 31.7075 311.07 31.7075 cv
308.287 31.7075 li
308.287 45.7871 li
cp
f
326.303 45.6914 mo
326.303 47.8984 326.75 48.6025 328.318 48.6025 cv
328.318 49.1465 li
321.631 49.1465 li
321.631 48.6025 li
323.039 48.6025 323.871 48.3145 323.871 45.6914 cv
323.871 39.9312 li
319.967 33.8516 li
318.688 31.8359 318.143 31.4199 316.703 31.356 cv
316.703 30.812 li
323.871 30.812 li
323.871 31.356 li
321.855 31.356 321.631 32.0596 322.367 33.1797 cv
325.982 38.7471 li
328.895 34.1396 li
329.791 32.6997 329.854 31.356 328.318 31.356 cv
328.318 30.812 li
333.342 30.812 li
333.342 31.356 li
331.934 31.4517 331.454 31.8359 330.43 33.4355 cv
326.303 39.9312 li
326.303 45.6914 li
cp
f
344.99 39.1953 mo
342.942 39.1953 341.118 42.2031 341.118 45.627 cv
341.118 47.418 341.95 48.5703 343.262 48.5703 cv
345.374 48.5703 347.166 45.5625 347.166 42.043 cv
347.166 40.4751 346.27 39.1953 344.99 39.1953 cv
cp
342.559 49.498 mo
340.606 49.498 339.23 47.9629 339.23 45.7871 cv
339.23 41.979 342.494 38.2671 345.822 38.2671 cv
347.55 38.2671 349.054 39.9312 349.054 41.8828 cv
349.054 44.7949 346.494 49.498 342.559 49.498 cv
cp
f
357.277 39.4834 mo
355.037 39.4834 li
353.277 48.8262 li
352.574 52.6016 352.029 54.5215 350.27 56.2813 cv
349.502 57.0498 347.838 57.9453 346.014 57.9453 cv
344.51 57.9453 343.135 57.626 342.303 57.082 cv
342.783 54.8418 li
343.326 54.8418 li
343.646 56.5059 344.799 57.3057 346.11 57.3057 cv
347.198 57.3057 348.383 56.8262 349.086 56.1221 cv
350.143 55.0664 350.814 52.9219 351.294 50.2988 cv
353.311 39.4834 li
351.07 39.4834 li
351.166 38.6191 li
353.406 38.6191 li
354.205 34.7476 li
354.654 32.5396 355.55 29.3721 359.613 29.3081 cv
360.317 29.3081 360.893 29.436 361.789 29.7241 cv
361.885 29.3398 li
362.525 29.3398 li
361.917 32.2197 li
361.277 32.2197 li
361.213 31.5479 360.989 29.9478 359.262 29.9478 cv
357.629 29.9478 356.67 31.2275 356.125 33.8516 cv
355.134 38.6191 li
357.373 38.6191 li
357.277 39.4834 li
cp
f
377.949 42.2031 mo
377.404 42.2031 li
377.021 40.6353 376.732 40.4434 374.845 40.4434 cv
370.301 40.4434 li
370.301 47.002 li
370.301 47.8984 370.621 48.25 371.645 48.25 cv
374.845 48.25 li
377.533 48.25 378.205 48.123 379.293 45.7227 cv
379.836 45.7227 li
379.004 49.1465 li
365.789 49.1465 li
365.789 48.6025 li
367.229 48.6025 367.869 48.1543 367.869 45.7227 cv
367.869 34.2676 li
367.869 31.9956 367.357 31.356 365.789 31.356 cv
365.789 30.812 li
379.004 30.812 li
379.004 33.8838 li
378.652 33.8838 li
378.236 31.8677 377.597 31.7075 375.581 31.7075 cv
370.301 31.7075 li
370.301 39.5474 li
375.421 39.5474 li
376.669 39.5474 377.148 39.3232 377.404 37.7554 cv
377.949 37.7554 li
377.949 42.2031 li
cp
f
386.845 45.0508 mo
386.845 47.8984 387.484 48.4424 389.181 48.4424 cv
391.068 48.4424 li
395.612 48.4424 398.332 45.3066 398.332 40.3149 cv
398.332 35.9316 396.124 31.5156 390.332 31.5156 cv
386.845 31.5156 li
386.845 45.0508 li
cp
384.413 34.2676 mo
384.413 32.0596 383.869 31.356 382.333 31.356 cv
382.333 30.812 li
390.813 30.812 li
397.82 30.812 401.148 35.5156 401.148 40.2832 cv
401.148 44.8906 398.236 49.1465 391.037 49.1465 cv
382.333 49.1465 li
382.333 48.6025 li
383.805 48.6025 384.413 47.9629 384.413 45.6914 cv
384.413 34.2676 li
cp
f
408.381 45.6914 mo
408.381 47.9307 408.925 48.6025 410.461 48.6025 cv
410.461 49.1465 li
403.869 49.1465 li
403.869 48.6025 li
405.373 48.6025 405.949 48.0264 405.949 45.6914 cv
405.949 34.2676 li
405.949 31.9639 405.438 31.356 403.869 31.356 cv
403.869 30.812 li
410.461 30.812 li
410.461 31.356 li
408.925 31.356 408.381 32.0596 408.381 34.2676 cv
408.381 45.6914 li
cp
f
429.404 49.1465 mo
428.859 49.1465 li
415.933 33.2114 li
415.869 33.2114 li
415.869 46.0742 li
415.869 47.9307 416.604 48.6025 418.269 48.6025 cv
418.269 49.1465 li
412.701 49.1465 li
412.701 48.6025 li
414.236 48.6025 414.973 48.123 414.973 45.4668 cv
414.973 34.7476 li
414.973 32.6997 414.429 31.5479 412.253 31.356 cv
412.253 30.812 li
416.957 30.812 li
428.412 45.083 li
428.476 45.083 li
428.476 34.3638 li
428.476 31.9639 427.836 31.356 426.236 31.356 cv
426.236 30.812 li
431.771 30.812 li
431.771 31.356 li
429.979 31.356 429.404 32.0918 429.404 34.2354 cv
429.404 49.1465 li
cp
f
438.94 45.3711 mo
438.94 47.834 439.389 48.4424 440.828 48.4424 cv
442.332 48.4424 li
444.188 48.4424 445.947 47.1953 445.947 44.5068 cv
445.947 41.8188 443.9 39.9951 440.668 39.9951 cv
438.94 39.9951 li
438.94 45.3711 li
cp
440.828 39.291 mo
443.516 39.291 445.148 37.7554 445.148 35.4517 cv
445.148 33.1475 443.74 31.5156 440.764 31.5156 cv
438.94 31.5156 li
438.94 39.291 li
440.828 39.291 li
cp
436.508 34.2676 mo
436.508 31.9316 435.965 31.356 434.429 31.356 cv
434.429 30.812 li
441.34 30.812 li
445.756 30.812 447.707 32.9556 447.707 35.2915 cv
447.707 37.3071 446.556 38.6191 444.027 39.4512 cv
444.027 39.5151 li
446.844 40.0913 448.764 42.2031 448.764 44.667 cv
448.764 47.418 446.332 49.1465 442.876 49.1465 cv
434.429 49.1465 li
434.429 48.6025 li
435.965 48.6025 436.508 47.9307 436.508 45.6914 cv
436.508 34.2676 li
cp
f
465.563 46.5869 mo
463.804 48.6348 461.884 49.5938 459.452 49.5938 cv
455.004 49.5938 453.213 46.459 453.213 43.291 cv
453.213 34.2676 li
453.213 31.8359 452.572 31.356 451.133 31.356 cv
451.133 30.812 li
457.756 30.812 li
457.756 31.356 li
456.252 31.356 455.645 31.8999 455.645 34.2354 cv
455.645 43.5146 li
455.645 46.3301 457.213 48.3467 460.316 48.3467 cv
462.428 48.3467 464.283 47.291 465.563 45.3066 cv
465.563 34.2676 li
465.563 32.1558 465.084 31.4199 463.611 31.356 cv
463.611 30.812 li
470.075 30.812 li
470.075 31.356 li
468.539 31.356 467.996 32.0596 467.996 34.2676 cv
467.996 45.6914 li
467.996 48.0898 468.668 48.6025 470.075 48.6025 cv
470.075 49.1465 li
465.563 49.1465 li
465.563 46.5869 li
cp
f
477.212 39.8989 mo
479.451 39.8989 li
482.556 39.8989 483.771 37.7871 483.771 35.6753 cv
483.771 33.2437 481.947 31.5156 479.132 31.5156 cv
477.212 31.5156 li
477.212 39.8989 li
cp
477.212 45.6914 mo
477.212 47.9307 477.788 48.6025 479.292 48.6025 cv
479.292 49.1465 li
472.7 49.1465 li
472.7 48.6025 li
474.107 48.6025 474.78 48.1543 474.78 45.6914 cv
474.78 34.2036 li
474.78 31.8037 474.172 31.356 472.7 31.356 cv
472.7 30.812 li
480.22 30.812 li
484.348 30.812 486.331 33.1797 486.331 35.6113 cv
486.331 37.6274 485.243 39.3232 482.556 40.123 cv
485.979 42.3311 487.131 48.3789 490.171 48.6025 cv
490.171 49.1465 li
486.428 49.1465 li
483.004 44.9863 482.043 40.667 478.684 40.667 cv
477.212 40.667 li
477.212 45.6914 li
cp
f
507.579 49.1465 mo
506.555 49.4346 503.291 49.5938 502.459 49.5938 cv
494.396 49.5938 491.708 44.7305 491.708 40.5073 cv
491.708 34.0117 496.636 30.3638 501.147 30.3638 cv
503.739 30.3638 504.731 31.2275 506.139 31.2275 cv
506.715 31.2275 506.971 31.0679 507.163 30.6196 cv
507.739 30.6196 li
507.739 36.0273 li
507.227 36.0273 li
506.747 32.5396 503.644 31.0679 501.147 31.0679 cv
497.371 31.0679 494.523 34.3638 494.523 39.3872 cv
494.523 44.7627 497.724 48.7305 502.075 48.7305 cv
503.387 48.7305 505.146 48.4102 505.146 46.7793 cv
505.146 44.7949 li
505.146 42.5552 504.635 41.7549 503.131 41.7549 cv
502.428 41.7549 li
502.428 41.2109 li
509.852 41.2109 li
509.852 41.7549 li
508.059 41.7549 507.579 42.6191 507.579 44.2188 cv
507.579 49.1465 li
cp
f
516.795 40.3789 mo
516.795 45.6914 li
516.795 47.8984 517.34 48.6025 518.907 48.6025 cv
518.907 49.1465 li
512.283 49.1465 li
512.283 48.6025 li
513.691 48.6025 514.363 48.123 514.363 45.6914 cv
514.363 34.2676 li
514.363 32.0918 513.916 31.356 512.283 31.356 cv
512.283 30.812 li
518.907 30.812 li
518.907 31.356 li
517.467 31.356 516.795 31.9316 516.795 34.2676 cv
516.795 39.4834 li
526.779 39.4834 li
526.779 34.2676 li
526.779 32.0278 526.299 31.356 524.73 31.356 cv
524.73 30.812 li
531.291 30.812 li
531.291 31.356 li
529.723 31.356 529.211 32.0918 529.211 34.2676 cv
529.211 45.6914 li
529.211 47.8672 529.723 48.6025 531.291 48.6025 cv
531.291 49.1465 li
524.73 49.1465 li
524.73 48.6025 li
526.171 48.6025 526.779 48.123 526.779 45.6914 cv
526.779 40.3789 li
516.795 40.3789 li
cp
f
6.34131 34.0342 mo
7.08301 34.1987 7.31836 34.1055 7.43652 33.5786 cv
7.61963 33.6191 li
7.13184 35.8027 li
6.94824 35.7612 li
7.04736 35.3198 6.97607 35.0342 6.12549 34.8442 cv
1.42676 33.792 li
1.22656 34.6851 li
1.04102 35.5137 1.19385 35.9424 1.82666 36.1406 cv
1.78613 36.3237 li
.377441 36.0078 li
.417969 35.8247 li
.512695 35.7559 .587891 35.6714 .664551 35.5308 cv
.727539 35.3975 .79248 35.208 .851074 34.9512 cv
1.57227 31.7246 li
1.69238 31.1865 1.68359 30.9258 1.56543 30.6953 cv
1.6084 30.502 li
3.01758 30.8164 li
2.99121 30.9351 li
2.44873 30.9385 2.03711 31.0605 1.81787 32.0405 cv
1.6084 32.9751 li
6.34131 34.0342 li
cp
f
6.67334 27.0249 mo
8.31738 27.8271 li
9.00098 28.1602 9.30176 28.0981 9.53857 27.6128 cv
9.70654 27.6943 li
8.70605 29.7461 li
8.5376 29.6631 li
8.75098 29.2271 8.70313 28.9473 7.9502 28.5796 cv
4.41406 26.8545 li
3.74121 26.5259 3.4458 26.5537 3.19922 27.0596 cv
3.03076 26.9766 li
4.03125 24.9263 li
4.19922 25.0093 li
3.98193 25.4541 4.05811 25.7495 4.78125 26.1021 cv
6.396 26.8901 li
7.90332 23.7993 li
6.28906 23.0122 li
5.59619 22.6733 5.31543 22.7207 5.07861 23.2061 cv
4.91016 23.124 li
5.90088 21.0938 li
6.06934 21.1753 li
5.83252 21.6606 5.98291 21.9302 6.65674 22.2588 cv
10.1929 23.9839 li
10.8662 24.3125 11.1714 24.2651 11.4082 23.7798 cv
11.5767 23.8618 li
10.5854 25.8921 li
10.417 25.8105 li
10.6348 25.3657 10.5786 25.104 9.82471 24.7373 cv
8.18164 23.9341 li
6.67334 27.0249 li
cp
f
14.1387 16.6431 mo
14.019 16.7871 li
13.5195 16.543 13.4048 16.5762 12.9888 17.0762 cv
11.9873 18.2783 li
13.7227 19.7246 li
13.9609 19.9229 14.124 19.916 14.3496 19.644 cv
15.0557 18.7979 li
15.6475 18.0859 15.7612 17.8809 15.3667 17.0635 cv
15.4868 16.9194 li
16.209 17.8945 li
13.2964 21.3911 li
13.1523 21.271 li
13.4692 20.8906 13.4917 20.6221 12.8481 20.0864 cv
9.81738 17.5615 li
9.21533 17.0601 8.93359 17.0542 8.58838 17.4692 cv
8.44385 17.3496 li
11.3569 13.8521 li
12.1699 14.5293 li
12.0918 14.623 li
11.4678 14.2886 11.2837 14.4224 10.8394 14.9561 cv
9.6748 16.3525 li
11.7505 18.0811 li
12.8789 16.7261 li
13.1533 16.3965 13.2002 16.2202 12.8413 15.8062 cv
12.9619 15.6621 li
14.1387 16.6431 li
cp
f
25.9683 9.52832 mo
25.7861 10.4395 25.3726 11.0527 24.6426 11.4639 cv
23.3081 12.2153 22.2407 11.5771 21.7056 10.6265 cv
20.1792 7.91943 li
19.7686 7.18994 19.4951 7.15283 19.0635 7.39746 cv
18.9722 7.2334 li
20.959 6.11328 li
21.0508 6.27734 li
20.5996 6.53174 20.5088 6.79688 20.9038 7.49854 cv
22.4727 10.2827 li
22.9492 11.1274 23.7603 11.4678 24.6914 10.9434 cv
25.3252 10.5859 25.7031 9.95557 25.7524 9.14453 cv
23.8862 5.83105 li
23.5293 5.19727 23.2603 5.05811 22.8086 5.28711 cv
22.7163 5.12451 li
24.6553 4.03125 li
24.7471 4.19482 li
24.2861 4.4541 24.2427 4.75732 24.6157 5.41992 cv
26.5464 8.84814 li
26.9526 9.56836 27.2397 9.60742 27.6631 9.37012 cv
27.7544 9.53369 li
26.4014 10.2954 li
25.9683 9.52832 li
cp
f
35.981 7.03076 mo
35.7988 7.07813 li
30.1245 2.86621 li
30.103 2.87061 li
31.2026 7.16211 li
31.3608 7.78223 31.6636 7.94336 32.2188 7.80078 cv
32.2651 7.98291 li
30.4087 8.4585 li
30.3613 8.27637 li
30.874 8.14502 31.0786 7.92285 30.8516 7.03662 cv
29.9355 3.45947 li
29.7603 2.77637 29.481 2.43848 28.7383 2.56055 cv
28.6919 2.37988 li
30.2617 1.97754 li
35.3027 5.75977 li
35.3237 5.75391 li
34.4077 2.17822 li
34.2031 1.37695 33.937 1.22949 33.4043 1.36572 cv
33.3569 1.18457 li
35.2041 .712402 li
35.2505 .893066 li
34.6523 1.04639 34.5229 1.34131 34.7065 2.05566 cv
35.981 7.03076 li
cp
f
41.1294 5.34717 mo
41.1675 6.11816 41.3662 6.33936 41.8945 6.31299 cv
41.9033 6.50049 li
39.6362 6.61377 li
39.6265 6.42578 li
40.144 6.40039 40.332 6.19189 40.2925 5.38867 cv
40.0972 1.45898 li
40.0581 .666992 39.8711 .466797 39.332 .493164 cv
39.3223 .306641 li
41.5903 .193359 li
41.5991 .380371 li
41.0703 .406738 40.8955 .658203 40.9336 1.41748 cv
41.1294 5.34717 li
cp
f
47.5083 6.93066 mo
47.3345 6.90771 li
46.0762 1.5708 li
45.8823 .766113 45.769 .45166 45.1816 .350098 cv
45.2065 .165039 li
47.479 .466797 li
47.4536 .65332 li
47.0063 .593262 46.7559 .804199 46.8765 1.32178 cv
47.8687 5.56592 li
49.8398 1.85986 li
50.1069 1.35059 50.0542 .999023 49.4858 .922852 cv
49.5112 .737305 li
51.335 .980469 li
51.3086 1.17676 li
50.8389 1.11426 50.4414 1.4292 50.0107 2.23779 cv
47.5083 6.93066 li
cp
f
57.4683 7.05273 mo
57.2925 6.98828 li
57.354 6.43604 57.2832 6.33936 56.6729 6.11572 cv
55.2036 5.57861 li
54.4277 7.7002 li
54.3208 7.98975 54.3823 8.1416 54.7139 8.2627 cv
55.7495 8.64209 li
56.6182 8.95996 56.8511 8.99805 57.4873 8.3501 cv
57.6631 8.41504 li
56.9888 9.42334 li
52.7144 7.85938 li
52.7788 7.68408 li
53.2446 7.85352 53.5039 7.78467 53.7915 6.99854 cv
55.1479 3.29346 li
55.417 2.55811 55.3271 2.29102 54.8188 2.10547 cv
54.8833 1.9292 li
59.1582 3.49316 li
58.7949 4.48633 li
58.6807 4.44482 li
58.7842 3.74414 58.5962 3.61621 57.9448 3.37793 cv
56.2368 2.75293 li
55.3091 5.28857 li
56.9658 5.89453 li
57.3687 6.04199 57.5503 6.02588 57.8184 5.5498 cv
57.9946 5.61426 li
57.4683 7.05273 li
cp
f
62.9082 9.25977 mo
63.3311 9.53857 li
64.2974 10.1748 63.7559 11.5991 63.9512 13.4438 cv
65.0288 14.1538 li
65.1309 13.9971 li
64.2998 13.3564 65.1133 11.3994 64.5479 10.1157 cv
65.4731 10.3945 66.1055 10.1133 66.4868 9.53369 cv
66.9478 8.83447 66.8267 7.77637 65.6396 6.99512 cv
63.4775 5.56934 li
63.376 5.72607 li
63.7983 6.00537 63.8887 6.24951 63.4326 6.93994 cv
61.2578 10.2427 li
60.79 10.9526 60.5122 10.9536 60.1069 10.686 cv
60.0044 10.8428 li
61.9004 12.0923 li
62.0034 11.9355 li
61.5708 11.6509 61.5327 11.3477 61.9575 10.7036 cv
62.9082 9.25977 li
cp
64.6416 6.62744 mo
65.1938 6.99023 li
66.0029 7.52539 66.1992 8.36768 65.7393 9.06689 cv
65.3403 9.67334 64.5913 10.0513 63.6987 9.4624 cv
63.0532 9.03809 li
64.6416 6.62744 li
cp
f
72.9663 14.9824 mo
72.8335 14.8486 li
73.4316 14.1216 73.2271 13.3945 72.7788 12.939 cv
72.3149 12.4678 71.7231 12.3862 71.3066 12.7949 cv
70.4746 13.6143 71.3838 14.979 71.374 16.2559 cv
71.3691 16.8794 71.1641 17.2363 70.8652 17.5303 cv
70.1577 18.2266 69.0205 18.2173 68.3242 17.5107 cv
67.853 17.0313 67.6943 16.3989 67.5479 16.25 cv
67.4702 16.1719 67.3608 16.1704 67.2041 16.2476 cv
67.0728 16.1128 li
68.2905 14.9155 li
68.4209 15.0493 li
67.5977 15.8765 67.9946 16.8296 68.3813 17.2227 cv
68.9155 17.7642 69.5845 17.8164 70.0718 17.3379 cv
70.8486 16.5718 70.02 15.0068 70.0273 14.0088 cv
70.0317 13.4634 70.2373 13.0439 70.5903 12.6958 cv
71.2822 12.0161 72.2402 12.0474 72.9585 12.7769 cv
73.4307 13.2559 73.4824 13.6538 73.6528 13.8267 cv
73.7222 13.897 73.7534 13.8979 73.8945 13.8208 cv
74.0176 13.9463 li
72.9663 14.9824 li
cp
f
73.501 21.7378 mo
72.8672 22.1768 72.7842 22.4629 73.0845 22.8984 cv
72.9312 23.0044 li
71.6377 21.1387 li
71.792 21.0327 li
72.0864 21.458 72.3623 21.5073 73.0234 21.0498 cv
76.2578 18.8086 li
76.9097 18.3564 76.9814 18.0928 76.6738 17.6479 cv
76.8271 17.542 li
78.1211 19.4077 li
77.9678 19.5146 li
77.6665 19.0806 77.3599 19.0645 76.7344 19.4976 cv
73.501 21.7378 li
cp
f
76.6445 27.4678 mo
75.9536 27.7847 75.8232 28.001 76.0479 28.4922 cv
75.8779 28.5703 li
74.9463 26.5376 li
75.1167 26.459 li
75.3047 26.8706 75.5352 27.0552 76.3267 26.6919 cv
80.7041 24.687 li
80.3232 23.855 li
79.9697 23.0825 79.5884 22.8335 78.9644 23.0586 cv
78.8862 22.8892 li
80.1992 22.2876 li
80.2769 22.457 li
80.2432 22.5698 80.2344 22.6826 80.2588 22.8408 cv
80.2891 22.9858 80.3521 23.1748 80.4614 23.4155 cv
81.8394 26.4214 li
82.0684 26.9224 82.2344 27.124 82.4673 27.2358 cv
82.5503 27.4155 li
81.2368 28.0186 li
81.1865 27.9077 li
81.6167 27.5771 81.8701 27.23 81.4526 26.3188 cv
81.0532 25.4473 li
76.6445 27.4678 li
cp
f
79.1343 35.1436 mo
78.3911 35.3037 78.1855 35.5054 78.2988 36.0322 cv
78.1162 36.0728 li
77.6338 33.8208 li
77.8169 33.7803 li
77.9185 34.2554 78.0747 34.5146 78.9585 34.3257 cv
80.8989 33.9097 li
82.665 32.1567 li
83.252 31.5806 83.3521 31.3672 83.2705 30.8774 cv
83.4531 30.8384 li
83.9697 33.2524 li
83.7866 33.292 li
83.6411 32.6118 83.3872 32.5879 83.064 32.916 cv
81.4497 34.5352 li
83.2119 35.1841 li
83.7607 35.3823 84.2183 35.3062 84.1074 34.7886 cv
84.291 34.7495 li
84.6528 36.4414 li
84.4697 36.4814 li
84.3359 36.0137 84.1724 35.8799 83.5591 35.6494 cv
81.0737 34.729 li
79.1343 35.1436 li
cp
f
3.97803 50.2256 mo
2.17676 50.7441 1.17725 52.5684 1.69873 54.3799 cv
2.21875 56.1904 4.03857 57.2148 5.83984 56.6963 cv
7.6084 56.1875 8.58691 54.3701 8.06982 52.5693 cv
7.53564 50.7158 5.77832 49.707 3.97803 50.2256 cv
cp
4.23584 51.1611 mo
5.99365 50.6563 7.43066 51.2275 7.84277 52.6582 cv
8.20166 53.9063 7.4248 55.2314 5.51807 55.7813 cv
4.04688 56.2041 2.36621 55.8281 1.92871 54.3018 cv
1.53516 52.9355 2.4668 51.6689 4.23584 51.1611 cv
cp
f
6.49365 62.4844 mo
5.82324 62.8662 5.71582 63.1436 5.97803 63.6035 cv
5.81543 63.6982 li
4.68896 61.7246 li
4.85254 61.6318 li
5.11475 62.0918 5.39893 62.1455 6.0791 61.7559 cv
9.49512 59.8076 li
10.1851 59.4141 10.2744 59.1484 10.0122 58.6885 cv
10.1738 58.5938 li
12.3208 62.3574 li
11.3442 62.9131 li
11.2739 62.79 li
11.8667 62.2734 11.8135 62.0889 11.4731 61.4941 cv
10.6758 60.0967 li
8.37891 61.4082 li
9.19287 62.835 li
9.42773 63.2461 9.72607 63.2783 10.1934 63.0762 cv
10.2813 63.2275 li
8.73975 64.1084 li
8.65283 63.9561 li
9.03418 63.7119 9.15479 63.3906 8.93555 63.0068 cv
8.11084 61.5615 li
6.49365 62.4844 li
cp
f
18.6035 74.6602 mo
18.458 74.542 li
18.6987 74.04 18.6636 73.9258 18.1606 73.5156 cv
16.9512 72.5205 li
15.5181 74.2676 li
15.3223 74.5068 15.3311 74.6709 15.604 74.8945 cv
16.4556 75.5928 li
17.1714 76.1797 17.3789 76.2939 18.1919 75.8906 cv
18.3374 76.0088 li
17.3687 76.7402 li
13.8491 73.8525 li
13.9673 73.709 li
14.3511 74.0234 14.6187 74.043 15.1499 73.3955 cv
17.6519 70.3447 li
18.1479 69.7402 18.1523 69.459 17.7344 69.1162 cv
17.8525 68.9717 li
21.3726 71.8574 li
20.7017 72.6748 li
20.6079 72.5996 li
20.9375 71.9707 20.8013 71.7891 20.2651 71.3486 cv
18.8589 70.1943 li
17.147 72.2822 li
18.5098 73.4014 li
18.8428 73.6729 19.0186 73.7178 19.4297 73.3564 cv
19.5747 73.4766 li
18.6035 74.6602 li
cp
f
22.9941 78.9463 mo
22.667 79.6592 22.3843 79.7705 21.9233 79.5596 cv
21.8457 79.7295 li
24.5684 80.9844 li
26.8203 82.0215 28.3447 81.1094 29.0083 79.6689 cv
29.6958 78.1777 29.3325 76.2266 27.1416 75.2148 cv
24.4893 73.9951 li
24.4097 74.1641 li
24.8916 74.3857 24.9595 74.6846 24.6406 75.374 cv
22.9941 78.9463 li
cp
25.7983 74.8652 mo
26.8892 75.3682 li
28.7007 76.2012 28.7549 77.9014 28.1226 79.2734 cv
27.4038 80.835 26.1001 81.4219 24.6797 80.7686 cv
24.0889 80.4971 li
23.5586 80.252 23.437 79.9893 23.8472 79.0977 cv
25.7983 74.8652 li
cp
f
34.1045 82.9307 mo
33.9385 83.6846 34.0713 83.9531 34.5879 84.0654 cv
34.5479 84.248 li
32.3306 83.7598 li
32.3711 83.5771 li
32.8765 83.6875 33.1133 83.5381 33.2866 82.751 cv
34.1333 78.9102 li
34.3032 78.1357 34.1758 77.8926 33.6484 77.7773 cv
33.689 77.5928 li
35.9053 78.082 li
35.8657 78.2646 li
35.3486 78.1504 35.1143 78.3467 34.9507 79.0898 cv
34.1045 82.9307 li
cp
f
45.5239 84.9678 mo
45.3374 84.9707 li
40.8252 79.5293 li
40.8027 79.5322 li
40.8516 83.9619 li
40.8584 84.6006 41.1143 84.8281 41.6875 84.8223 cv
41.6899 85.0107 li
39.7725 85.0303 li
39.77 84.8447 li
40.2983 84.8389 40.5508 84.6709 40.5405 83.7549 cv
40.5 80.0645 li
40.4927 79.3584 40.3008 78.9648 39.5498 78.9063 cv
39.5483 78.7188 li
41.1685 78.7002 li
45.1675 83.5723 li
45.1899 83.5713 li
45.1484 79.8799 li
45.1396 79.0527 44.9165 78.8477 44.3657 78.8535 cv
44.3643 78.665 li
46.271 78.6436 li
46.2725 78.8311 li
45.6553 78.8398 45.4595 79.0938 45.4678 79.832 cv
45.5239 84.9678 li
cp
f
52.1958 80.6748 mo
52.7705 80.5166 li
53.8428 80.2227 54.6895 80.6396 54.9351 81.5342 cv
55.1812 82.4258 54.7104 83.001 54.0938 83.1689 cv
53.5947 83.3086 li
53.1167 83.4395 52.9121 83.2773 52.687 82.459 cv
52.1958 80.6748 li
cp
51.9082 82.7871 mo
52.1133 83.5322 51.9941 83.8047 51.4839 83.9443 cv
51.5332 84.127 li
54.3384 83.3535 li
55.4858 83.0391 56.1357 82.2422 55.8843 81.3291 cv
55.6592 80.5107 54.8296 79.9834 53.8413 80.0508 cv
53.8359 80.0283 li
54.5986 79.5215 54.8618 78.9824 54.6782 78.3105 cv
54.4644 77.5361 53.6201 77.001 52.1538 77.4072 cv
49.8584 78.0371 li
49.9082 78.2168 li
50.4185 78.0781 50.6523 78.2197 50.8652 78.9961 cv
51.9082 82.7871 li
cp
52.1313 80.4424 mo
51.4209 77.8584 li
52.0264 77.6924 li
53.0146 77.4209 53.6323 77.833 53.8428 78.5986 cv
54.0527 79.3643 53.6509 80.0234 52.7583 80.2676 cv
52.1313 80.4424 li
cp
f
64.9727 77.6201 mo
64.8042 78.5342 64.3994 79.1543 63.6772 79.5742 cv
62.3545 80.3477 61.2764 79.7256 60.7266 78.7842 cv
59.1587 76.1006 li
58.7373 75.3779 58.4634 75.3467 58.0352 75.5957 cv
57.9404 75.4346 li
59.9102 74.2842 li
60.0049 74.4463 li
59.5581 74.707 59.4712 74.9746 59.8774 75.6689 cv
61.4883 78.4277 li
61.9775 79.2656 62.793 79.5928 63.7163 79.0547 cv
64.3447 78.6885 64.7144 78.0508 64.7495 77.2383 cv
62.832 73.9551 li
62.4663 73.3271 62.1958 73.1914 61.7471 73.4287 cv
61.6519 73.2666 li
63.5737 72.1455 li
63.6689 72.3057 li
63.2119 72.5742 63.1724 72.877 63.5557 73.5322 cv
65.54 76.9307 li
65.9551 77.6455 66.2437 77.6816 66.6621 77.4355 cv
66.7568 77.5967 li
65.417 78.3818 li
64.9727 77.6201 li
cp
f
69.7637 71.2764 mo
70.1196 70.9141 li
70.9326 70.0908 72.2246 70.9004 74.0728 71.0664 cv
74.9775 70.1494 li
74.8447 70.0166 li
74.0542 70.709 72.2925 69.5273 70.9229 69.835 cv
71.377 68.9805 71.2241 68.3037 70.7305 67.8164 cv
70.1338 67.2275 69.0728 67.1416 68.0747 68.1533 cv
66.2563 69.998 li
66.3896 70.1299 li
66.7456 69.7695 67.0024 69.7285 67.5908 70.3086 cv
70.4072 73.0869 li
71.0122 73.6836 70.9595 73.9551 70.6187 74.3008 cv
70.752 74.4326 li
72.3462 72.8154 li
72.2124 72.6855 li
71.8496 73.0527 71.5454 73.0313 70.9961 72.4893 cv
69.7637 71.2764 li
cp
67.52 69.0615 mo
67.9839 68.5908 li
68.665 67.9004 69.5298 67.8721 70.1265 68.4609 cv
70.644 68.9717 70.8682 69.7793 70.1182 70.541 cv
69.5757 71.0908 li
67.52 69.0615 li
cp
f
80.1377 62.4844 mo
80.0386 62.8379 79.5005 63.8271 79.3516 64.0713 cv
77.9067 66.4434 75.9951 66.3623 74.7524 65.6055 cv
72.8418 64.4434 72.6514 62.3389 73.46 61.0127 cv
73.9238 60.25 74.356 60.1133 74.6089 59.6982 cv
74.7114 59.5293 74.7104 59.4258 74.6123 59.2891 cv
74.7163 59.1182 li
76.3071 60.0879 li
76.2153 60.2383 li
75.1025 59.7549 74.1133 60.4043 73.6665 61.1387 cv
72.9902 62.249 73.4492 63.6758 74.9277 64.5762 cv
76.5088 65.541 78.2495 65.3105 79.0288 64.0303 cv
79.2637 63.6426 79.4849 63.0703 79.0044 62.7764 cv
78.4209 62.4219 li
77.7632 62.0215 77.4351 62.0273 77.166 62.4688 cv
77.04 62.6758 li
76.8794 62.5781 li
78.2104 60.3955 li
78.3691 60.4922 li
78.0488 61.0205 78.2173 61.3164 78.6875 61.6016 cv
80.1377 62.4844 li
cp
f
79.96 55.1982 mo
81.7178 55.7051 li
82.4482 55.916 82.7334 55.8018 82.8828 55.2832 cv
83.063 55.335 li
82.4307 57.5254 li
82.2505 57.4746 li
82.3848 57.0098 82.2896 56.7412 81.4854 56.5078 cv
77.7056 55.4189 li
76.9854 55.2119 76.6992 55.2881 76.5425 55.8281 cv
76.3628 55.7764 li
76.9956 53.5859 li
77.1758 53.6367 li
77.0381 54.1133 77.1646 54.3896 77.937 54.6123 cv
79.6641 55.1113 li
80.6172 51.8086 li
78.8906 51.3096 li
78.1489 51.0967 77.8813 51.1895 77.7314 51.708 cv
77.5518 51.6572 li
78.1777 49.4854 li
78.3579 49.5381 li
78.208 50.0566 78.4028 50.2979 79.123 50.5049 cv
82.9033 51.5957 li
83.6235 51.8027 83.916 51.7051 84.0654 51.1865 cv
84.2461 51.2373 li
83.6187 53.4072 li
83.4385 53.3564 li
83.5762 52.8789 83.4756 52.6328 82.6704 52.4014 cv
80.9136 51.8926 li
79.96 55.1982 li
cp
f
3.67236 43.1699 mo
3.6709 43.4775 3.42041 43.7256 3.1123 43.7227 cv
2.80615 43.7227 2.55811 43.4707 2.56055 43.166 cv
2.5625 42.8564 2.81299 42.6104 3.11914 42.6113 cv
3.42627 42.6147 3.67383 42.8633 3.67236 43.1699 cv
cp
f
82.6216 43.1816 mo
82.6187 43.4883 82.3682 43.7363 82.061 43.7334 cv
81.7539 43.7324 81.5073 43.4824 81.5083 43.1748 cv
81.5103 42.8682 81.7607 42.6206 82.0669 42.6216 cv
82.374 42.625 82.6226 42.874 82.6216 43.1816 cv
cp
f
58.7793 71.8359 mo
59.2236 71.6045 59.6304 71.2959 60.0581 71.0293 cv
60.4224 70.8105 60.7856 70.5869 61.1489 70.3643 cv
61.4756 70.1211 61.7734 69.8438 62.1099 69.6133 cv
62.4604 69.3584 62.8086 69.1035 63.1587 68.8506 cv
63.2329 68.7813 63.3057 68.709 63.3774 68.6387 cv
63.46 68.5957 63.5425 68.5488 63.6226 68.501 cv
63.9214 68.2744 64.2251 68.0049 64.5029 67.7461 cv
64.7275 67.5391 64.894 67.3027 65.1294 67.0928 cv
65.3623 66.8809 65.6201 66.6895 65.8589 66.4785 cv
65.9585 66.3867 66.0127 66.2861 66.1016 66.1963 cv
66.2944 66.0088 66.4951 65.8291 66.6699 65.627 cv
66.7905 65.4766 66.9136 65.3271 67.0376 65.1787 cv
67.4731 64.7607 67.8687 64.3008 68.2329 63.833 cv
68.5288 63.4805 68.8257 63.124 69.1201 62.7725 cv
69.3154 62.498 69.5112 62.2207 69.7036 61.9463 cv
69.8057 61.8369 69.9077 61.7275 70.0122 61.6182 cv
70.3281 61.1758 70.647 60.7324 70.9639 60.2871 cv
71.0576 60.1348 71.1138 59.9785 71.2017 59.8232 cv
71.2734 59.7207 71.3438 59.6172 71.4136 59.5205 cv
71.4756 59.3916 71.5337 59.2617 71.5952 59.1318 cv
71.8105 58.7646 72.0122 58.3965 72.2114 58.0244 cv
72.3789 57.7393 72.5479 57.4541 72.7139 57.166 cv
72.8535 56.877 72.9404 56.5713 73.0698 56.2803 cv
73.2163 55.9746 73.3594 55.6689 73.5039 55.3643 cv
73.9917 54.0488 74.4736 52.7305 74.8647 51.3721 cv
74.894 51.2119 74.9229 51.0469 74.9512 50.8867 cv
75.0576 50.3896 75.1938 49.877 75.2925 49.3691 cv
75.3228 49.1084 75.3511 48.8457 75.3818 48.584 cv
75.4531 48.1592 75.5391 47.7012 75.5977 47.2695 cv
75.6255 46.9229 75.6523 46.5713 75.6792 46.2227 cv
75.7056 46.0869 75.731 45.9512 75.7593 45.8135 cv
75.7739 45.5225 75.7905 45.2305 75.8076 44.9395 cv
75.8232 44.792 75.8682 44.6553 75.8755 44.502 cv
75.875 44.2988 75.8696 44.0938 75.8667 43.8906 cv
75.958 42.5723 75.9814 41.1396 75.9102 39.835 cv
75.8696 39.1543 75.7114 38.4834 75.6426 37.8198 cv
75.5645 37.1157 75.5117 36.4194 75.3706 35.75 cv
74.9824 33.9072 74.4697 32.0981 73.8203 30.3774 cv
73.7275 30.1294 73.5845 29.9023 73.4824 29.6597 cv
73.271 29.1479 73.0332 28.6729 72.7856 28.1855 cv
72.7046 28.0449 72.6245 27.9067 72.5435 27.7661 cv
72.3418 27.3398 72.2012 26.8774 71.9771 26.4629 cv
71.8369 26.207 71.6729 25.9893 71.5103 25.7437 cv
71.3867 25.4775 71.2593 25.2124 71.1357 24.9448 cv
70.6694 24.2202 70.1855 23.5093 69.7007 22.7993 cv
69.5161 22.585 69.332 22.3726 69.1494 22.1597 cv
68.9448 21.897 68.7417 21.6328 68.5376 21.3691 cv
68.3423 21.1719 68.1265 21.0073 67.9536 20.7881 cv
67.8545 20.6626 67.7969 20.5303 67.6924 20.4033 cv
67.5396 20.2363 67.3867 20.0679 67.2334 19.9033 cv
67.1426 19.8188 67.0503 19.7358 66.9595 19.6509 cv
66.7261 19.3867 66.5088 19.1147 66.2681 18.8555 cv
66.0566 18.6587 65.8472 18.4604 65.6382 18.2622 cv
65.4341 18.0581 65.2329 17.853 65.0288 17.647 cv
64.7495 17.4302 64.4678 17.2134 64.186 16.998 cv
63.8984 16.7432 63.6069 16.4922 63.3174 16.2373 cv
63.1255 16.0923 62.918 15.9917 62.7227 15.8628 cv
62.4761 15.6821 62.2251 15.501 61.9756 15.3213 cv
61.7881 15.1885 61.6284 15.0435 61.4487 14.896 cv
61.3135 14.8154 61.1792 14.731 61.0449 14.6484 cv
60.8643 14.5205 60.6846 14.3936 60.5015 14.2646 cv
59.9067 13.9004 59.2686 13.6235 58.6504 13.3047 cv
58.4253 13.1641 58.1997 13.021 57.9766 12.8794 cv
57.5854 12.6836 57.1982 12.4873 56.8101 12.2915 cv
56.4922 12.1396 56.1611 12.0288 55.835 11.9009 cv
55.6763 11.812 55.5151 11.7246 55.3569 11.6357 cv
55.2334 11.5918 55.1084 11.5493 54.9858 11.5054 cv
54.7905 11.4189 54.5957 11.3306 54.3999 11.2441 cv
53.7886 11.0215 53.1465 10.8628 52.5127 10.668 cv
52.2153 10.5781 51.9033 10.4556 51.6016 10.3682 cv
50.9404 10.1748 50.2827 10.0732 49.5981 9.91992 cv
49.1611 9.81982 48.7017 9.69385 48.2549 9.61816 cv
47.9653 9.57764 47.6729 9.53955 47.3862 9.49902 cv
46.9033 9.39893 46.3662 9.3125 45.8628 9.25146 cv
45.6719 9.24707 45.4761 9.24219 45.2813 9.23535 cv
45.1484 9.2168 45.0117 9.19971 44.8745 9.18115 cv
44.6123 9.17773 44.3501 9.17334 44.0859 9.16846 cv
43.4956 9.12695 42.8706 9.07959 42.2495 9.0752 cv
42.0088 9.14551 41.6704 9.10303 41.4028 9.10156 cv
41.082 9.10156 40.7617 9.10303 40.4409 9.10303 cv
40.3525 9.11768 40.2656 9.13184 40.1772 9.14551 cv
39.9546 9.15137 39.7314 9.15723 39.5078 9.1626 cv
39.3896 9.19043 39.2715 9.21924 39.1528 9.24805 cv
39.0376 9.26318 38.9219 9.27588 38.8057 9.29053 cv
38.6943 9.29053 38.5806 9.28027 38.4844 9.31836 cv
38.4185 9.32861 38.3496 9.33691 38.2822 9.34619 cv
38.1382 9.34619 37.9854 9.34131 37.8721 9.40137 cv
37.5591 9.40039 37.0938 9.44043 36.8511 9.57178 cv
36.7837 9.58008 36.7148 9.58936 36.6475 9.59961 cv
36.4487 9.59717 36.1865 9.62256 36.0327 9.7124 cv
35.5181 9.70898 35.0923 9.92773 34.6255 10.0386 cv
34.3774 10.0972 34.082 10.125 33.8696 10.2539 cv
33.6665 10.2529 33.4463 10.3037 33.2856 10.396 cv
32.9604 10.3945 32.6787 10.5835 32.4009 10.6909 cv
32.2368 10.7544 32.0313 10.7578 31.8848 10.8555 cv
31.5596 10.8545 31.2725 11.0425 31.0044 11.1631 cv
30.8193 11.2427 30.6333 11.3188 30.4482 11.3975 cv
29.4463 11.8179 28.4678 12.2974 27.5049 12.7988 cv
27.3433 12.9033 27.1797 13.0073 27.0171 13.1099 cv
25.8633 13.6938 24.7236 14.335 23.7031 15.1655 cv
23.4019 15.3813 23.1006 15.5967 22.8003 15.812 cv
22.6431 15.9526 22.4839 16.0957 22.3276 16.2363 cv
22.0342 16.4526 21.728 16.6362 21.4438 16.8745 cv
20.8643 17.3657 20.3179 17.915 19.7798 18.4478 cv
19.4502 18.7471 19.1177 19.0479 18.7861 19.3477 cv
18.6724 19.478 18.5591 19.6084 18.4478 19.7397 cv
18.2969 19.8799 18.145 20.0195 17.9956 20.1592 cv
17.7573 20.4023 17.5913 20.6938 17.3613 20.9302 cv
17.1616 21.1328 16.9624 21.3218 16.7822 21.5464 cv
16.7012 21.6582 16.6157 21.771 16.5347 21.8818 cv
16.1855 22.2734 15.8462 22.6587 15.5454 23.0815 cv
15.3389 23.4019 15.1333 23.7236 14.9272 24.0459 cv
14.6299 24.4277 14.2949 24.9209 14.0664 25.3403 cv
13.9976 25.4775 13.9302 25.6133 13.8628 25.7505 cv
13.6631 26.0845 13.4624 26.4165 13.2617 26.7471 cv
13.0879 27.0942 12.9702 27.4653 12.7964 27.8135 cv
12.7148 27.9482 12.6348 28.082 12.5547 28.2168 cv
12.3853 28.5303 12.2427 28.8438 12.062 29.1533 cv
11.9805 29.354 11.8975 29.5557 11.8149 29.7583 cv
11.7144 29.9648 11.6162 30.1724 11.5166 30.3799 cv
11.4365 30.6182 11.354 30.8555 11.2739 31.0942 cv
11.1758 31.3501 11.0776 31.606 10.9785 31.8628 cv
10.4844 33.46 10.0698 35.064 9.73047 36.7559 cv
9.70166 37.0752 9.67334 37.3931 9.64502 37.7134 cv
9.60059 38.0825 9.47412 38.4844 9.44336 38.8511 cv
9.41846 39.1357 9.42969 39.4595 9.34961 39.7256 cv
9.32861 39.9502 9.30859 40.1738 9.2876 40.395 cv
9.2373 41.7656 9.27393 43.0674 9.30908 44.3926 cv
9.32715 45.0293 9.45215 45.666 9.50781 46.291 cv
9.52246 46.5625 9.53516 46.833 9.54883 47.1064 cv
9.63574 47.96 9.78125 48.8252 9.91406 49.6729 cv
9.97656 49.8887 10.0352 50.1045 10.0952 50.3213 cv
10.2378 50.9902 10.3877 51.6377 10.5815 52.2803 cv
10.6377 52.4248 10.6948 52.5713 10.751 52.7178 cv
10.7866 52.8711 10.8252 53.0234 10.8604 53.1768 cv
11.1128 53.8867 11.3652 54.5977 11.6162 55.3047 cv
11.7417 55.5713 11.8667 55.8408 11.9902 56.1074 cv
12.062 56.2832 12.0996 56.4814 12.1753 56.6553 cv
12.3677 57.1094 12.6494 57.5166 12.8789 57.9541 cv
13.0601 58.3105 13.2759 58.6514 13.4556 59.0088 cv
13.5073 59.1367 13.5605 59.2656 13.6123 59.3945 cv
13.6748 59.4736 13.7373 59.5469 13.7998 59.625 cv
13.8687 59.7744 13.937 59.9229 14.0063 60.0732 cv
14.1758 60.3711 14.3818 60.6592 14.5977 60.9336 cv
14.7256 61.0967 14.8315 61.2813 14.9619 61.4453 cv
15.1367 61.666 15.334 61.8682 15.4985 62.0947 cv
15.625 62.2832 15.751 62.4688 15.8789 62.6553 cv
16.1172 62.9404 16.3555 63.2266 16.5962 63.5078 cv
16.7939 63.7578 16.9917 64.0088 17.188 64.2588 cv
17.436 64.5176 17.6826 64.7754 17.9297 65.0332 cv
18.1323 65.2686 18.3076 65.5469 18.5415 65.7617 cv
18.875 66.0674 19.2026 66.3789 19.5107 66.6895 cv
19.6758 66.8555 19.8398 67.0225 20.0029 67.1865 cv
20.2729 67.4219 20.5884 67.5898 20.8477 67.8359 cv
21.0977 68.0791 21.3496 68.3213 21.6035 68.5645 cv
21.7866 68.7051 21.9692 68.8457 22.1514 68.9854 cv
22.377 69.1787 22.5688 69.4014 22.813 69.5742 cv
23.1064 69.7734 23.3804 70.0059 23.6865 70.1826 cv
23.8892 70.2998 24.1055 70.3604 24.3003 70.4902 cv
24.5273 70.6504 24.7544 70.8105 24.9814 70.9707 cv
25.2041 71.1162 25.4585 71.2314 25.6865 71.3711 cv
26.5464 71.8984 27.415 72.3525 28.3193 72.7852 cv
28.7168 72.9775 29.0923 73.2217 29.5176 73.3662 cv
29.9082 73.5186 30.2969 73.6699 30.687 73.8193 cv
30.8291 73.8584 30.9727 73.9023 31.1138 73.9414 cv
31.4971 74.0879 31.8779 74.2344 32.2603 74.3828 cv
32.3628 74.4131 32.4653 74.4443 32.5693 74.4746 cv
32.8989 74.6035 33.2266 74.7549 33.5713 74.8496 cv
33.9873 74.9316 34.4028 75.0098 34.8188 75.0918 cv
35.438 75.2207 36.0859 75.4131 36.7178 75.5098 cv
36.9492 75.5293 37.1797 75.5498 37.4146 75.5654 cv
37.7207 75.6045 38.0288 75.6777 38.3481 75.7061 cv
38.5903 75.7197 38.8311 75.7373 39.0732 75.7529 cv
39.2314 75.7764 39.3882 75.8008 39.5435 75.8262 cv
39.7085 75.832 39.8735 75.8379 40.0386 75.8428 cv
40.4189 75.8984 40.7959 75.957 41.1753 76.0137 cv
41.3691 76.0234 41.5649 76.0313 41.7583 76.0391 cv
41.8755 76.0254 41.9932 76.0117 42.1104 76 cv
42.457 76.002 42.8701 76.0391 43.2173 76.0557 cv
43.4395 76.0605 43.647 76.0449 43.8589 76.0557 cv
44.2954 76.0781 44.7109 75.9922 45.1162 75.9326 cv
45.2993 75.9248 45.4844 75.9189 45.667 75.9131 cv
45.916 75.8828 46.1826 75.8398 46.4277 75.8203 cv
47.3311 75.7373 48.2056 75.6357 49.0811 75.4639 cv
49.374 75.3857 49.6685 75.3096 49.9619 75.2314 cv
50.3301 75.1582 50.6978 75.0801 51.0649 75.0059 cv
51.2568 74.9512 51.4263 74.8555 51.6069 74.7832 cv
51.9072 74.6943 52.2056 74.6064 52.5059 74.5166 cv
52.6343 74.4697 52.7612 74.4268 52.8896 74.3799 cv
53.1074 74.3213 53.3032 74.2979 53.5195 74.2314 cv
53.9609 74.0791 54.4009 73.9219 54.8452 73.7676 cv
55.1069 73.6396 55.3706 73.5186 55.6328 73.3936 cv
55.8892 73.2949 56.1445 73.1787 56.3896 73.0645 cv
56.4609 73.0225 56.5288 72.9775 56.5996 72.9355 cv
56.8647 72.8105 57.1406 72.6855 57.3989 72.5518 cv
57.6992 72.3799 57.9995 72.2119 58.3003 72.0391 cv
58.4546 71.9609 58.6255 71.916 58.7793 71.8359 cv
cp
f
42.2422 73.1934 mo
42.2319 73.1934 42.2222 73.1934 42.2124 73.1934 cv
42.2124 73.1826 42.2124 73.1738 42.2124 73.1631 cv
42.1675 73.1631 42.1455 73.1074 42.1206 73.0762 cv
42.0078 72.8965 41.8945 72.7168 41.7817 72.5371 cv
41.5459 72.2627 41.3086 71.9854 41.0723 71.707 cv
40.3643 71.0342 39.5356 70.458 38.6665 70.082 cv
38.4873 70.0176 38.3062 69.9502 38.127 69.8857 cv
37.9268 69.7988 37.7432 69.6836 37.5352 69.6074 cv
37.3408 69.5352 37.1328 69.5117 36.9253 69.4736 cv
36.7158 69.4336 36.5005 69.375 36.2847 69.3271 cv
35.8394 69.2373 35.3911 69.1035 34.9399 69.0225 cv
34.5024 68.9678 34.0674 68.915 33.6299 68.8574 cv
33.2813 68.8398 32.9473 68.8457 32.6108 68.8145 cv
31.0313 68.6543 29.4683 68.501 27.9419 68.2549 cv
27.4219 68.167 26.9131 68.165 26.4028 68.0752 cv
25.897 67.9854 25.3882 67.8389 24.9067 67.6855 cv
24.6396 67.6016 24.3662 67.5391 24.1084 67.4414 cv
23.854 67.3281 23.6006 67.2139 23.3472 67.0986 cv
23.1719 67.0186 22.9966 66.9395 22.8218 66.8633 cv
22.7012 66.7852 22.5786 66.7061 22.4546 66.627 cv
22.3965 66.5947 22.3374 66.5645 22.2788 66.5303 cv
21.8618 66.1963 21.5332 65.7344 21.2124 65.3271 cv
20.9658 65.0127 20.8364 64.6465 20.7192 64.2676 cv
20.6631 64.0791 20.605 63.8916 20.5469 63.7041 cv
20.3618 62.8311 20.3809 61.9189 20.3711 60.9648 cv
20.3574 60.7803 20.3394 60.5957 20.3237 60.4082 cv
20.3491 59.7002 20.3936 58.9805 20.4077 58.2793 cv
20.4023 58.125 20.3975 57.9707 20.3906 57.8135 cv
20.3945 57.1055 20.3979 56.3955 20.4023 55.6855 cv
20.4053 55.2188 20.4414 54.7588 20.4375 54.3154 cv
20.418 52.4033 20.4521 50.4688 20.4951 48.5391 cv
20.4795 48.2676 20.4648 47.9951 20.4482 47.7207 cv
20.4453 47.4199 20.479 47.1348 20.4795 46.8486 cv
20.4746 46.7119 20.4707 46.5742 20.4678 46.4375 cv
20.5039 46.0029 20.541 45.5635 20.5762 45.127 cv
20.5845 44.7871 20.5547 44.4541 20.5547 44.1367 cv
20.5566 43.8975 20.5928 43.6543 20.5825 43.4063 cv
20.5742 43.2051 20.5273 43.0156 20.5322 42.7935 cv
20.5435 42.6089 20.5547 42.4233 20.563 42.2393 cv
20.5591 41.8682 20.5342 41.4634 20.542 41.0728 cv
20.5469 40.8472 20.5786 40.6094 20.5728 40.3721 cv
20.5664 40.1128 20.5156 39.856 20.5225 39.584 cv
20.5532 39.2646 20.5825 38.9434 20.6123 38.623 cv
20.6206 38.3096 20.5942 38.0088 20.5952 37.7168 cv
20.5986 37.0635 20.6274 36.356 20.6309 35.6763 cv
20.6362 35.5391 20.6431 35.4043 20.647 35.2681 cv
20.6333 34.9766 20.6167 34.6841 20.6016 34.3926 cv
20.625 34.1411 20.647 33.8877 20.6724 33.6343 cv
20.6953 32.4204 20.6919 31.1714 20.7192 29.9868 cv
20.7212 29.5786 20.7212 29.1709 20.7231 28.7627 cv
20.7114 28.4746 20.6685 28.1934 20.6753 27.8882 cv
20.6855 27.6934 20.6953 27.4976 20.7075 27.3052 cv
20.7134 26.2817 20.6895 25.2549 20.6953 24.2134 cv
20.6978 23.835 20.731 23.4951 20.729 23.1323 cv
20.7231 22.7231 20.7065 22.2808 20.7085 21.8496 cv
20.7104 21.5693 20.7412 21.2964 20.7427 21.0039 cv
20.7437 20.771 20.6978 20.4448 20.7749 20.2456 cv
20.7764 20.188 20.8447 20.1973 20.8931 20.1914 cv
21.313 20.1323 21.8413 20.0781 22.2915 20.1475 cv
22.8462 20.2329 23.4058 20.1431 23.9849 20.1465 cv
24.4995 20.1499 25.0142 20.1509 25.5308 20.1519 cv
25.8423 20.1348 26.1519 20.1187 26.4653 20.1016 cv
27.0464 20.105 27.5854 20.1406 28.1548 20.1357 cv
28.8379 20.1304 29.5767 20.1196 30.2871 20.123 cv
30.4893 20.1323 30.6934 20.1431 30.8984 20.1509 cv
31.188 20.1348 31.4814 20.1221 31.7739 20.106 cv
32.0166 20.1118 32.2446 20.1626 32.5029 20.1636 cv
32.8296 20.166 33.126 20.1348 33.4341 20.1431 cv
33.9136 20.1519 34.4282 20.1543 34.9243 20.1821 cv
35.1563 20.2007 35.3892 20.2178 35.6221 20.2363 cv
36.3086 20.2295 37.0234 20.2007 37.6953 20.1934 cv
38.1533 20.2061 38.6104 20.2178 39.0659 20.2314 cv
39.4531 20.2261 39.8369 20.1519 40.2319 20.1543 cv
40.5088 20.1558 40.8154 20.1821 41.1079 20.1831 cv
41.3706 20.1797 41.6323 20.1738 41.895 20.1719 cv
42.1958 20.1948 42.4985 20.2188 42.7998 20.2441 cv
43.0332 20.2329 43.2671 20.2222 43.5 20.2109 cv
43.958 20.228 44.4126 20.2441 44.8706 20.2617 cv
45.0859 20.2441 45.2993 20.228 45.5127 20.2109 cv
46.7578 20.1787 47.9307 20.21 49.1875 20.1982 cv
49.4624 20.1821 49.7344 20.1636 50.0049 20.1475 cv
50.5659 20.1323 51.1587 20.1719 51.6968 20.1323 cv
51.8159 20.1221 51.9307 20.1094 52.0483 20.1001 cv
52.5156 20.1465 53.062 20.0967 53.5645 20.1084 cv
53.7729 20.1118 53.9453 20.1626 54.147 20.167 cv
54.3706 20.1592 54.5957 20.1543 54.8174 20.1465 cv
55.1772 20.1592 55.5928 20.2026 55.9551 20.1982 cv
56.2075 20.1973 56.4507 20.1484 56.7163 20.1558 cv
56.9014 20.1719 57.084 20.189 57.27 20.2061 cv
57.5269 20.2109 57.8198 20.1738 58.0859 20.1948 cv
58.2705 20.2236 58.4546 20.25 58.6411 20.2764 cv
58.7949 20.271 58.9512 20.2637 59.1079 20.2568 cv
59.272 20.2676 59.437 20.2754 59.604 20.2847 cv
59.7686 20.2788 59.9336 20.2686 60.0977 20.2603 cv
60.4111 20.2559 60.7104 20.2925 61.002 20.272 cv
61.478 20.2363 61.9448 20.3066 62.4326 20.3018 cv
62.6655 20.2871 62.8984 20.271 63.1309 20.2549 cv
63.2876 20.2637 63.4424 20.272 63.5991 20.2798 cv
63.7456 20.2813 63.9297 20.2627 64.0527 20.3125 cv
64.0625 20.3203 64.0742 20.3306 64.0864 20.3389 cv
64.1899 20.4922 64.1509 20.7769 64.1484 20.9844 cv
64.1445 21.6504 64.1152 22.2954 64.1431 22.9375 cv
64.1582 23.3442 64.1528 23.8101 64.1567 24.2212 cv
64.1484 24.3574 64.1431 24.4941 64.1348 24.6279 cv
64.1445 24.9209 64.1582 25.2109 64.168 25.5029 cv
64.1528 25.7954 64.1372 26.0869 64.1191 26.3809 cv
64.1431 26.7588 64.168 27.1401 64.1919 27.5181 cv
64.1738 27.6611 64.1582 27.8101 64.1411 27.9551 cv
64.1313 28.2095 64.1821 28.439 64.1802 28.6855 cv
64.1641 28.938 64.1484 29.1904 64.1328 29.4429 cv
64.1313 29.7539 64.1255 30.0649 64.1216 30.375 cv
64.106 30.6089 64.0864 30.8428 64.0703 31.0747 cv
64.0977 31.4551 64.1255 31.834 64.1484 32.2119 cv
64.1387 32.3491 64.1274 32.4863 64.1133 32.6221 cv
64.1021 32.937 64.0781 33.2539 64.0825 33.5557 cv
64.0879 34.0952 64.1328 34.6978 64.1387 35.2173 cv
64.1255 35.335 64.1118 35.4512 64.0996 35.5688 cv
64.1094 35.811 64.1191 36.0518 64.1289 36.2949 cv
64.1152 36.5762 64.0879 36.8931 64.0864 37.2021 cv
64.0864 37.4277 64.1348 37.6235 64.1289 37.8438 cv
64.1152 37.96 64.0996 38.0776 64.0825 38.1943 cv
64.0898 38.3486 64.0962 38.5054 64.0996 38.6587 cv
64.0864 39.2441 64.0332 39.811 64.041 40.4111 cv
64.0508 40.7017 64.0586 40.9932 64.0703 41.2861 cv
64.084 41.4038 64.0977 41.519 64.1152 41.6362 cv
64.1079 41.8311 64.0962 42.0249 64.0879 42.2197 cv
64.0938 42.3452 64.1021 42.4717 64.1079 42.5977 cv
64.0898 42.8115 64.0742 43.0254 64.0571 43.2393 cv
64.0586 43.5293 64.1289 43.835 64.1177 44.1436 cv
64.0864 44.9971 64.0391 45.8027 64.0332 46.6523 cv
64.0313 46.9971 64.0864 47.3027 64.084 47.6445 cv
64.0669 47.8301 64.0474 48.0146 64.0293 48.1982 cv
64.0254 48.5977 64.022 48.9971 64.0156 49.3945 cv
63.9961 49.6084 63.9761 49.8223 63.959 50.0361 cv
63.9688 50.8438 63.9805 51.6494 63.9927 52.4561 cv
63.9883 53.0176 63.9312 53.6143 63.937 54.1777 cv
63.9512 54.4795 63.9663 54.7803 63.9785 55.084 cv
63.9727 55.2012 63.9648 55.3164 63.959 55.4346 cv
63.9565 55.6475 63.9551 55.8604 63.9531 56.0762 cv
63.9492 56.5967 63.9746 57.1211 63.9727 57.6201 cv
63.9688 58.2256 63.9746 58.8789 63.9609 59.5156 cv
63.9531 59.6924 63.9453 59.8643 63.9395 60.04 cv
63.9512 60.1484 63.9648 60.2539 63.9785 60.3613 cv
63.9609 60.7324 63.9414 61.1016 63.9258 61.4697 cv
63.918 61.7813 63.9629 62.1113 63.9414 62.4316 cv
63.9063 62.627 63.8691 62.8232 63.8359 63.0195 cv
63.8081 63.2305 63.7808 63.4414 63.7559 63.6543 cv
63.6812 64.0156 63.417 64.5371 63.2251 64.8457 cv
63.0591 65.1123 62.7808 65.2568 62.5674 65.4707 cv
62.4385 65.5957 62.2939 65.6797 62.1592 65.792 cv
61.9102 66.0049 61.6631 66.2295 61.3809 66.3789 cv
61.2007 66.4463 61.021 66.5137 60.8408 66.5801 cv
60.4771 66.7285 60.1128 66.8926 59.7402 67.0342 cv
59.3979 67.1631 59.0347 67.2588 58.6934 67.3867 cv
58.6104 67.418 58.521 67.4492 58.4351 67.4775 cv
58.2471 67.4766 57.9946 67.5625 57.8491 67.6504 cv
57.6865 67.6484 57.5151 67.668 57.3838 67.7354 cv
57.1357 67.7324 56.9595 67.8047 56.7583 67.8789 cv
56.6953 67.8984 56.6309 67.917 56.5674 67.9346 cv
56.4653 67.9346 56.3511 67.9453 56.2725 67.9902 cv
56.0791 67.9893 55.6289 68.0791 55.4844 68.1611 cv
55.313 68.1611 55.1035 68.1299 54.96 68.1885 cv
54.8589 68.1885 54.7446 68.2002 54.666 68.2451 cv
54.5098 68.2432 54.3237 68.2256 54.1992 68.3008 cv
54.123 68.3096 54.043 68.3193 53.9658 68.3291 cv
53.8433 68.3291 53.7129 68.333 53.6162 68.3848 cv
53.5078 68.3848 53.3828 68.3975 53.2954 68.4414 cv
53.0918 68.4395 52.7876 68.4082 52.6235 68.498 cv
52.5464 68.5059 52.4678 68.5137 52.3906 68.5234 cv
52.1919 68.5205 51.9463 68.4502 51.7769 68.5508 cv
51.6606 68.5488 51.5215 68.5332 51.4263 68.5762 cv
51.3672 68.5879 51.3101 68.5957 51.2524 68.6035 cv
51.0649 68.6035 50.8267 68.5684 50.6685 68.6299 cv
50.5903 68.6406 50.5127 68.6494 50.4351 68.6582 cv
50.376 68.668 50.3174 68.6777 50.2603 68.6855 cv
50.2012 68.6973 50.1421 68.707 50.0864 68.7148 cv
49.9976 68.7246 49.9097 68.7324 49.8213 68.7441 cv
49.6997 68.7422 49.5664 68.748 49.4712 68.7988 cv
49.3926 68.8066 49.3154 68.8184 49.2373 68.8262 cv
49.1064 68.8262 48.9565 68.8223 48.8574 68.8838 cv
48.7334 68.8838 48.6021 68.8848 48.5083 68.9404 cv
48.4087 68.9404 48.291 68.9521 48.2168 68.9941 cv
48.124 68.9941 48.0249 69.0107 47.9526 69.0527 cv
47.8955 69.0615 47.8369 69.0703 47.7783 69.083 cv
47.6289 69.0811 47.4302 69.126 47.3096 69.1934 cv
47.2144 69.1934 47.1201 69.21 47.0464 69.2529 cv
46.7417 69.251 46.478 69.3896 46.2202 69.4902 cv
46.02 69.5635 45.8179 69.6367 45.6172 69.7109 cv
45.2256 69.709 44.811 70.0703 44.5225 70.3096 cv
44.27 70.5166 43.9438 70.6191 43.6958 70.8535 cv
43.0029 71.4951 42.5859 72.3584 42.2422 73.1934 cv
cp
0 0 0 0 cmyk
f
45.4946 69.0498 mo
45.6738 68.9746 45.853 68.8984 46.0342 68.8223 cv
46.3887 68.7168 46.7617 68.6494 47.1367 68.5684 cv
47.8369 68.417 48.5161 68.2334 49.2173 68.0859 cv
49.3911 68.0752 49.562 68.0635 49.7344 68.0518 cv
50.0063 68.002 50.2715 67.9346 50.5562 67.9092 cv
50.9248 67.8955 51.2949 67.8838 51.6646 67.8721 cv
52.1089 67.8389 52.5605 67.7432 53.0088 67.7109 cv
53.4102 67.6816 53.8081 67.668 54.2017 67.6172 cv
54.5552 67.5625 54.9053 67.5029 55.2559 67.4453 cv
55.3721 67.4375 55.4883 67.4268 55.6016 67.4189 cv
56.1455 67.3311 56.6689 67.2021 57.1875 67.0811 cv
57.3657 67.0381 57.5352 67.0186 57.7051 66.9697 cv
58.2041 66.8223 58.6885 66.627 59.1738 66.4717 cv
59.5815 66.3389 59.9751 66.2158 60.3574 66.042 cv
60.689 65.8906 60.9668 65.6777 61.2764 65.4844 cv
61.8271 65.1377 62.4287 64.7695 62.7715 64.1885 cv
62.9238 63.9307 63.0649 63.5469 63.1113 63.2412 cv
63.1235 63.0967 63.1333 62.9502 63.1431 62.8037 cv
63.2485 62.1738 63.2329 61.4834 63.2251 60.8252 cv
63.2368 60.5918 63.2446 60.3574 63.2568 60.123 cv
63.2485 59.998 63.2427 59.8711 63.2329 59.7451 cv
63.2329 59.4932 63.2329 59.2402 63.2314 58.9883 cv
63.2173 58.8906 63.2056 58.792 63.1919 58.6943 cv
63.2017 58.6074 63.2119 58.5205 63.2217 58.4326 cv
63.2119 58.3467 63.2017 58.2578 63.1899 58.1699 cv
63.1938 57.998 63.2412 57.8564 63.2412 57.6748 cv
63.2427 57.4795 63.1919 57.3369 63.1899 57.1484 cv
63.188 56.9258 63.2446 56.7607 63.251 56.5381 cv
63.2642 55.7705 63.2568 55.0156 63.2861 54.2598 cv
63.2778 54.0762 63.272 53.8926 63.2666 53.709 cv
63.27 53.0361 63.2739 52.3662 63.2764 51.6973 cv
63.3154 49.8691 63.292 47.9209 63.3325 46.0938 cv
63.3213 45.9014 63.313 45.7051 63.2993 45.5117 cv
63.292 45.4521 63.2837 45.3965 63.2764 45.3379 cv
63.2861 45.1924 63.3174 45.0293 63.3115 44.8701 cv
63.2993 44.7627 63.2876 44.6553 63.2764 44.5498 cv
63.2822 44.3984 63.3213 44.2461 63.3188 44.082 cv
63.3154 43.7441 63.2349 43.458 63.2368 43.1191 cv
63.2388 42.8867 63.272 42.6875 63.2876 42.4775 cv
63.2861 42.3706 63.2822 42.2622 63.2778 42.1563 cv
63.2935 42.0513 63.3091 41.9404 63.3252 41.8359 cv
63.3115 41.709 63.2974 41.5835 63.2798 41.4556 cv
63.2974 41.3115 63.3115 41.165 63.3271 41.02 cv
63.3228 40.8872 63.2822 40.7788 63.2822 40.6382 cv
63.2861 39.8423 63.292 39.0444 63.2959 38.2485 cv
63.2974 38.0664 63.3447 37.9243 63.3506 37.7495 cv
63.3564 37.5776 63.3018 37.4487 63.3071 37.2861 cv
63.3213 37.1982 63.3369 37.1084 63.3506 37.022 cv
63.3638 36.7593 63.376 36.4976 63.3916 36.2349 cv
63.3857 35.835 63.3818 35.3975 63.3662 34.98 cv
63.3506 34.8452 63.3325 34.7095 63.3154 34.5723 cv
63.313 34.2437 63.3721 33.9546 63.3677 33.6387 cv
63.3545 33.3955 63.3384 33.1533 63.3252 32.9092 cv
63.335 31.0308 63.2622 29.2271 63.3325 27.3638 cv
63.3384 26.3462 63.3447 25.3252 63.3506 24.3042 cv
63.3701 23.751 63.3286 23.1484 63.3228 22.6113 cv
63.3174 22.064 63.3286 21.5674 63.3325 21.0073 cv
63.3228 21.0073 63.313 21.0073 63.3018 21.0073 cv
63.3018 20.9463 63.0273 20.9844 62.9805 21.0059 cv
62.4385 20.999 61.8926 20.9912 61.3506 20.9844 cv
60.9976 20.9531 60.646 20.9287 60.2695 20.9336 cv
60.1646 20.9336 60.0356 20.9219 59.9487 20.9609 cv
59.8154 20.9736 59.6772 20.9878 59.5415 21.0015 cv
59.3467 20.9785 59.1514 20.9531 58.9551 20.9277 cv
58.2749 20.9229 57.5952 20.9185 56.9146 20.9141 cv
56.7236 20.9126 56.2285 20.8516 56.0986 20.9092 cv
55.748 20.9058 55.3984 20.9014 55.0488 20.8975 cv
54.7837 20.8779 54.4038 20.7661 54.1431 20.8677 cv
54.0674 20.8779 53.9873 20.8872 53.9116 20.8975 cv
53.6582 20.894 53.4053 20.8906 53.1519 20.8872 cv
52.7759 20.8608 52.4077 20.7998 52.0151 20.7974 cv
51.7231 20.8828 51.3047 20.7412 51.0225 20.8516 cv
50.9453 20.8608 50.8672 20.8701 50.791 20.8794 cv
50.4897 20.8779 50.1885 20.876 49.8857 20.8745 cv
49.7388 20.8745 49.5386 20.8472 49.418 20.9023 cv
49.3271 20.9014 49.1992 20.8921 49.1245 20.9287 cv
48.874 20.9277 48.6636 20.876 48.4253 20.8677 cv
47.8242 20.8652 47.2217 20.8599 46.6187 20.8564 cv
46.3999 20.855 46.0762 20.8076 45.8911 20.8828 cv
45.8218 20.8906 45.7534 20.8999 45.6846 20.9102 cv
45.5967 20.9185 45.5083 20.9277 45.4224 20.937 cv
45.082 20.9355 44.5186 20.7573 44.2256 20.8735 cv
44.167 20.8813 44.1104 20.8906 44.0518 20.8999 cv
43.9229 20.8999 43.772 20.9023 43.6709 20.9565 cv
42.8013 20.9531 41.9341 20.9463 41.104 20.9287 cv
40.8838 20.9229 40.6509 20.9346 40.4336 20.9336 cv
40.3301 20.9336 40.1753 20.8906 40.0835 20.937 cv
39.8682 20.9336 39.6567 20.9302 39.4414 20.9277 cv
39.1445 20.9067 38.4868 20.7881 38.2168 20.8975 cv
38.0215 20.894 37.8281 20.8906 37.6333 20.8896 cv
37.5044 20.8779 37.3472 20.8423 37.2227 20.8906 cv
37.0503 20.8906 36.8193 20.8584 36.6709 20.9175 cv
36.3228 20.915 36.0161 20.855 35.6494 20.8525 cv
35.5337 20.8525 35.3975 20.8398 35.2998 20.8813 cv
35.084 20.8794 34.7813 20.833 34.5996 20.9058 cv
34.2681 20.9048 33.9385 20.9033 33.6064 20.9014 cv
33.4521 20.8999 33.2388 20.8701 33.1128 20.9268 cv
32.6948 20.9302 32.2759 20.9312 31.8584 20.9336 cv
31.5933 20.9141 31.0806 20.8159 30.8359 20.9141 cv
30.5732 20.9126 30.1196 20.8228 29.9023 20.9067 cv
29.3506 20.9058 28.8428 20.8735 28.2979 20.8364 cv
28.106 20.8218 27.8105 20.7573 27.6265 20.8389 cv
27.519 20.8364 27.3979 20.8237 27.3057 20.8667 cv
27.0972 20.8643 26.8125 20.8203 26.6367 20.8906 cv
26.4521 20.8896 26.1689 20.8438 26.022 20.915 cv
25.332 20.9126 24.6006 20.8779 23.8657 20.8745 cv
23.6509 20.8745 23.3452 20.8271 23.1646 20.8999 cv
22.8989 20.8989 22.3179 20.8438 22.1133 20.9229 cv
21.9595 20.9229 21.689 20.8794 21.5879 20.9771 cv
21.4238 21.1328 21.5137 21.8979 21.5195 22.1455 cv
21.5127 22.3394 21.5049 22.5342 21.4956 22.729 cv
21.502 22.9063 21.5278 23.0908 21.5078 23.2822 cv
21.5078 23.5552 21.5083 23.8262 21.5098 24.0991 cv
21.4824 24.8438 21.4746 25.5557 21.4702 26.3188 cv
21.4688 26.5239 21.4185 26.6782 21.4116 26.8706 cv
21.4028 27.0732 21.4473 27.2695 21.4453 27.4526 cv
21.4209 27.6382 21.3989 27.8237 21.376 28.0078 cv
21.3862 28.3965 21.3931 28.7847 21.4053 29.1719 cv
21.3779 29.8345 21.3472 30.5444 21.355 31.2461 cv
21.3652 31.5181 21.375 31.79 21.3848 32.0601 cv
21.3955 32.1499 21.4072 32.2363 21.418 32.3237 cv
21.3955 32.4897 21.3765 32.6558 21.354 32.8193 cv
21.3667 34.0088 21.334 35.1436 21.3271 36.3501 cv
21.3242 36.8735 21.3525 37.3564 21.3413 37.8667 cv
21.3228 38.1182 21.3047 38.3716 21.2856 38.6265 cv
21.2925 39.0054 21.3003 39.3848 21.3081 39.7637 cv
21.3032 40.5161 21.271 41.2998 21.2783 42.0684 cv
21.292 42.3403 21.3022 42.6113 21.3145 42.8848 cv
21.2974 43.2344 21.2783 43.584 21.2583 43.9346 cv
21.2515 45.3145 21.2749 46.7471 21.2866 48.1357 cv
21.292 48.4805 21.229 48.7695 21.228 49.126 cv
21.2251 49.4961 21.2231 49.8652 21.2231 50.2334 cv
21.231 50.4014 21.2378 50.5664 21.2446 50.7305 cv
21.2183 51.9863 21.1758 53.1914 21.1689 54.4639 cv
21.165 55.041 21.103 55.5439 21.1006 56.0977 cv
21.1006 56.3398 21.1016 56.583 21.103 56.8252 cv
21.1143 56.9219 21.1294 57.0195 21.1421 57.1162 cv
21.1265 57.2148 21.1104 57.3125 21.0972 57.4082 cv
21.082 57.6885 21.0654 57.9854 21.0635 58.2539 cv
21.062 58.5967 21.0693 58.9746 21.0845 59.334 cv
21.0908 59.4961 21.1362 59.6309 21.1353 59.8018 cv
21.1338 59.9746 21.082 60.1035 21.0811 60.2676 cv
21.0791 60.4668 21.1328 60.6143 21.1323 60.8223 cv
21.1226 62.3301 21.1396 63.7822 21.8237 64.9297 cv
22.2954 65.7139 23.1616 66.208 23.9497 66.5469 cv
24.4961 66.7832 25.0562 67.0537 25.6504 67.1943 cv
26.0903 67.2959 26.5239 67.3516 26.9849 67.4316 cv
27.335 67.4922 27.6992 67.582 28.0669 67.6211 cv
28.416 67.6484 28.7651 67.6758 29.1147 67.7012 cv
29.8652 67.7939 30.5991 67.9258 31.3623 68.0186 cv
31.7197 68.0361 32.0796 68.0557 32.4385 68.0713 cv
32.5942 68.1045 32.7495 68.1387 32.9058 68.1729 cv
33.1875 68.1787 33.4717 68.1807 33.751 68.1885 cv
34.0522 68.2158 34.3535 68.2432 34.6553 68.2744 cv
34.8105 68.2813 34.9644 68.2871 35.1211 68.29 cv
35.2573 68.3262 35.3936 68.3574 35.5308 68.3887 cv
35.9175 68.4473 36.2778 68.4893 36.665 68.5645 cv
36.7842 68.6035 36.9033 68.6426 37.0234 68.6855 cv
37.2871 68.7617 37.5278 68.8252 37.7803 68.9238 cv
38.1465 69.0576 38.5151 69.1904 38.8823 69.3213 cv
39.1499 69.457 39.4141 69.5889 39.6841 69.7246 cv
39.8252 69.8203 39.9702 69.916 40.1104 70.0117 cv
40.4043 70.1807 40.6934 70.3252 40.9609 70.5449 cv
41.2905 70.8125 41.5161 71.1387 41.8052 71.4492 cv
41.8989 71.5537 41.9482 71.6914 42.0742 71.7617 cv
42.0742 71.8105 42.0908 71.793 42.1343 71.793 cv
42.1343 71.7422 42.2813 71.6494 42.3203 71.6016 cv
42.3823 71.5068 42.4414 71.4131 42.502 71.3184 cv
43.1396 70.3867 44.0879 69.7197 45.0498 69.2061 cv
45.1982 69.1563 45.3442 69.1006 45.4946 69.0498 cv
cp
1 .68 0 .54 cmyk
f
45.6641 24.6152 mo
45.6641 24.6235 45.6641 24.6338 45.6641 24.6431 cv
45.6348 24.6431 45.6045 24.6431 45.5757 24.6431 cv
45.5752 24.5474 45.5728 24.4507 45.5703 24.355 cv
45.6123 24.0635 45.8521 23.9307 46.0171 23.7129 cv
46.3271 23.9829 45.8491 24.416 45.6641 24.6152 cv
cp
0 0 0 0 cmyk
f
47.1777 22.1836 mo
47.3008 22.0522 47.3687 21.8921 47.4761 21.748 cv
47.5674 21.6572 47.6602 21.5674 47.7539 21.4741 cv
47.9629 21.4971 48.1592 21.5278 48.3931 21.5386 cv
48.3931 21.5674 48.3931 21.5962 48.3931 21.626 cv
48.0835 21.6226 47.2539 22.6528 47.0615 22.9131 cv
46.9717 23.0356 46.8638 23.2773 46.7236 23.3525 cv
46.6377 23.395 46.5376 23.3594 46.4683 23.3164 cv
46.2695 23.1934 46.4175 22.9756 46.4751 22.8325 cv
46.5117 22.7427 46.5205 22.6357 46.5977 22.5688 cv
46.6787 22.5293 46.7549 22.4902 46.8359 22.4487 cv
46.9507 22.3623 47.063 22.2734 47.1777 22.1836 cv
cp
f
45.1973 22.8867 mo
45.2461 22.7368 45.2451 22.5732 45.3193 22.436 cv
45.4106 22.2573 45.6367 22.2124 45.7744 22.0845 cv
45.8989 21.9707 45.9258 21.814 46.0239 21.6885 cv
46.127 21.5547 46.2695 21.5303 46.4106 21.4683 cv
46.5259 21.4683 46.6436 21.4692 46.7598 21.4692 cv
46.7598 21.6143 46.5693 21.7632 46.4985 21.8794 cv
46.4028 22.0376 46.3071 22.2046 46.209 22.3589 cv
46.0972 22.5112 45.9819 22.6655 45.8672 22.8188 cv
45.79 22.9385 45.7632 23.0747 45.667 23.1831 cv
45.5967 23.2383 45.5264 23.2949 45.4536 23.3486 cv
45.3901 23.4214 45.3257 23.4917 45.2617 23.561 cv
45.1968 23.623 45.1318 23.6841 45.0664 23.7451 cv
44.9473 23.8892 44.9473 24.1001 44.7881 24.2261 cv
44.6489 24.334 44.3965 24.4077 44.2061 24.3433 cv
44.188 24.3433 44.1665 24.3433 44.1475 24.3433 cv
44.1484 24.2559 44.5313 23.6621 44.6182 23.5864 cv
44.6982 23.5171 44.8159 23.5127 44.8794 23.4204 cv
44.9375 23.334 44.9282 23.2324 44.9785 23.1436 cv
45.0376 23.0391 45.1553 23.0054 45.1973 22.8867 cv
cp
f
42.9863 22.4756 mo
43.0215 22.3311 43.1592 22.2358 43.2012 22.0918 cv
43.2515 21.9224 43.1899 21.7793 43.3101 21.6421 cv
43.4336 21.5005 44.1836 21.6143 44.4277 21.4854 cv
44.584 21.4863 44.7363 21.4863 44.8921 21.4888 cv
44.8921 21.5083 44.8921 21.5278 44.8921 21.5479 cv
44.8472 21.5479 44.8472 21.5708 44.8271 21.5996 cv
44.5996 21.9209 44.4824 22.2935 44.3228 22.647 cv
44.2495 22.7749 44.1738 22.9028 44.1025 23.0332 cv
44.0439 23.1724 43.9844 23.3145 43.9268 23.4536 cv
43.7759 23.7349 43.3984 24.2168 43.0693 24.2788 cv
43.0693 24.2695 43.0693 24.2593 43.0693 24.25 cv
43.0186 24.249 43.0352 23.9829 43.0283 23.9307 cv
43.0049 23.8018 42.9546 23.6934 42.9717 23.5483 cv
42.9854 23.3916 43.0693 23.2866 43.0664 23.1128 cv
43.0596 22.8984 42.9346 22.6909 42.9863 22.4756 cv
cp
f
40.6685 21.498 mo
40.7759 21.3828 41.1978 21.459 41.3647 21.4106 cv
41.5488 21.4727 42.0166 21.4658 42.2393 21.4741 cv
42.2437 21.6021 42.2495 21.7275 42.2549 21.8564 cv
42.2773 21.9521 42.2998 22.0488 42.3203 22.1455 cv
42.3022 22.252 42.2842 22.3589 42.2671 22.4648 cv
42.2563 22.9292 42.1973 23.3867 42.1733 23.8364 cv
42.189 24.1187 42.2046 24.4009 42.2202 24.6821 cv
42.2124 24.6821 42.2007 24.6821 42.1919 24.6821 cv
42.1919 24.6729 42.1919 24.6636 42.1919 24.6533 cv
41.8208 24.6509 41.3945 23.5171 41.2456 23.2578 cv
41.1616 23.1128 41.0342 23.0205 40.9346 22.8833 cv
40.7256 22.5908 40.3477 21.8379 40.6685 21.498 cv
cp
f
38.3076 21.7207 mo
38.3086 21.7134 38.3105 21.708 38.313 21.7012 cv
38.3735 21.5234 38.8335 21.52 38.999 21.4253 cv
39.1714 21.4268 39.3945 21.3965 39.5356 21.4648 cv
39.9502 21.6685 40.0894 22.2734 40.2559 22.6553 cv
40.3628 22.9019 40.5083 23.1416 40.6265 23.3882 cv
40.7061 23.5195 40.7817 23.6494 40.8589 23.7798 cv
40.9121 23.9111 40.9307 24.0552 40.9355 24.2085 cv
40.9375 24.3169 40.9561 24.522 40.8545 24.5752 cv
40.772 24.6201 40.647 24.5991 40.5669 24.5659 cv
40.415 24.5083 38.3174 21.9038 38.3062 21.7676 cv
38.3062 21.7598 38.3062 21.7529 38.3062 21.7437 cv
38.3062 21.7368 38.3076 21.7275 38.3076 21.7207 cv
cp
f
37.1641 21.4453 mo
37.3813 21.481 37.5103 21.5439 37.6685 21.7012 cv
37.8999 21.9243 38.0972 22.1909 38.2832 22.4521 cv
38.3779 22.585 38.4321 22.7334 38.5454 22.8638 cv
38.6904 23.019 38.8374 23.1748 38.9819 23.3281 cv
39.1118 23.4927 39.2397 23.6543 39.3687 23.8188 cv
39.416 23.8892 39.46 23.9585 39.5078 24.0288 cv
39.6001 24.1108 39.6953 24.1924 39.7881 24.2729 cv
39.9839 24.4609 40.1621 24.6948 40.2632 24.9336 cv
40.2168 24.9336 40.2183 24.9839 40.207 25.02 cv
40.0474 25.02 39.8525 24.9624 39.7388 24.8726 cv
39.5513 24.6821 39.3643 24.4897 39.1753 24.2983 cv
39.0552 24.1787 38.9146 24.1304 38.811 23.9932 cv
38.6104 23.7246 38.459 23.4043 38.2124 23.1631 cv
38.0708 23.0239 37.8672 22.9976 37.7236 22.8613 cv
37.7197 22.8569 37.7148 22.8511 37.7109 22.8477 cv
37.5591 22.6895 37.5044 22.4766 37.3755 22.3062 cv
37.2285 22.1123 37.0137 21.98 36.8745 21.7886 cv
36.8696 21.7759 36.8613 21.7622 36.855 21.7505 cv
36.8525 21.7422 36.8511 21.7354 36.8486 21.7285 cv
36.8232 21.5625 37.0562 21.4971 37.1641 21.4453 cv
cp
f
43.6929 27.5195 mo
43.7769 27.5308 43.8599 27.54 43.9424 27.5503 cv
44.1934 27.6416 44.4121 28.0117 44.3179 28.2778 cv
44.2661 28.4204 44.1064 28.5464 43.9849 28.6396 cv
43.9009 28.7051 43.7773 28.8042 43.6567 28.7949 cv
43.4873 28.7778 43.5586 28.4185 43.6006 28.3213 cv
43.6606 28.188 43.811 28.1519 43.8208 27.9863 cv
43.8359 27.7915 43.6919 27.7036 43.6929 27.5195 cv
cp
f
44.1025 26.3223 mo
44.0044 26.3818 43.8892 26.541 43.7603 26.5259 cv
43.5811 26.5039 43.5078 26.2715 43.3901 26.1631 cv
43.2612 26.0386 42.9912 25.9775 43.0283 25.7412 cv
43.041 25.6455 43.1265 25.5947 43.208 25.564 cv
43.208 25.5557 43.208 25.5439 43.208 25.5361 cv
43.4043 25.5732 43.5391 25.6719 43.7153 25.7471 cv
43.9175 25.8311 44.123 25.8784 44.3335 25.958 cv
44.3774 25.9741 44.397 26.0249 44.3804 26.0732 cv
44.3384 26.1978 44.2031 26.2598 44.1025 26.3223 cv
cp
f
43.7227 29.9336 mo
43.6836 30.147 43.1982 30.2358 43.0313 30.1318 cv
42.7837 29.9785 43.2573 29.6709 43.3599 29.5903 cv
43.4844 29.6235 43.7544 29.7642 43.7227 29.9336 cv
cp
f
42.4521 29.748 mo
42.3701 29.7656 42.3262 29.6895 42.2715 29.6538 cv
42.2046 29.6108 42.126 29.5981 42.0674 29.5327 cv
41.9175 29.3677 41.9619 29.1929 41.9531 28.9692 cv
41.9463 28.854 41.9258 28.7109 41.9688 28.605 cv
42.0054 28.5103 42.0967 28.4678 42.1709 28.416 cv
42.2661 28.4204 42.3433 28.4263 42.416 28.4712 cv
42.5 28.5244 43.0889 29.0938 43.1006 29.1558 cv
43.1392 29.376 42.6294 29.7114 42.4521 29.748 cv
cp
f
45.8794 27.8813 mo
45.8784 28.0923 45.77 28.3213 45.584 28.4058 cv
45.583 28.4507 45.4814 28.3872 45.437 28.3745 cv
45.438 28.1626 45.7129 28.0093 45.8521 27.8813 cv
45.8599 27.8813 45.8696 27.8813 45.8794 27.8813 cv
cp
f
45.3306 27.5054 mo
45.2583 27.5576 45.1904 27.6196 45.0928 27.6187 cv
44.9912 27.6162 44.9487 27.5518 44.918 27.4678 cv
44.894 27.3936 44.9028 26.4512 44.9282 26.3691 cv
44.96 26.2681 45.1162 26.1816 45.1875 26.0996 cv
45.4087 26.1675 45.396 26.3013 45.4717 26.4995 cv
45.6094 26.8647 45.7061 27.2266 45.3306 27.5054 cv
cp
f
44.9688 29.1904 mo
44.9956 29.1904 44.9858 29.1982 44.9673 29.2192 cv
44.9673 29.353 44.5889 29.5903 44.4712 29.4751 cv
44.3052 29.3149 44.5103 29.1465 44.6172 29.0415 cv
44.7725 29.0532 44.8862 29.0615 44.9688 29.1904 cv
cp
f
42.2998 26.1123 mo
42.4043 26.1226 42.5049 26.1353 42.6079 26.1455 cv
42.79 26.2056 43.3706 26.6748 43.3081 26.9053 cv
43.2544 27.1104 43.0605 27.23 42.9121 27.3789 cv
42.7583 27.5288 42.5728 27.7061 42.3516 27.7324 cv
42.1328 27.7593 41.8208 26.7852 41.8613 26.6123 cv
41.8818 26.5352 42.2241 26.1851 42.2983 26.1421 cv
42.2983 26.1318 42.2983 26.1226 42.2998 26.1123 cv
cp
f
41.6216 28.478 mo
41.5078 28.5752 41.3594 28.7456 41.2026 28.7559 cv
41.0815 28.7651 41.0229 28.6787 40.9443 28.6118 cv
40.7524 28.4448 40.6138 28.1025 40.6792 27.8306 cv
40.7241 27.7476 40.7651 27.666 40.8101 27.583 cv
40.8896 27.3477 40.8564 27.3062 41.04 27.1255 cv
41.2905 27.2427 42.0117 27.7754 41.9385 28.1152 cv
41.9072 28.2568 41.7241 28.3872 41.6216 28.478 cv
cp
f
41.7529 30.0767 mo
41.7432 30.0767 41.7349 30.0767 41.7241 30.0767 cv
41.7241 30.1274 41.6172 30.0962 41.5806 30.0869 cv
41.1401 29.9937 40.6646 29.8809 41.0283 29.3423 cv
41.0986 29.353 41.1597 29.354 41.2119 29.3979 cv
41.3145 29.4751 41.3452 29.5894 41.4199 29.6836 cv
41.5317 29.8267 41.7007 29.8979 41.7529 30.0767 cv
cp
f
39.7334 26.3613 mo
39.7344 26.3613 39.9448 26.1064 40.0249 26.0698 cv
40.0249 26.0605 40.0249 26.0503 40.0249 26.041 cv
40.3916 26.2793 40.6904 26.7061 40.3105 27.0933 cv
40.2349 27.1689 40.1128 27.2729 40.0098 27.2891 cv
39.6685 27.3398 39.812 26.9214 39.8076 26.7417 cv
39.8047 26.6055 39.7642 26.481 39.7334 26.3613 cv
cp
f
40.4063 25.8105 mo
40.4063 25.7817 40.4063 25.7515 40.4063 25.7241 cv
40.4648 25.708 40.5239 25.6904 40.583 25.6768 cv
40.9482 25.6235 41.1821 25.5684 41.4863 25.4072 cv
41.5811 25.4336 41.731 25.4336 41.7896 25.5278 cv
41.9541 25.7837 41.1851 26.3071 40.96 26.2842 cv
40.7104 26.2554 40.5801 25.958 40.4063 25.8105 cv
cp
f
39.9546 28.2295 mo
40.0093 28.2441 40.064 28.2627 40.1187 28.2764 cv
40.2588 28.3608 40.7681 28.8472 40.7832 28.998 cv
40.7998 29.1616 40.3691 29.4634 40.2319 29.4937 cv
40.1147 29.5166 40.0835 29.3989 40.0483 29.3149 cv
39.9131 28.9805 39.8154 28.6143 39.9546 28.2295 cv
cp
f
39.3594 27.9214 mo
39.0757 27.9917 39.1362 27.4424 39.1445 27.2612 cv
39.3525 27.3325 39.7783 27.8154 39.3594 27.9214 cv
cp
f
42.9678 58.2598 mo
42.9678 58.1777 43.6006 57.2559 43.6943 57.1445 cv
43.7422 57.0859 43.8135 57.0391 43.8784 57.0117 cv
43.8784 57.0039 43.8784 56.9922 43.8784 56.9805 cv
44.0239 56.9814 44.1709 56.9844 44.3179 56.9844 cv
44.3149 57.1641 43.624 58.1816 43.4453 58.2578 cv
43.3179 58.3154 43.145 58.2871 42.9951 58.291 cv
42.9951 58.2813 42.9951 58.2715 42.9951 58.2598 cv
42.9863 58.2598 42.9756 58.2598 42.9678 58.2598 cv
cp
f
38.5195 58.1738 mo
38.3579 58.2422 38.1113 58.1982 37.9209 58.2031 cv
37.9233 57.9404 38.9917 57.1719 39.21 56.9561 cv
39.356 56.9561 39.502 56.9561 39.6489 56.9561 cv
39.6479 57.1719 38.7305 58.083 38.5195 58.1738 cv
cp
f
46.478 63.9307 mo
46.2915 64.0127 46.0366 63.8506 45.9331 63.7148 cv
45.8208 63.5635 45.7817 63.3867 45.7227 63.2109 cv
45.6299 62.9326 45.5391 62.6436 45.4302 62.3691 cv
45.3584 62.1846 45.2183 61.9375 45.2446 61.7197 cv
45.2617 61.582 45.3911 61.5283 45.4858 61.458 cv
45.5703 61.4785 45.6299 61.5039 45.6797 61.5791 cv
45.7354 61.665 45.7549 61.7607 45.7891 61.8604 cv
45.8813 62.1318 45.9707 62.3965 46.0483 62.6777 cv
46.1387 62.9951 46.2754 63.3203 46.4106 63.6172 cv
46.4321 63.668 46.5762 63.8867 46.478 63.9307 cv
cp
f
45.498 56.9453 mo
45.6377 57.1406 46.4712 58.0635 46.4233 58.2383 cv
46.4097 58.2813 46.3579 58.2871 46.3184 58.2959 cv
46.0664 58.2988 45.8149 58.3027 45.5625 58.3047 cv
45.1162 58.3027 44.6685 58.2988 44.2217 58.2969 cv
44.2217 58.2871 44.2217 58.2793 44.2231 58.2676 cv
44.2119 58.2676 44.2007 58.2676 44.1924 58.2676 cv
44.1924 58.1699 44.271 58.082 44.311 58.0049 cv
44.4512 57.7432 44.9995 57 44.9634 56.7295 cv
44.9531 56.6396 44.8862 56.5713 44.8047 56.5439 cv
44.4526 56.4229 44.0303 56.5264 43.6479 56.5127 cv
43.4453 56.502 42.9814 56.4014 42.8027 56.4814 cv
42.4199 56.4795 41.0854 56.291 40.9287 56.6279 cv
40.8896 56.709 40.9434 56.8018 40.9766 56.8711 cv
41.1323 57.1777 41.3721 57.4609 41.5791 57.7412 cv
41.6919 57.9141 41.8047 58.0859 41.917 58.2539 cv
41.916 58.2656 41.916 58.2734 41.916 58.2832 cv
41.8877 58.2959 41.8569 58.3027 41.8286 58.3154 cv
41.0078 58.3096 40.1929 58.2764 39.3789 58.2715 cv
39.3789 58.252 39.3789 58.2324 39.3789 58.2129 cv
39.4063 58.2129 40.5728 56.8047 40.7007 56.6445 cv
40.7007 56.6064 40.6919 56.6064 40.6709 56.585 cv
40.5264 56.5693 40.3779 56.5469 40.2339 56.5303 cv
39.9907 56.5186 39.7485 56.5068 39.5044 56.4932 cv
38.8076 56.4766 38.0718 56.5186 37.4053 56.4521 cv
37.4063 56.3701 38.4004 55.4111 38.5337 55.2734 cv
39.3789 54.3857 40.2593 53.5322 41.1421 52.6641 cv
41.4463 52.3506 41.7485 52.041 42.0518 51.7324 cv
42.1499 51.6377 42.2393 51.5342 42.3628 51.4922 cv
42.3628 51.4746 42.3628 51.4521 42.3643 51.4326 cv
42.5605 51.5332 42.7319 51.7324 42.8926 51.8965 cv
43.1563 52.167 43.4199 52.4404 43.6807 52.7109 cv
43.8486 52.8652 44.0137 53.0176 44.1807 53.1738 cv
44.9307 53.9561 45.7295 54.6943 46.4951 55.4697 cv
46.8096 55.7871 47.2217 56.1113 47.4678 56.4795 cv
47.4106 56.4873 47.3516 56.4971 47.293 56.5068 cv
47.0527 56.5068 46.8076 56.502 46.564 56.501 cv
46.4731 56.499 46.3579 56.4717 46.2749 56.501 cv
45.9414 56.499 45.5479 56.4561 45.2808 56.5811 cv
45.2783 56.709 45.4297 56.8467 45.498 56.9453 cv
cp
f
37.2393 60.2539 mo
37.3574 60.0508 39.606 60.2246 39.98 60.2266 cv
40.5605 60.2305 41.0762 60.1484 41.644 60.1494 cv
42.4023 60.1543 43.2065 60.2109 43.9775 60.2139 cv
44.3687 60.2168 44.7993 60.2031 45.2031 60.1914 cv
46.1226 60.166 47.0767 60.209 47.9727 60.2139 cv
47.9741 60.2051 47.9741 60.1943 47.9741 60.1855 cv
48.0215 60.1855 48.0259 59.9277 48.0259 59.8643 cv
48.0288 59.2813 48.04 58.6719 48.0444 58.0566 cv
48.0464 57.6348 48.0327 57.208 48.1069 56.832 cv
48.5835 57.082 48.5259 57.6797 48.5415 58.2061 cv
48.5483 58.5293 48.5708 58.9053 48.5601 59.2539 cv
48.5415 59.4424 48.5239 59.625 48.5063 59.8096 cv
48.4907 60.0879 48.5723 60.4014 48.4673 60.6543 cv
48.4673 60.6738 48.4673 60.6934 48.4673 60.7129 cv
48.4585 60.7129 48.4478 60.7129 48.438 60.7129 cv
48.438 60.6592 48.2573 60.6826 48.2051 60.6826 cv
47.7432 60.6797 47.3086 60.7061 46.833 60.7021 cv
46.627 60.7021 46.3384 60.6592 46.1621 60.7295 cv
45.9878 60.7295 45.7578 60.6934 45.6074 60.7549 cv
45.0723 60.7529 44.5635 60.749 44.0322 60.7129 cv
43.7974 60.6963 43.4746 60.5889 43.2456 60.6826 cv
42.8545 60.6826 42.4697 60.6514 42.0796 60.6621 cv
41.9932 60.667 41.8862 60.6396 41.8159 60.6738 cv
41.5962 60.6738 41.1055 60.5889 40.9404 60.6709 cv
40.811 60.6709 40.6665 60.6543 40.5605 60.6982 cv
40.1919 60.6934 39.8213 60.6904 39.4531 60.6865 cv
39.2329 60.6738 38.9863 60.667 38.7529 60.6543 cv
38.6748 60.6543 38.5962 60.6572 38.5181 60.6572 cv
38.4321 60.667 38.3452 60.6738 38.2559 60.6865 cv
37.8242 60.6826 37.479 60.7861 37.2705 60.416 cv
37.252 60.3818 37.2129 60.2988 37.2393 60.2539 cv
cp
f
48.3618 67.5391 mo
48.2754 67.6602 48.0132 67.6934 47.8721 67.7109 cv
47.876 66.9834 47.835 66.2041 47.8633 65.4609 cv
47.8716 65.249 47.8335 65.001 47.8774 64.7998 cv
47.8916 64.7295 47.9292 64.6973 47.9771 64.6484 cv
48.127 64.6514 48.2671 64.6484 48.3848 64.71 cv
48.4282 64.71 48.4365 65.0225 48.4268 65.0869 cv
48.4043 65.2461 48.4395 65.4063 48.4395 65.585 cv
48.438 65.8457 48.396 66.0791 48.4097 66.3418 cv
48.4268 66.6113 48.5063 67.334 48.3618 67.5391 cv
cp
f
57.126 66.5947 mo
57.0288 66.5947 56.9097 66.6094 56.8345 66.6543 cv
56.6895 66.6523 56.395 66.7285 56.2793 66.7959 cv
56.0137 66.7959 55.7866 66.9053 55.5459 66.9512 cv
55.3823 66.9834 55.2065 67.0146 55.0518 67.042 cv
54.9365 67.0576 54.8013 67.0537 54.7012 67.1084 cv
54.6348 67.1162 54.5664 67.126 54.4976 67.1357 cv
54.4302 67.1436 54.3613 67.1553 54.2925 67.1631 cv
54.1182 67.1611 53.9019 67.1357 53.7686 67.2188 cv
53.6997 67.2275 53.6323 67.2383 53.5625 67.2451 cv
53.2798 67.2451 52.9365 67.2021 52.7173 67.3311 cv
52.6118 67.3311 52.4863 67.3203 52.3965 67.3564 cv
52.2622 67.3564 52.1611 67.3262 52.0474 67.2959 cv
52.0459 67.3564 51.6968 67.4063 51.6382 67.4414 cv
51.4424 67.4385 51.1938 67.4043 51.0254 67.4639 cv
50.958 67.4766 50.8896 67.4834 50.8223 67.4941 cv
50.6265 67.4922 50.3931 67.4717 50.2363 67.5498 cv
50.1069 67.5469 49.9614 67.5547 49.8574 67.6055 cv
49.6675 67.6055 49.1836 67.6543 49.0698 67.5625 cv
48.8809 67.4131 48.9858 65.5576 48.9932 65.21 cv
48.9878 65.0322 48.9775 64.8584 48.9722 64.6826 cv
48.9648 64.498 49.0269 63.8779 48.71 63.9814 cv
48.5303 63.9814 48.1465 63.9385 48.0122 64.0068 cv
47.8198 64.0049 47.3086 64.0439 47.1963 63.9404 cv
46.9966 63.751 46.8862 63.0576 46.7837 62.7793 cv
46.625 62.373 46.3687 61.9639 46.314 61.5156 cv
46.3071 61.4697 46.2949 61.3906 46.3267 61.3555 cv
46.4097 61.2559 46.7969 61.2734 46.9453 61.2734 cv
47.2891 61.2764 48.8525 61.2813 48.98 61.0625 cv
49.0591 60.917 49.0278 60.4609 49.0142 60.2793 cv
49.0249 59.998 49.0376 59.7148 49.0488 59.4316 cv
49.064 58.9971 48.9648 58.4902 49.0952 58.0918 cv
50.0894 59.1641 51.2163 60.1465 52.2397 61.2148 cv
52.3364 61.3359 52.4297 61.4531 52.5254 61.5732 cv
52.7808 61.8291 53.0664 62.0586 53.3296 62.3164 cv
54.0361 63.0107 54.6914 63.7627 55.3823 64.459 cv
55.9116 64.9941 56.4653 65.5195 56.9956 66.0557 cv
57.0947 66.1533 57.2646 66.2666 57.311 66.4004 cv
57.3501 66.502 57.1787 66.5547 57.126 66.5947 cv
cp
f
55.1997 38.8911 mo
55.3599 38.7021 55.5205 38.5122 55.6831 38.3223 cv
55.8716 38.125 56.0898 37.9717 56.2822 37.7886 cv
56.5381 37.5269 56.791 37.2651 57.0469 37.0049 cv
57.335 36.7305 57.6235 36.4541 57.9106 36.1763 cv
58.4751 35.5918 59.0361 35.0088 59.5996 34.4233 cv
60.4648 33.5962 61.3467 32.7803 62.1431 31.8916 cv
62.3467 31.6611 62.6499 31.4712 62.8086 31.2153 cv
62.9512 31.4121 62.8491 31.9321 62.8652 32.2061 cv
62.9023 32.8506 62.8711 33.5498 62.8784 34.2197 cv
62.894 34.5596 62.9082 34.8994 62.9238 35.2383 cv
62.9038 35.5898 62.8887 35.9399 62.8687 36.2891 cv
62.8843 36.4932 62.8984 36.6997 62.916 36.9023 cv
62.9102 37.0015 62.9038 37.0957 62.9004 37.1938 cv
62.9121 37.3115 62.9238 37.4277 62.9336 37.5464 cv
62.9219 37.6431 62.9082 37.7378 62.8926 37.8359 cv
62.8477 38.374 62.8433 38.9146 62.8516 39.4712 cv
62.877 39.751 62.9023 40.0347 62.9277 40.3169 cv
62.9121 40.4727 62.894 40.6255 62.875 40.7822 cv
62.873 41.1318 62.8687 41.4829 62.8652 41.8335 cv
62.8574 41.9512 62.8516 42.0649 62.8457 42.1826 cv
62.8516 42.4072 62.9063 42.6377 62.9023 42.8535 cv
62.894 43.1621 62.8198 43.4883 62.8237 43.8164 cv
62.8516 44.2158 62.877 44.6143 62.9038 45.0127 cv
62.8867 45.2568 62.8672 45.498 62.8477 45.7412 cv
62.8613 45.8311 62.8687 45.918 62.8809 46.0078 cv
62.8867 46.2686 62.8613 46.5352 62.8516 46.79 cv
62.8633 46.9756 62.8784 47.1621 62.8906 47.3477 cv
62.8906 47.4902 62.8535 47.623 62.8433 47.7549 cv
62.8237 48.0342 62.8418 48.3154 62.875 48.5742 cv
62.9258 48.9775 62.9102 49.5049 62.8687 49.9131 cv
62.8555 50.0098 62.8394 50.1074 62.8237 50.2061 cv
62.8101 50.4512 62.873 50.668 62.8687 50.9063 cv
62.8516 51.043 62.8335 51.1758 62.8164 51.3135 cv
62.8223 51.458 62.8296 51.6035 62.8359 51.75 cv
62.8281 51.9453 62.8164 52.1396 62.8066 52.335 cv
62.8042 52.5186 62.9199 53.5674 62.7456 53.5674 cv
62.6318 53.5664 61.7021 52.5498 61.5454 52.3945 cv
60.3838 51.2178 59.2046 50.0225 58.0508 48.8535 cv
57.8662 48.668 57.71 48.4492 57.5298 48.2734 cv
57.3657 48.1162 57.2012 47.9561 57.0347 47.7998 cv
56.9531 47.7012 56.8652 47.5996 56.7822 47.502 cv
55.6641 46.4023 54.5322 45.2871 53.4126 44.1904 cv
53.2124 43.9941 51.7583 42.5376 51.7534 42.4409 cv
51.7598 42.4141 51.7632 42.3877 51.7661 42.3613 cv
51.8789 42.0859 52.3359 41.7793 52.5635 41.5625 cv
52.811 41.3252 52.9932 41.0615 53.2261 40.8262 cv
53.4346 40.6108 53.6636 40.4033 53.875 40.1914 cv
53.9536 40.1255 54.0322 40.0586 54.1123 39.9907 cv
54.2944 39.8042 54.4751 39.6152 54.6572 39.4282 cv
54.8384 39.2485 55.0176 39.0713 55.1997 38.8911 cv
cp
f
48.4927 22.6401 mo
48.5879 22.5698 48.6904 22.5479 48.7754 22.4556 cv
48.835 22.3657 48.8936 22.2773 48.9526 22.1885 cv
49.1094 21.959 49.272 21.7656 49.4634 21.5649 cv
49.5313 21.5029 49.6011 21.4395 49.6699 21.377 cv
49.7964 21.3091 50.0161 21.3413 50.1733 21.3428 cv
50.5068 21.3447 50.8359 21.3286 51.1362 21.2974 cv
51.2847 21.2813 51.4199 21.2905 51.5454 21.2344 cv
51.7695 21.2388 51.9912 21.2422 52.2153 21.2471 cv
52.4668 21.2759 52.7344 21.3369 53.0029 21.3379 cv
53.2407 21.3403 53.4453 21.2515 53.6743 21.2573 cv
53.752 21.2725 53.8306 21.2827 53.9087 21.2964 cv
54.188 21.3286 54.541 21.3286 54.7837 21.2539 cv
54.7837 21.2617 54.7837 21.2725 54.7837 21.2813 cv
54.7935 21.2813 54.8013 21.2813 54.814 21.2813 cv
54.814 21.3208 54.8218 21.3115 54.7837 21.3115 cv
54.7793 21.3276 54.7725 21.3413 54.769 21.3589 cv
54.4854 21.7344 54.0713 22.0215 53.7417 22.3394 cv
53.1172 22.9502 52.4941 23.5645 51.8721 24.1763 cv
51.731 24.3203 51.5664 24.4312 51.4277 24.5752 cv
50.8662 25.1479 50.3608 25.769 49.7861 26.3188 cv
49.5786 26.5205 49.3691 26.7222 49.1641 26.9214 cv
49.0464 27.0205 48.9326 27.1182 48.8188 27.2188 cv
48.6885 27.3721 48.5601 27.5254 48.4321 27.6772 cv
48.0845 28.0449 47.7163 28.4009 47.3442 28.749 cv
47.1694 28.9531 46.9956 29.1582 46.8228 29.3643 cv
46.436 29.7378 46.0508 30.1099 45.667 30.4844 cv
45.0093 31.1289 44.3618 31.7935 43.7017 32.4297 cv
43.4824 32.6372 43.2905 32.8955 43.0498 33.0581 cv
43.0498 33.0693 43.0498 33.0776 43.0498 33.0889 cv
43.0396 33.0889 43.0298 33.0889 43.02 33.0889 cv
43.02 33.0796 43.02 33.0693 43.02 33.0581 cv
43.0107 33.0581 43.001 33.0581 42.9893 33.0581 cv
42.999 32.9717 43.0078 32.8838 43.0166 32.7964 cv
43.0205 32.5947 42.9824 32.3906 43.0029 32.1831 cv
43.0273 32.0762 43.0537 31.9702 43.0762 31.8618 cv
43.0903 31.6611 43.0186 31.4951 43.1128 31.3223 cv
43.1714 31.2139 43.3062 31.1704 43.3921 31.0874 cv
43.561 30.9199 43.6582 30.707 43.8628 30.5723 cv
44.0752 30.4302 44.3423 30.3887 44.5723 30.2783 cv
44.7178 30.2031 44.8345 30.0791 44.9727 29.9937 cv
45.2837 29.791 45.6431 29.6167 45.8765 29.2954 cv
45.939 29.1675 46.0034 29.0415 46.0674 28.9141 cv
46.1445 28.8032 46.2236 28.6914 46.3003 28.5806 cv
46.3608 28.4287 46.353 28.2568 46.397 28.0957 cv
46.457 27.8765 46.5669 27.6772 46.5732 27.4189 cv
46.5454 27.1958 46.5181 26.9731 46.4907 26.7485 cv
46.4604 26.4604 46.2988 26.2012 46.127 25.9834 cv
46.0537 25.8921 45.9644 25.8022 45.9194 25.6938 cv
45.8628 25.6938 45.9194 25.6191 45.9351 25.5869 cv
45.9834 25.521 46.0288 25.4556 46.0747 25.3911 cv
46.2754 25.0889 46.481 24.7627 46.7808 24.5415 cv
46.9321 24.4287 46.9526 24.2671 47.0688 24.1289 cv
47.207 23.9678 47.4121 23.8813 47.5552 23.7119 cv
47.6289 23.6138 47.7036 23.5137 47.7773 23.418 cv
47.8379 23.3052 47.8662 23.1875 47.9585 23.0908 cv
48.0522 22.9917 48.1572 22.9453 48.2573 22.8623 cv
48.3359 22.7886 48.4141 22.7139 48.4927 22.6401 cv
cp
f
31.5918 21.3564 mo
31.8789 21.3589 32.2368 21.4004 32.4961 21.3301 cv
32.7046 21.3726 32.9404 21.3599 33.166 21.3643 cv
33.3433 21.376 33.5166 21.3862 33.6929 21.3955 cv
33.9355 21.3955 34.1768 21.3955 34.4194 21.3945 cv
34.5283 21.415 34.6348 21.4326 34.7402 21.4521 cv
34.9629 21.4531 35.2251 21.3032 35.4424 21.377 cv
35.7002 21.4658 35.9224 21.7549 36.1191 21.9546 cv
36.4336 22.2646 36.7451 22.5732 37.0562 22.8833 cv
37.2632 23.1069 37.4595 23.3628 37.6699 23.583 cv
37.9307 23.8525 38.2168 24.0459 38.479 24.3203 cv
38.6357 24.4829 38.7295 24.6636 38.8823 24.8228 cv
38.9678 24.8906 39.0571 24.96 39.145 25.0269 cv
39.313 25.1675 39.4683 25.355 39.562 25.543 cv
39.4688 25.543 39.332 25.7437 39.2695 25.8071 cv
39.0283 26.0605 38.8389 26.3164 38.7588 26.6504 cv
38.7383 26.7852 38.7183 26.9189 38.6978 27.0537 cv
38.6538 27.2695 38.5981 27.4805 38.6235 27.7236 cv
38.6621 27.8799 38.6987 28.0347 38.7383 28.1899 cv
38.8057 28.3501 38.8711 28.5103 38.9385 28.6709 cv
39.021 28.8481 39.0601 29.0347 39.1807 29.2007 cv
39.2715 29.3208 39.4263 29.3657 39.5396 29.4507 cv
39.6533 29.5327 39.6992 29.6709 39.8135 29.7563 cv
39.9224 29.8091 40.0303 29.8589 40.1382 29.9082 cv
40.29 30.0098 40.4385 30.1099 40.5884 30.209 cv
40.7876 30.3359 41.0313 30.4224 41.2065 30.5894 cv
41.3218 30.7471 41.4351 30.9038 41.5498 31.062 cv
41.6538 31.1899 41.8232 31.2798 41.8984 31.4307 cv
41.9482 31.5342 41.9873 31.6763 41.9932 31.7993 cv
41.999 31.9136 41.9692 32.0415 41.9961 32.1509 cv
42.0571 32.4092 42.1611 32.7769 42.1157 33.0532 cv
41.8809 33.0522 41.3926 32.4619 41.2163 32.2891 cv
40.8545 31.9502 40.4902 31.6128 40.1304 31.2739 cv
39.8662 30.9941 39.604 30.7129 39.3398 30.4316 cv
38.8193 29.8887 38.2568 29.3828 37.7432 28.8481 cv
37.4692 28.561 37.1875 28.2788 36.9102 27.9897 cv
36.7964 27.855 36.6763 27.7188 36.5601 27.584 cv
35.6064 26.6504 34.6616 25.7241 33.7144 24.7964 cv
33.4634 24.5229 33.2109 24.25 32.9575 23.978 cv
32.4136 23.4272 31.9102 22.8823 31.3413 22.3579 cv
31.062 22.0972 30.4663 21.7422 30.3657 21.377 cv
30.769 21.3794 31.1782 21.354 31.5918 21.3564 cv
cp
f
25.439 50.1016 mo
25.0122 50.5 24.666 50.9619 24.2495 51.3604 cv
23.6343 51.9629 23.019 52.5625 22.4063 53.165 cv
22.2021 53.374 21.9072 53.5918 21.7549 53.8262 cv
21.7466 53.8262 21.7368 53.8262 21.7251 53.8262 cv
21.7241 53.8838 21.6582 53.7207 21.6514 53.6768 cv
21.6494 53.4658 21.645 53.25 21.6426 53.0371 cv
21.6543 52.3955 21.668 51.7529 21.6831 51.1133 cv
21.686 50.5811 21.6929 50.0732 21.6875 49.5684 cv
21.6821 49.3916 21.6733 49.2158 21.6665 49.042 cv
21.6772 48.5625 21.7056 48.0322 21.7002 47.5254 cv
21.6934 47.3105 21.686 47.0977 21.6777 46.8828 cv
21.6836 46.5732 21.7085 46.249 21.7095 45.9209 cv
21.7017 45.7246 21.6958 45.5322 21.686 45.3369 cv
21.6899 44.7822 21.6904 44.2295 21.6934 43.6748 cv
21.687 43.5088 21.6792 43.3438 21.6704 43.1797 cv
21.6899 42.9746 21.7095 42.7681 21.7271 42.5664 cv
21.7422 42.1055 21.6958 41.6709 21.7129 41.2236 cv
21.7295 40.8848 21.7476 40.5439 21.7632 40.2041 cv
21.7549 39.4722 21.7212 38.7471 21.7397 38.0156 cv
21.7622 37.6665 21.7827 37.3149 21.8062 36.9658 cv
21.7939 36.7803 21.7798 36.5957 21.7642 36.4111 cv
21.7578 35.668 21.7837 34.9097 21.7759 34.1953 cv
21.7676 34.0386 21.7603 33.8828 21.7524 33.7275 cv
21.7642 33.5439 21.7759 33.3584 21.7886 33.1743 cv
21.791 32.9575 21.748 32.7524 21.7622 32.5303 cv
21.7773 32.4043 21.7944 32.2798 21.8091 32.1533 cv
21.8042 31.8062 21.7925 31.4502 21.7944 31.1021 cv
22.0928 31.2119 22.3311 31.5415 22.5596 31.7646 cv
23.0654 32.2549 23.5674 32.7456 24.0693 33.2344 cv
24.2432 33.4209 24.4165 33.6055 24.5898 33.7896 cv
24.9688 34.1479 25.3477 34.5132 25.6895 34.9063 cv
25.8047 35.04 25.9126 35.1772 26.0479 35.3062 cv
26.2959 35.5415 26.5625 35.7578 26.8037 36.0117 cv
26.9087 36.1221 26.9609 36.2432 27.0747 36.3501 cv
27.6572 36.9033 28.2729 37.4209 28.8613 37.98 cv
29.4219 38.5571 29.9814 39.1357 30.5391 39.7144 cv
30.894 40.0508 33.1338 42.1528 33.001 42.4766 cv
32.9604 42.5376 32.9209 42.5986 32.8774 42.6606 cv
32.6152 43.1104 32.001 43.6162 31.5991 43.9805 cv
31.459 44.1045 31.373 44.2734 31.2388 44.4102 cv
30.9082 44.7471 30.5801 45.0664 30.249 45.4004 cv
29.791 45.8545 29.3252 46.3066 28.8633 46.7588 cv
28.5601 47.0674 28.2573 47.377 27.9556 47.6865 cv
27.8779 47.7764 27.8018 47.8643 27.7246 47.9512 cv
26.9609 48.6602 26.2021 49.3945 25.439 50.1016 cv
cp
f
37.8296 64.0088 mo
37.5776 64.0088 36.7373 63.9512 36.5889 64.0518 cv
36.5317 64.0908 36.5259 64.166 36.522 64.2334 cv
36.5161 65.0127 36.5093 65.792 36.5034 66.5684 cv
36.5078 66.9053 36.5474 67.3965 36.4771 67.7305 cv
36.46 67.8135 36.4136 67.8857 36.3496 67.9375 cv
36.3496 67.9482 36.3496 67.957 36.3496 67.9697 cv
36.1099 67.9658 35.8979 67.8643 35.6758 67.8281 cv
35.4634 67.7969 35.2422 67.8477 35.0376 67.8477 cv
34.8823 67.8252 34.7261 67.8047 34.5693 67.7852 cv
34.269 67.7578 33.9663 67.7295 33.665 67.6992 cv
33.5479 67.6875 33.3623 67.6719 33.2583 67.7178 cv
32.5615 67.7129 31.9146 67.5742 31.2456 67.5098 cv
30.9355 67.4766 30.6343 67.4805 30.3467 67.4297 cv
30.1021 67.3877 29.8574 67.3486 29.6143 67.3086 cv
29.5093 67.2842 29.3994 67.2588 29.292 67.2363 cv
29.1387 67.2275 28.9849 67.2217 28.8291 67.2119 cv
28.479 67.1494 28.127 67.0869 27.7754 67.0234 cv
27.5063 66.9873 27.165 66.9834 26.9341 66.8662 cv
26.9243 66.8662 26.9146 66.8662 26.9028 66.8662 cv
26.9028 66.8467 26.9028 66.8271 26.9028 66.8076 cv
26.9478 66.8076 26.9243 66.8184 26.9453 66.7852 cv
27.1021 66.5361 27.4023 66.2715 27.6255 66.0674 cv
27.8301 65.8633 28.0327 65.6602 28.2363 65.4531 cv
28.5483 65.1445 28.8857 64.8652 29.2036 64.5527 cv
29.3604 64.3994 29.5171 64.2451 29.6733 64.0938 cv
29.8022 63.9502 29.9321 63.8047 30.061 63.6621 cv
30.8633 62.8936 31.6831 62.1455 32.4678 61.3438 cv
32.9517 60.8506 33.3989 60.3311 33.895 59.8545 cv
34.585 59.1914 35.2661 58.543 35.9214 57.8525 cv
36.1113 57.6572 36.3047 57.46 36.4966 57.2617 cv
36.6211 57.4385 36.5454 58.1113 36.5259 58.3418 cv
36.4937 58.7119 36.4868 59.0859 36.4839 59.4795 cv
36.4829 59.7275 36.4517 59.9863 36.5303 60.2002 cv
36.6021 60.4082 36.749 60.5889 36.8745 60.7725 cv
36.9424 60.8809 36.979 61.0186 37.1035 61.0889 cv
37.2813 61.1865 37.8438 61.2109 38.0776 61.2012 cv
38.4897 61.1855 38.9175 61.1563 39.3633 61.1582 cv
39.3613 61.4414 39.1807 61.79 39.0845 62.041 cv
38.9092 62.4844 38.7334 62.9248 38.5679 63.373 cv
38.5039 63.5391 38.4478 63.7637 38.3286 63.9033 cv
38.2402 63.998 38.1187 63.9346 38.0054 63.9795 cv
37.9458 63.9902 37.8882 63.998 37.8296 64.0088 cv
cp
f
39.8145 69.2021 mo
39.5117 69.1709 39.2324 68.9551 38.9609 68.8428 cv
38.7451 68.752 38.4971 68.7129 38.2998 68.5908 cv
38.291 68.5908 38.2798 68.5908 38.2715 68.5908 cv
38.2715 68.5791 38.2715 68.5723 38.2715 68.5625 cv
38.2813 68.5625 38.291 68.5625 38.3008 68.5625 cv
38.3008 68.5205 38.291 68.5332 38.3291 68.5332 cv
38.7563 68.5342 40.772 68.6104 40.9551 68.4307 cv
41.0464 68.3408 41.0439 67.9697 41.0454 67.8193 cv
41.0498 66.8779 40.9399 65.6133 41.8052 65.1318 cv
41.9307 65.0605 42.064 65.0459 42.1997 64.9941 cv
42.4395 64.9941 43.0303 65.083 43.001 65.4033 cv
42.9951 65.4805 42.9053 65.4805 42.8364 65.4902 cv
42.2651 65.5576 42.1538 65.8691 41.9175 66.3135 cv
41.7251 66.6738 41.7563 67.292 41.7461 67.7656 cv
41.7349 68.2285 41.7124 68.668 41.7095 69.1357 cv
41.6997 69.1357 41.6899 69.1357 41.6812 69.1357 cv
41.6812 69.1885 41.3955 69.1357 41.3301 69.1631 cv
41.1714 69.1611 41.0337 69.2061 40.8926 69.2139 cv
40.5313 69.21 40.1724 69.2061 39.8145 69.2021 cv
cp
f
43.0928 69.8008 mo
42.9932 69.9248 42.8896 70.043 42.7876 70.1689 cv
42.5337 70.4268 42.2715 70.665 42.1064 70.9756 cv
42.0981 70.9756 42.0894 70.9756 42.0796 70.9756 cv
41.9004 70.7754 41.7192 70.5781 41.5391 70.3789 cv
41.3633 70.2217 41.0073 70.0176 40.8013 69.916 cv
40.8013 69.9072 40.8013 69.8994 40.8013 69.8877 cv
40.7915 69.8877 40.7817 69.8877 40.7734 69.8877 cv
40.7734 69.8799 40.7734 69.8691 40.7734 69.8604 cv
40.7817 69.8604 40.7915 69.8604 40.8013 69.8604 cv
40.8027 69.8096 40.8486 69.8262 40.8877 69.8203 cv
40.9951 69.7969 41.104 69.7734 41.2104 69.7539 cv
41.5527 69.7422 41.8921 69.7305 42.2319 69.7227 cv
42.2476 69.6641 42.2632 69.6055 42.2788 69.5469 cv
42.2939 69.4004 42.3052 69.2549 42.3179 69.1084 cv
42.3042 68.9746 42.2886 68.8379 42.2749 68.7021 cv
42.2827 68.5645 42.2886 68.4297 42.2939 68.293 cv
42.291 68.001 42.2554 67.6846 42.2788 67.3877 cv
42.314 67.2217 42.3491 67.0557 42.3848 66.8916 cv
42.4219 66.6895 42.4766 66.4434 42.6147 66.2939 cv
42.7544 66.1377 42.9487 66.1533 43.1279 66.0791 cv
43.1855 66.1064 43.2515 66.1377 43.2739 66.207 cv
43.3354 66.4004 43.2891 66.6582 43.2866 66.8691 cv
43.2949 67.373 43.2993 67.8779 43.3022 68.3848 cv
43.3218 68.5039 43.3999 68.6074 43.4492 68.7129 cv
43.5215 68.877 43.5918 69.0391 43.6636 69.2041 cv
43.6919 69.2041 43.6934 69.2021 43.6831 69.2266 cv
43.5547 69.4678 43.2925 69.6328 43.0928 69.8008 cv
cp
f
44.2397 69.0059 mo
44.1025 68.8906 44.0044 68.627 43.9893 68.4473 cv
44.1348 68.4492 44.3003 68.4609 44.4287 68.4219 cv
44.7651 68.4229 45.0977 68.4443 45.4185 68.4561 cv
45.4185 68.4746 45.4185 68.4951 45.4185 68.5146 cv
45.3096 68.5137 45.1758 68.5996 45.0869 68.6406 cv
44.8188 68.7617 44.5479 68.8818 44.2788 69.0029 cv
44.2788 69.0391 44.2632 69.0254 44.2397 69.0059 cv
cp
f
34.1465 45.0566 mo
34.1514 44.792 34.2031 44.5166 34.2051 44.2412 cv
34.1865 43.9385 34.1699 43.6396 34.1543 43.3359 cv
34.1475 42.8359 34.2075 42.3589 34.2173 41.8784 cv
34.2012 41.5845 34.1865 41.293 34.1724 41.0015 cv
34.1797 40.7788 34.1895 40.5542 34.1963 40.333 cv
34.1797 40.1084 34.1626 39.8823 34.1465 39.6602 cv
34.1484 39.2959 34.2539 38.979 34.2627 38.6113 cv
34.2485 38.4072 34.2329 38.2021 34.2148 37.9961 cv
34.2231 37.8809 34.2285 37.7642 34.2368 37.647 cv
34.2524 37.2134 34.3047 36.8032 34.3071 36.3643 cv
34.3086 36.0669 34.2598 35.6118 34.3384 35.3511 cv
34.4155 35.0791 35.2139 34.1733 35.4888 34.0674 cv
35.4888 34.0581 35.4888 34.0479 35.4888 34.0386 cv
35.5479 34.2632 35.5142 34.564 35.4902 34.7959 cv
35.4619 35.0767 35.4429 35.3706 35.4526 35.6704 cv
35.4688 35.8638 35.4849 36.0586 35.5029 36.2549 cv
35.5044 36.6235 35.5068 36.9946 35.5083 37.3623 cv
35.4956 37.5293 35.4814 37.6938 35.4692 37.8589 cv
35.4775 38.0547 35.4844 38.2485 35.4912 38.4419 cv
35.4805 38.9595 35.4521 39.5483 35.4663 40.0771 cv
35.4814 40.6523 35.4028 41.2607 35.4185 41.8252 cv
35.436 42.0386 35.4526 42.2539 35.4688 42.4683 cv
35.4717 42.9063 35.4751 43.3438 35.4775 43.7813 cv
35.4634 43.9863 35.4458 44.1885 35.4302 44.3945 cv
35.4297 44.7344 35.4263 45.0742 35.4253 45.4131 cv
35.4229 45.8232 35.479 46.5488 35.3613 46.8916 cv
35.3237 47.001 35.1895 47.0713 35.127 47.166 cv
35.0332 47.2949 34.937 47.4258 34.8428 47.5576 cv
34.749 47.6475 34.6533 47.7373 34.5605 47.8271 cv
34.4639 48.0107 34.3657 48.1982 34.271 48.3828 cv
34.2598 48.3828 34.2524 48.3828 34.2427 48.3828 cv
34.2427 48.3916 34.2427 48.4023 34.2427 48.4111 cv
34.2329 48.4111 34.2207 48.4111 34.2119 48.4111 cv
34.2148 47.8613 34.1309 47.2695 34.124 46.7197 cv
34.1191 46.3945 34.1753 46.042 34.1924 45.7295 cv
34.2051 45.4893 34.1431 45.2842 34.1465 45.0566 cv
cp
f
34.6968 48.6738 mo
34.8394 48.3271 34.9565 48.2227 35.2383 47.9824 cv
35.3911 47.8467 35.5225 47.6787 35.6924 47.5703 cv
36.439 47.085 37.6108 47.0898 38.5337 47.2813 cv
38.7114 47.332 38.8877 47.3809 39.0645 47.4316 cv
39.6519 47.5439 40.1831 47.6113 40.6821 47.9053 cv
41.0088 48.0967 41.2769 48.3643 41.5776 48.6094 cv
41.6548 48.6602 41.7349 48.7109 41.812 48.7578 cv
41.9502 48.8633 42.0952 49.0869 42.2871 49.083 cv
42.5605 49.0811 42.7329 48.7285 42.9365 48.584 cv
43.1621 48.4189 43.3862 48.2422 43.6387 48.1201 cv
44.3257 47.7881 45.0117 47.4434 45.7705 47.2559 cv
46.0449 47.1934 46.3169 47.1289 46.5903 47.0645 cv
46.7471 47.0361 46.9165 47.0537 47.0571 46.9971 cv
47.2891 47.001 47.52 47.0059 47.7539 47.0107 cv
48.1406 47.0713 48.5444 47.2617 48.8457 47.4902 cv
48.98 47.6396 49.1118 47.7852 49.2461 47.9365 cv
49.46 48.167 49.6924 48.4111 49.7305 48.7305 cv
49.7207 48.7305 49.7109 48.7305 49.6992 48.7305 cv
49.6982 48.7861 49.4683 48.7607 49.4082 48.7607 cv
48.7964 48.7559 48.1846 48.7539 47.5708 48.75 cv
47.3477 48.748 47.0464 48.707 46.8706 48.8027 cv
46.667 48.8008 46.3843 48.6777 46.1992 48.7695 cv
46.1338 48.7793 46.0645 48.7891 45.9961 48.7979 cv
45.7661 48.7979 45.4844 48.7617 45.2939 48.8516 cv
45.1943 48.8516 45.082 48.8711 45.0039 48.9102 cv
44.8062 48.9092 44.3926 48.8594 44.2437 48.9346 cv
44.1567 48.9434 44.0693 48.9521 43.9814 48.9609 cv
43.895 48.9736 43.8071 48.9805 43.7192 48.9883 cv
43.5801 48.9883 43.396 49.0078 43.3115 49.1035 cv
43.2612 49.1035 43.3003 49.2588 43.3022 49.3105 cv
43.3145 49.8262 42.9321 50.2959 42.3979 50.292 cv
41.9663 50.2891 41.6294 49.9785 41.5454 49.5859 cv
41.5176 49.4512 41.5527 49.2607 41.4668 49.1533 cv
41.4297 49.1084 41.3594 49.0781 41.2964 49.0928 cv
41.0918 49.083 40.8896 49.0703 40.6841 49.0586 cv
40.6372 49.0703 40.5869 49.0781 40.5376 49.0889 cv
40.0601 49.0869 39.6343 49.0254 39.1387 49.0244 cv
39.0127 49.0225 38.8311 48.999 38.7305 49.0498 cv
38.3789 49.0479 38.0444 49.0166 37.6807 49.0166 cv
37.5083 49.0137 37.29 48.9971 37.1558 49.0703 cv
36.6436 49.0674 36.1191 49.0254 35.6079 49.0322 cv
35.4272 49.0322 35.1758 48.9883 35.0249 49.0586 cv
34.8682 49.0576 34.7139 49.0557 34.5889 48.9971 cv
34.5889 48.876 34.6553 48.7734 34.6968 48.6738 cv
cp
f
50.064 40.916 mo
50.0444 40.916 50.0269 40.916 50.0078 40.916 cv
49.9141 40.6846 49.9487 40.4619 49.9502 40.1865 cv
49.9531 39.8374 49.876 39.4858 50.0444 39.1934 cv
50.1367 39.2129 50.208 39.2393 50.2476 39.3257 cv
50.334 39.5239 50.3213 40.9185 50.064 40.916 cv
cp
49.6187 37.3262 mo
49.6187 37.3354 49.6187 37.3462 49.6182 37.354 cv
49.3911 37.3091 49.3516 37.1318 49.4761 36.9463 cv
49.5962 37.0039 49.7319 37.3262 49.6187 37.3262 cv
cp
49.5435 41.5879 mo
49.5313 41.6167 49.3599 41.8599 49.3604 41.6987 cv
49.3208 41.6123 49.3311 41.4795 49.3306 41.377 cv
49.3223 41.1108 49.3271 40.8091 49.3208 40.5322 cv
49.3193 40.1646 49.3164 39.7925 49.3145 39.4248 cv
49.3164 39.1265 49.2886 38.814 49.4063 38.5781 cv
49.4946 38.6216 49.562 38.6953 49.5884 38.7886 cv
49.6743 39.1113 49.606 39.479 49.604 39.835 cv
49.6025 40.3169 49.7261 41.165 49.5435 41.5879 cv
cp
50.5796 37.0957 mo
50.5767 36.8218 50.5254 36.543 50.5039 36.2788 cv
50.4966 36.1338 50.4888 35.9873 50.4805 35.8398 cv
50.4746 35.7847 50.4966 35.5215 50.4463 35.5195 cv
50.4463 35.5112 50.4463 35.502 50.4463 35.4917 cv
50.416 35.4917 50.3867 35.4917 50.3574 35.4917 cv
50.2979 36.0645 50.3291 36.6938 50.3149 37.2998 cv
50.3105 37.5352 50.207 37.709 50.1885 37.9131 cv
50.1899 38.0293 50.1914 38.147 50.1958 38.2622 cv
50.1846 38.3682 50.1758 38.4766 50.166 38.5835 cv
50.0249 38.603 49.9248 38.5664 49.894 38.4292 cv
49.8486 38.2334 49.9458 38.0684 49.9404 37.8828 cv
49.9248 37.7549 49.9141 37.6284 49.8984 37.5005 cv
49.8916 36.8101 49.9546 36.0781 49.9487 35.4019 cv
49.9351 35.2842 49.9248 35.168 49.9126 35.0537 cv
49.8955 34.9941 49.8799 34.9365 49.8672 34.8765 cv
49.8359 34.8765 49.8076 34.8765 49.7764 34.875 cv
49.7764 34.8857 49.7764 34.896 49.7764 34.9053 cv
49.7666 34.9053 49.7578 34.9053 49.7471 34.9053 cv
49.7305 35.3994 49.6743 35.8442 49.6489 36.333 cv
49.6294 36.4204 49.6123 36.5083 49.5933 36.5957 cv
49.564 36.5957 49.5356 36.5957 49.5054 36.5957 cv
49.3516 36.2119 49.3994 35.707 49.395 35.2534 cv
49.3921 35.0088 49.418 34.7578 49.3433 34.5527 cv
49.2539 34.7104 49.2598 34.874 49.2441 35.0757 cv
49.2256 35.3086 49.21 35.5884 49.2227 35.835 cv
49.2363 36.0942 49.2847 36.3823 49.2646 36.6533 cv
49.1191 38.3257 49.1963 39.9653 49.1865 41.6685 cv
49.1768 42.0088 49.1685 42.3486 49.1626 42.6885 cv
49.1392 42.9775 49.0923 43.291 49.0894 43.5957 cv
49.0874 44.0146 49.1167 44.4629 49.1079 44.9082 cv
49.1006 45.3232 49.0532 45.7881 49.0786 46.2188 cv
49.0825 46.2773 49.0923 46.4258 49.1597 46.4258 cv
49.1597 46.4336 49.1597 46.4434 49.1597 46.4531 cv
49.1685 46.4531 49.1782 46.4531 49.188 46.4531 cv
49.188 46.4434 49.188 46.4336 49.188 46.4258 cv
49.1973 46.4258 49.21 46.4258 49.2173 46.4258 cv
49.2959 46.1787 49.2705 45.8896 49.2813 45.6074 cv
49.2983 45.1484 49.356 44.6846 49.3433 44.207 cv
49.3359 43.9102 49.2734 43.5371 49.3755 43.2529 cv
49.3926 43.2051 49.4287 43.1895 49.4839 43.2051 cv
49.5972 43.2363 49.6226 43.4072 49.6377 43.5098 cv
49.6953 43.8652 49.6294 44.2158 49.6099 44.5898 cv
49.6069 44.8818 49.6055 45.1729 49.6025 45.4648 cv
49.6011 45.7842 49.5806 46.125 49.6152 46.4277 cv
49.6323 46.5967 49.5962 46.7588 49.6445 46.916 cv
49.6729 47.0068 49.6924 47.2168 49.8252 47.2168 cv
49.8564 46.7344 49.875 46.1904 49.8774 45.6982 cv
49.8672 45.4658 49.8535 45.2314 49.8423 44.998 cv
49.8647 44.7666 49.8857 44.5322 49.9082 44.2998 cv
49.9321 44.1436 49.9556 43.9873 49.98 43.832 cv
49.981 43.6152 49.9141 43.4063 49.8877 43.2178 cv
49.8438 42.9043 49.8521 42.5674 49.8535 42.2266 cv
49.855 42.0479 49.8555 41.8657 49.9038 41.7065 cv
49.9194 41.6538 50.0034 41.6064 50.0034 41.5581 cv
50.0132 41.5581 50.0234 41.5581 50.0317 41.5581 cv
50.1353 41.6479 50.1987 41.7402 50.2207 41.8818 cv
50.2715 42.2378 50.2461 42.6816 50.2222 43.0449 cv
50.2124 43.1738 50.1704 43.2822 50.1729 43.4248 cv
50.1758 43.7461 50.2588 44.085 50.2671 44.417 cv
50.2598 44.5518 50.2534 44.6875 50.2471 44.8252 cv
50.2437 45.416 50.2402 45.9463 50.2378 46.5469 cv
50.2349 46.9746 50.2744 47.4316 50.3174 47.835 cv
50.3086 47.9111 50.2979 47.9873 50.2871 48.0654 cv
50.3262 48.0654 50.3652 48.0654 50.4043 48.0654 cv
50.521 47.8135 50.4868 47.5 50.4985 47.1885 cv
50.5098 46.8604 50.5591 46.4814 50.5195 46.1426 cv
50.4897 45.918 50.4575 45.6943 50.4238 45.4668 cv
50.4287 45.2314 50.5024 45.0176 50.5098 44.7686 cv
50.5181 44.4023 50.4551 44.0752 50.4575 43.7178 cv
50.479 43.3408 50.5015 42.9609 50.522 42.5801 cv
50.522 42.2896 50.5249 41.998 50.5225 41.7065 cv
50.5093 41.5894 50.4932 41.4736 50.4775 41.3564 cv
50.4746 41.1709 50.5264 41.021 50.5322 40.832 cv
50.5249 40.5288 50.5166 40.2295 50.5093 39.9263 cv
50.5098 39.4639 50.5415 39.0054 50.5444 38.5259 cv
50.5483 38.0327 50.584 37.5693 50.5796 37.0957 cv
cp
f
47.4595 36.5483 mo
47.3486 36.6255 47.1821 36.6582 47.0542 36.6958 cv
46.7236 36.7949 46.395 36.8965 46.0645 36.998 cv
45.6123 37.1387 45.1479 37.3091 44.7246 37.5176 cv
44.4277 37.6904 44.1304 37.8633 43.8296 38.0376 cv
43.7808 38.0615 43.3706 38.2773 43.3721 38.1641 cv
43.3599 38.1641 43.3525 38.1641 43.3413 38.1641 cv
43.3804 37.8574 43.7349 37.6479 43.9751 37.5073 cv
44.0908 37.4253 44.2085 37.3423 44.3237 37.2573 cv
44.6201 37.0684 44.939 36.8848 45.2534 36.7388 cv
45.5854 36.583 45.9385 36.499 46.2881 36.3813 cv
46.4087 36.3262 46.5273 36.2744 46.6445 36.2222 cv
46.8022 36.167 46.9595 36.1104 47.1172 36.0576 cv
47.2383 36.0576 47.3794 36.0474 47.4878 36.083 cv
47.7148 36.1636 47.6035 36.4424 47.4595 36.5483 cv
cp
47.4121 43.6826 mo
47.1748 43.8252 46.8584 43.8232 46.5796 43.8848 cv
46.3267 43.9365 46.0762 44.0146 45.8179 44.0732 cv
44.9502 44.2734 44.23 44.6221 43.4883 45.0664 cv
43.396 45.1191 43.1523 45.3525 43.0605 45.1816 cv
42.9932 45.0635 43.1733 44.9404 43.2456 44.876 cv
43.5361 44.623 43.833 44.4541 44.147 44.2578 cv
44.4951 44.04 44.8423 43.8467 45.2256 43.6982 cv
45.3481 43.6309 45.4702 43.5664 45.5938 43.499 cv
46.0708 43.3105 46.564 43.1934 47.0493 43.0283 cv
47.1851 43.0283 47.3281 43.0313 47.4409 43.0869 cv
47.6758 43.2109 47.6138 43.5605 47.4121 43.6826 cv
cp
43.3398 41.3022 mo
44.041 40.6499 44.9517 40.3286 45.8081 39.9805 cv
46.0801 39.8687 46.397 39.6714 46.7178 39.6729 cv
46.8257 39.5884 47.0698 39.4697 47.2139 39.4712 cv
47.2139 39.4595 47.2139 39.4526 47.2139 39.4409 cv
47.3828 39.4697 47.5112 39.5415 47.5161 39.7339 cv
47.521 39.8999 47.438 40.0347 47.311 40.1196 cv
47.0557 40.2891 46.749 40.3179 46.4556 40.4185 cv
46.126 40.5288 45.7827 40.6533 45.4497 40.7549 cv
45.2222 40.8237 44.9941 40.8726 44.7778 40.96 cv
44.3843 41.1191 43.9917 41.3228 43.6284 41.542 cv
43.499 41.6201 43.3647 41.7422 43.2012 41.748 cv
43.1616 41.7495 43.1182 41.7461 43.0918 41.7183 cv
42.9517 41.5776 43.2573 41.375 43.3398 41.3022 cv
cp
48.751 40.2075 mo
48.7354 40.0347 48.7197 39.8594 48.7017 39.6831 cv
48.6943 38.9512 48.7363 38.1997 48.7402 37.4971 cv
48.7334 37.272 48.7256 37.0488 48.7178 36.8228 cv
48.7109 36.2661 48.7212 35.7256 48.6904 35.1899 cv
48.6592 35.0229 48.6309 34.8579 48.5991 34.6895 cv
48.5693 34.4985 48.6079 34.2808 48.6201 34.0825 cv
48.6211 34.0156 48.6396 33.8198 48.5571 33.8184 cv
48.4165 33.7515 48.2549 33.7827 48.0923 33.7749 cv
47.9023 33.7632 47.7158 33.7261 47.5083 33.7251 cv
47.2891 33.8022 47.0181 33.7769 46.7837 33.8218 cv
45.7031 34.0234 44.6938 34.1802 43.7593 34.6768 cv
43.5303 34.7993 43.2837 34.9307 43.1084 35.1401 cv
42.9756 35.3003 42.9717 35.5 42.9404 35.7109 cv
42.8643 36.2075 42.8662 36.7388 42.8481 37.2871 cv
42.8286 37.5605 42.8096 37.8325 42.79 38.1055 cv
42.7847 38.5005 42.7837 38.9004 42.7788 39.2993 cv
42.7607 39.4551 42.7446 39.6104 42.7261 39.7646 cv
42.6895 40.1348 42.6992 40.5439 42.686 40.9048 cv
42.6665 41.4624 42.6987 42.0317 42.7104 42.5674 cv
42.7231 43.0801 42.6895 43.6348 42.6958 44.1709 cv
42.7085 44.3164 42.7212 44.4609 42.7329 44.6094 cv
42.7212 44.6963 42.7114 44.7852 42.6992 44.8711 cv
42.6978 45.1182 42.7466 45.3613 42.7446 45.6299 cv
42.7407 46.3477 42.7222 47.2715 43.0078 47.8418 cv
43.0229 47.8701 43.1128 47.999 43.1128 47.9365 cv
43.4351 47.8105 43.7222 47.5605 44.0239 47.3965 cv
44.2925 47.25 44.584 47.1621 44.8535 47.0195 cv
45.1787 46.8457 45.3481 46.7227 45.7734 46.7275 cv
45.894 46.6494 46.2529 46.582 46.4165 46.585 cv
46.4858 46.5742 46.5527 46.5664 46.6187 46.5576 cv
46.6787 46.5469 46.7373 46.54 46.7939 46.5273 cv
47.1045 46.375 47.8252 46.5156 48.1377 46.5938 cv
48.291 46.6328 48.4478 46.6729 48.6045 46.7119 cv
48.6787 46.2617 48.605 45.75 48.5947 45.3115 cv
48.6104 45.0605 48.627 44.8076 48.6436 44.5557 cv
48.6465 44.2373 48.623 43.917 48.6284 43.6201 cv
48.644 43.4629 48.6621 43.3076 48.6777 43.1533 cv
48.6958 42.7852 48.6748 42.4326 48.6943 42.0742 cv
48.7051 41.8657 48.7383 41.6431 48.7432 41.4326 cv
48.751 41.0293 48.7632 40.6235 48.751 40.2075 cv
cp
f
41.7993 38.3325 mo
41.7661 38.396 41.6606 38.3994 41.5972 38.3877 cv
41.4238 38.3511 41.2935 38.1919 41.1465 38.1055 cv
40.9775 38.0088 40.8071 37.9141 40.6372 37.8184 cv
39.7314 37.3599 38.7085 37.0938 37.7197 36.8193 cv
37.4346 36.7397 37.0645 36.7583 36.8193 36.605 cv
36.6182 36.478 36.6143 36.2075 36.7896 36.0576 cv
37.2148 36.0601 37.5576 36.1958 37.9307 36.3076 cv
38.0444 36.3296 38.1577 36.3525 38.2686 36.3755 cv
38.5142 36.4424 38.7495 36.5439 38.9819 36.6372 cv
39.1895 36.7085 39.3945 36.7822 39.604 36.854 cv
39.7021 36.9082 39.8022 36.9634 39.8999 37.0151 cv
40.1851 37.1479 40.4688 37.2827 40.7524 37.416 cv
40.9287 37.499 41.9072 38.1079 41.7993 38.3325 cv
cp
41.686 41.9766 mo
41.665 41.9844 41.6455 41.9927 41.6255 41.998 cv
41.6133 41.9995 41.6045 42.0039 41.5938 42.0054 cv
41.3901 42.0352 40.5674 41.3608 40.3179 41.2446 cv
40.0259 41.105 39.7236 40.9946 39.4204 40.877 cv
39.0142 40.7202 38.6187 40.5405 38.1621 40.4795 cv
37.9878 40.4575 37.8154 40.4355 37.6387 40.4111 cv
37.4009 40.3984 37.0293 40.4526 36.8525 40.3125 cv
36.6357 40.1372 36.7769 39.6738 37.0625 39.6748 cv
37.0625 39.667 37.0625 39.6577 37.0625 39.6475 cv
38.3511 39.7383 39.4653 40.3271 40.5117 40.916 cv
40.7939 41.0752 41.5234 41.5151 41.6719 41.8105 cv
41.689 41.8438 41.7432 41.9775 41.686 41.9766 cv
cp
40.9883 45.1709 mo
40.4893 44.9355 39.9561 44.7471 39.4204 44.5781 cv
39.2344 44.5205 39.0405 44.4971 38.8447 44.457 cv
38.561 44.3984 38.2646 44.3164 37.9658 44.2705 cv
37.6353 44.2188 37.2969 44.2051 36.9775 44.1357 cv
36.9419 44.1211 36.9058 44.1064 36.8696 44.0938 cv
36.606 43.9482 36.6021 43.4365 36.9819 43.4395 cv
36.9819 43.4307 36.9819 43.4199 36.9819 43.4092 cv
37.2197 43.4102 37.3936 43.4707 37.5972 43.5146 cv
37.8086 43.5605 38.0249 43.5801 38.2319 43.6309 cv
38.4087 43.6973 38.585 43.7617 38.7593 43.8232 cv
39.2803 43.9912 39.7544 44.1641 40.2422 44.3945 cv
40.3574 44.4365 40.4717 44.4805 40.5884 44.5195 cv
40.8662 44.6426 41.2681 44.9395 41.4688 45.1787 cv
41.5454 45.2637 41.6675 45.3174 41.6675 45.4473 cv
41.4238 45.4785 41.1855 45.2637 40.9883 45.1709 cv
cp
42.0474 36.3179 mo
42.0068 35.8882 42.064 35.4341 41.8208 35.1079 cv
41.3647 34.4917 40.7422 34.2681 40.0752 34.0166 cv
39.8965 33.9565 39.7217 33.8936 39.5425 33.8325 cv
39.3408 33.7944 39.1401 33.7573 38.937 33.7192 cv
38.6274 33.6411 38.2715 33.5767 37.9404 33.5605 cv
37.4731 33.5557 37.0083 33.5522 36.5415 33.5479 cv
36.4028 33.6099 36.1743 33.5894 36.084 33.7251 cv
35.9937 33.8623 36.041 34.3926 36.041 34.5952 cv
36.0366 35.3848 36.0015 36.1729 35.9966 36.9863 cv
35.9937 37.4634 35.9902 37.9404 35.9863 38.4155 cv
35.9585 38.814 35.9321 39.2129 35.9053 39.6128 cv
35.894 39.8975 36.0093 40.1567 36.0015 40.4575 cv
35.9893 41.043 35.9771 41.687 35.9653 42.2954 cv
35.9438 42.5488 35.9263 42.8027 35.9048 43.0527 cv
35.8965 43.5723 35.9341 44.0576 35.9233 44.5703 cv
35.9048 44.8242 35.8843 45.0762 35.8647 45.3271 cv
35.8628 45.5732 35.9385 45.7754 35.936 45.999 cv
35.9351 46.2617 35.8862 46.5117 35.8843 46.7861 cv
35.9902 46.7881 36.0972 46.79 36.2051 46.79 cv
36.2852 46.751 36.397 46.7314 36.4956 46.7314 cv
36.5781 46.6924 36.6904 46.6768 36.7881 46.6768 cv
36.8579 46.6641 36.9253 46.6572 36.9917 46.6494 cv
37.2695 46.5264 38.0249 46.6826 38.3076 46.7275 cv
38.6665 46.79 39.0015 46.7764 39.3516 46.8506 cv
39.7637 46.9365 40.3877 47.1748 40.7437 47.3848 cv
40.8701 47.459 41.5879 48.0146 41.6523 48.0146 cv
41.6523 48.0068 41.6523 47.9961 41.6523 47.9873 cv
41.8389 47.6787 41.8203 47.3789 41.8735 46.9971 cv
41.9326 46.5664 41.9414 46.1289 41.96 45.6553 cv
41.9824 44.9854 42.0225 44.2959 42.0264 43.6123 cv
42.0205 43.3213 42.0151 43.0283 42.0068 42.7383 cv
42.0381 41.8979 42.0303 41.082 42.0479 40.2583 cv
42.0742 38.9707 42.1606 37.6006 42.0474 36.3179 cv
cp
f
40.2271 10.6631 mo
39.7837 10.7163 39.3403 10.7705 38.897 10.8232 cv
38.5146 10.8833 38.1377 10.9512 37.7217 10.9653 cv
36.8159 11.1401 35.9102 11.313 35.0039 11.4873 cv
33.7295 11.7466 32.5225 12.2837 31.3545 12.7661 cv
29.166 13.6685 27.1035 14.7173 25.1167 16.0278 cv
24.646 16.3364 21.3628 18.6377 21.3633 18.9961 cv
21.8975 19.0376 22.4351 19.0815 22.9702 19.123 cv
24.2588 19.1992 25.6045 19.1494 26.8853 19.1494 cv
27.6768 19.1885 28.4702 19.23 29.2612 19.2681 cv
29.5732 19.123 30.0708 19.1992 30.4502 19.1978 cv
31.5322 19.1968 32.5615 19.2661 33.5947 19.2646 cv
34.127 19.041 34.9858 19.2373 35.5518 19.2578 cv
37.2988 19.2578 39.0459 19.2588 40.7935 19.2588 cv
42.751 19.3027 44.7075 19.3477 46.6636 19.3901 cv
50.2759 19.3433 53.8882 19.2925 57.498 19.2441 cv
57.7666 19.147 58.1675 19.2417 58.478 19.2417 cv
59.105 19.2588 59.7358 19.2773 60.3618 19.2949 cv
60.6875 19.2783 61.0142 19.2622 61.3408 19.2451 cv
61.9561 19.2622 62.6362 19.3247 63.2969 19.3052 cv
63.4399 19.2983 63.8521 19.3271 63.9995 19.3271 cv
64.4424 19.3271 63.645 18.6943 63.5068 18.54 cv
63.0513 18.0259 62.5454 17.6719 62.0063 17.3135 cv
61.6836 17.0591 61.3628 16.8032 61.0391 16.5483 cv
60.3804 16.1069 59.7192 15.6694 59.0596 15.228 cv
54.9312 12.7339 50.9463 11.2622 45.8149 10.7554 cv
45.0698 10.7417 44.3267 10.7266 43.582 10.7104 cv
42.4985 10.6934 41.3281 10.6621 40.2271 10.6631 cv
cp
0 1 .62 0 cmyk
f
19.6245 20.6084 mo
19.1753 21.0659 18.5107 21.731 18.061 22.1885 cv
17.1294 23.4424 16.1992 24.6958 15.2681 25.9512 cv
13.3096 29.2524 12.1143 32.688 11.2705 36.5391 cv
11.1328 37.1533 11.1357 37.7642 11.0752 38.4165 cv
10.7744 41.5903 10.687 45.1582 11.1943 48.2871 cv
11.3325 48.8057 11.4712 49.3232 11.6089 49.8359 cv
11.7642 50.6904 11.8916 51.4795 12.1597 52.2734 cv
12.4282 52.9326 12.6973 53.5879 12.9653 54.2451 cv
13.2866 55.2109 13.7764 56.0791 14.2363 56.9717 cv
15.3247 59.0928 16.5879 61.1084 18.1226 63.0264 cv
18.3467 63.3027 18.9077 64.0811 19.3052 64.0811 cv
19.3057 64.0566 19.3057 64.0361 19.3057 64.0107 cv
19.6138 63.4248 19.3994 61.6514 19.377 60.9336 cv
19.3726 59.7236 19.3696 58.5137 19.3672 57.2998 cv
19.3657 56.2188 19.3237 55.0762 19.377 53.9463 cv
19.4873 51.5381 19.3926 49.043 19.4287 46.6055 cv
19.4585 44.5449 19.5645 42.4233 19.5625 40.3159 cv
19.561 38.3359 19.4443 36.1626 19.6138 34.2437 cv
19.5977 34.0303 19.582 33.8174 19.5649 33.6016 cv
19.562 32.999 19.5615 32.3931 19.5591 31.7881 cv
19.5928 30.9526 19.627 30.1167 19.6611 29.2793 cv
19.6055 27.479 19.6167 25.6489 19.5586 23.8188 cv
19.5146 22.5342 19.6738 21.2974 19.6245 20.6084 cv
cp
f
65.7227 20.8042 mo
65.624 22.0361 65.8286 23.9482 65.811 25.2446 cv
65.7671 28.0381 65.7568 30.814 65.7583 33.7056 cv
65.7632 38.4248 65.7642 42.708 65.7681 47.2666 cv
65.7705 49.8164 65.6411 52.3584 65.7671 54.9512 cv
65.7578 56.001 65.7515 57.0508 65.7407 58.0986 cv
65.7432 60.0264 65.9624 62.041 65.5586 63.8955 cv
65.5313 64.0049 65.2827 64.834 65.48 64.834 cv
66.1401 64.834 69.1709 60.459 69.5952 59.7598 cv
69.9009 59.2012 70.2061 58.6455 70.5117 58.0879 cv
70.6787 57.709 70.8477 57.3311 71.0151 56.9482 cv
71.6035 55.9053 72.2783 54.6357 72.6729 53.4873 cv
73.4985 51.0605 73.998 48.5674 74.3462 45.8936 cv
74.4604 45.0176 74.4263 44.1689 74.4414 43.2432 cv
74.4624 42.7529 74.4839 42.2646 74.5054 41.7759 cv
74.4614 39.1587 74.1548 36.3896 73.481 34.063 cv
72.8125 31.7627 71.7705 29.5259 70.625 27.4536 cv
70.2246 26.729 69.7275 26.0664 69.2808 25.3608 cv
68.6831 24.4204 66.1177 20.5093 65.7227 20.8042 cv
cp
f
61.519 68.165 mo
59.7271 69.5117 56.0034 69.6533 53.6333 69.9434 cv
53.0264 70.0215 52.4189 70.0986 51.8091 70.1738 cv
48.8535 70.3154 44.96 70.5908 43.897 73.627 cv
43.7871 73.9551 43.7983 74.0234 43.687 74.3506 cv
43.6387 74.6396 45.0054 74.3662 45.6343 74.3643 cv
45.8149 74.2734 46.1094 74.2969 46.334 74.2959 cv
46.4731 74.2705 46.6133 74.248 46.7529 74.2256 cv
47.1021 74.0313 47.6421 74.0146 48.0806 74.0127 cv
48.3726 73.8652 48.7695 73.873 49.1299 73.873 cv
49.5137 73.6631 50.4517 73.5215 50.9448 73.5215 cv
51.7803 73.2354 52.6167 72.9473 53.4507 72.6582 cv
55.8188 71.6973 58.335 70.7314 60.3594 69.1094 cv
60.6587 68.8701 61.0361 68.793 61.519 68.165 cv
cp
f
24.6914 68.7598 mo
25.2163 69.3916 25.9624 69.5371 26.6157 69.9824 cv
26.9888 70.2559 27.5342 70.542 27.9038 70.8145 cv
29.3354 71.5 30.4175 72.0625 31.8799 72.5469 cv
33.4888 73.0811 35.063 73.5898 36.7939 73.9053 cv
37.3789 74.0127 41.3672 74.7373 41.5161 74.3643 cv
41.7559 73.7598 40.4556 72.2783 40.0034 71.8965 cv
39.582 71.5391 39.0703 71.3115 38.6074 71.0576 cv
38.1606 70.8125 37.6357 70.6709 37.1431 70.5361 cv
36.4927 70.3564 35.8628 70.1494 35.1694 70.0332 cv
34.5063 69.9209 33.8506 69.916 33.1504 69.8496 cv
32.5415 69.7529 31.9355 69.6533 31.3252 69.5547 cv
30.5371 69.4473 29.7476 69.457 28.96 69.3584 cv
27.5137 69.1797 26.1636 68.8477 24.6914 68.7598 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 14.0.0%%For: (Susan Halcro) ()%%Title: (2Col1Line_CMYK_CS3.eps)%%CreationDate: 02/12/2009 09:44%%Canvassize: 16383%AI9_DataStream%Gb",Kk@3_fZLISi]E9T.Uk'Hhd]$rV6@(NI,cgtmPdU6H5OPk-,Ina0)-@2UF8&s#M(M@VUZp2tThnqX264.I>?^lI4\0X!OJ@GU%S.F%A4:hkef.P"%[7Q$`@aH[Ca5_/Q)iJYlC<oB_nJHY;Pq'J%f^,3;V2EpiA>Hfdm]6XLItVG'=EoHW6L\$Wf;3tKl+0^e#_Z(\%Z0-M:0'9!R6g+`<&IL[rRHJ[q<j/+e)J-1e*b>(+HH\S5*\TV%(%dB4QQI;+/+m4K4G,i:l9PMYGL29C1]G'9G.W8,!($dHRH*$H%,CJfC.S'fD#g^:>iNq$*l1?5;Um&pYjUsCWO^BHn,o)8VH4)(9">a+_)u78<rIt#IlZClJ[jEsSQXoSX@\Zp>\g"!qa3]rN0Yp1e%$&UY@V6gGIaRkK_OrTeoY0ffn_XYGF7DXTn$flj3SD79q\bNc`rj*)VY1/nGWUh_Ul`=-LWLR^IMm`Qch%DDkM*r!=/P\__A_>Z,%7B\>P0:TAP9W-B+;XWIFWf$KB+J\UmY7$/P'`O0EJ'&3m6MjLD!p`DM*hpJ3!aC*WZWRk=Li%Qje!AW;8QQaHRZ0a<QAl'93"q-i%4<J)7_?>B\0m&N9nK8f6j-.WQ1k)6NO1IXuW?WN$5(gsAD:dWZc#j3(q"%h(<n/'3c3+gO%u`h#@JH0gs2hJHg>/pa<+#q@boH'J%^s!c7@DlEWRZSM%5(EZ$C#F[ln60+DPM^)hj#?IQY9cPss*d.oTJ]CaoGKX)D\CB/ocCd"CJ2@l61\(`KMtmM/-\aa1sKsTe+,/s%dTm37Pm@/(`EoYs7YFr\agE?YX"=P;Qgca/;uL(lYI!4=#d40;r&!%'/_6baTj-o@d&[GTKm(YOCCoX*cjo'u>0hoVDg3K,NV'sX%B*=b4h02[Y@^Fe9qNV":pEr2sm]T_Y9[O?IgV(mZYTue_X]tBIX`rk]IYuj?`u&IaKB?lH-;a_58d"BMTFStZ'PQkr!k]N9hD7L3%?@-GqXnQ#<D?-1#g.:cr5E,95;3pLT:.+1l_ilmMh5s]B@e!6l.lQ1/6e$@_264NK=R#%r8rXU,+G.RVTdA\^]C1%#ZD_m_HNqH&%<./Ot?9/\5_2'QL'*qr'RmKKD#&/B45Qt*Un)g6-&,oL%'Kl-mIiQ<Y^YmL(5q[C%]RQ`/<Rg^dYf;8dN.BSoJfI98&LsBJK+7I?%MFCuGMD[LKQl`S*$GHU\TO@''iN])?V?5[i5ddF1W%#t\.#s:^*k4amVA(`B1!=Qqr&C8N.k!XC\[_JiSn++A8M6ua&Ei;&0V`_$%:P*p@pWGn<eddio+&a5$8LB98`Zd5Se%TIX0h-W7cnTYo3_:hr.BQAR!h$i>+S6WW=if/Da=@hUItI"U-k&:>1(i^FV-p[_D'OrS%:8_#*n7aMN/p<tTJud7;"9)^O!2G4)7%C,6KfCata0<]r.NVQ\,rOCQ/?M$.EXD+VV:#Ph-c*og+#=4k$o%i*nQ;;]+!tI^_aL$G%4%O$*W,2Qe"HZT3aO82'/I!Gq%Nb`/:a&1]`iH2YCG5k_1o2CZTG%[Na`q&Z)89!1co<BW+KJ3M*%-pd3fUD'qN,-<[K)6t3Q-hq%Pq/'Pe,qL)>XC`:M^K6%Ql*^i^a0Ya3d"#R8Wpn^5^c2&%hhN<S)a]bo?_+3@44kd(*lq>8k0YY;]`rB8QXoW8X`]CJVgGsZO%?q%?:2k%J?L(JKd/tWQt6o1$isGMjG-u6i>a-.SAJbj(8t//"Z)QGqW5MX=+r>r?klD!AA8,T(_sq4Q[h=/VFX.9k@Mq15_PJ'B9$V8%XUte4TKPthZBdj4)4OI"Ne]l%7P4][Od3I.*arc.QD%B?P<2<cEg6A34lfV.RXhiZdQrIdA-dX\=VV!<d3g+0QGJ0UBT7;#n6%lV%5QIFM[Lc?V@m#Jg)2Z>s"F^VB/B=b$Bi&R["TfNlOWVKBd0^5;\D/SC9@K>Ca5pHZDcfbIIlaG>&Um<M(+;JLcmBK]_]Ttuil*X2%dK(#4+11s57nQm48B#,RK=5b;.R8oK.1Hr,/?+'$!W_+*'FVn\Mf:EH@>moqFpUl,IL,sq];G<1KMO!I)P\\a>F&n86!HMk*KO*S%]JQf_)@Fe0b2X<O4'@#q(^tYT:cnbTb_YY(EDsZ;M^qLN7TMnk@Z)(A&iD-FY?=<D@Q^F4!Lb?L?4lK_6cYJ\TjsqJ6pg$4GR+t:%GmTE08*_0LEOB/XL2'p^Te6C)TlkmU"W7A<[7U[[0;uD/Dj"/+9es#n"s43):jGSX@nEM.JlBC=#+V\\!*2R'$J_d\/#JK+O4khK%8^JT;-3MmK/ucCD^rQj('[(!PKSN,WVG^<cQkOA;n_uEoUi:sRndpIZI2J<1(Hgan9n>d.3UQ^>3da%Z.Gn']VD(!<n;rJSZjpP+%=A2Q1PbF@4Zu!>Md3#&+:P-oY</_6a!6%Q]_D<l[SAeFNJ67HBWluUO&12#Q+O78"ET&WSG*R+d.]KdL,3N)PDB*0,+HfV@'k1n_%]Vb<u=0fRA%lp4]=[0nOQ&"9"-t)QOQI\(s"/L%Sb=[isFVIm\P)h%g`PLW8!mMs,-%?HBYBXQU/]T>Xq%uK"A'&UC4H(en&L)u/%I6>NLKV;q_LEEO>)S<#l6_73+"O/?D'KcSNe]:Ic!$jBU"$<7YTVr0NP>qlfCWqDcAQ3JU4K$C(X#O1:"S&938R+po+NC^%ds+1_%QB*C-#%on9/UIJ\i+f7V9@fA%68M#[('I1N6O#B<b(^5A'#A'1U$=j]3g30?S_Qe;kl>GUUe7_5SC9M!]rNW+E"eHGoEdH=FF\o$%<@9=`;(<M2WC5OYL5oM(`DqqV`u1.s]\:lNL-2U7J363J)?>`90f[!$5?%_>j;Q0U!_<l4H.=W;A<T)G!i'd*b90#C0Y20O]+aZf%aX5PEOVPcM^etaMYnbTQ:Wh&$_h:c$>4.ZP_/Z+^#XA\H<X^$*]K1s%\@5(72QdP0,2Yb:a<bulR#Pl%E,enEEPKX`:/sD-RW7G_%@bMOZ=RSKo/4$7fJalV[E_0Sc(fM.k9<36#"n)bB>;>tofkZ+n1!SuNE.NkeZ7$cQWEsdBm=5@f3%M?a<M8mp:T;[')Qq_9bMRAq%X8p;fEa'"nOJM17,L(P2[,kDTl!kDJ;qgfLM?+f_'aKZV9T$4q/>h)^Cp2oT/>jC@<XDn@=EIeF&M_OK@8UKe<r>:gB/'QG&1\Ks%\/b;eE`&>^'UMX=T2Ss`?6(/-JCYJh>8kEgZq\u-$j"p]`jY*)dIVpF,,TJ_*l"-`iap5%]daOi4IpSJ^gY6!kLRKT/j.V'?ag&K%<j^sk#Q@K<<,&.B7R^"[@$IBs0FcPt5)I:t1X7]eL16F@SRpn"NC/hr8jeW&'4`hb77AH<TLh$/MBsD#Q)=ZXKU*'2:M]J(+@F8N%LZ^L4+0CHPNQ3'X;-R0Fck3(Fd5*J-ES3cj!#O<[9)sL,*;+hs9E6$jmh=Vu,d9M#!0sUpNi9!<YN.OV:Vm)31(Y3<':kMF.'Sk)%8%K$jclHA^#LWIrRYQcp@JOD6Zg0;+&4d[%aij*:Z9tpQS:Fr]UC,9gT2[m;$ap?fEfMT1-BORhL4Z)PnH:*S/_L+>K3$2a*!`o/%b/^fVTo((niqO[SQ=U0D-PWpI$:kZU+a:^H=u38X=S6l_E&-obkb3kLRQuf^HAHX#(kWZM0utBN).<e?0a'6#Lp:H?g-UTHo+cm;%KN:-1"cbqm`mh8X\=!M!b5d>8"7-\rLN+X.71Ti.!kAS."^>/M)3Mksr$Wlm'2s#sLP/'@W)*JQ&#cD%ns!/`-&dpn=ns59,c$R7%_o\ni/3-D:!WXOI5hqZ'quZ)Ia5Is)+A$:i=9Fgu@nLbJ!R#H)?lY=]`Qfo]?kR#TBr0FkP.O3*$e=Q$=PAEDS,ug7"J^!BJlV@#%H!Wc[L(\O,]98,Rl&utZY6qkB&r$ISYqadkjCpX8:!!7*3D<"F8`5,?`@5Y,Q;UhN=(4=;8B5:#%#0r*.bPE/28GT4''A[e:(d<*%0h..N\:g$4!]JD8+,3iQ*Lrit);nXeKbiYgoqC5X4N=Es,I2#T,qB$:`@K=P0XHXS9ND?+OtTiZGCik\!JAU/9E?[Sk"f^7:m=Ed%-(mQhS6(#r`Dqs,*n.cj>uU\Be,c\KFgRNreXS]80I9`.<S%h&S_sqG3ia+e"=*L=4Cj^J0eRh@Q%2M3RpI*XE.HLT03]>;,sWsf%;9eVe+P=?0&7ouN"-GT=JUdgpY2pkX>Q?nK))Z?37Y#JQ7+"@2"c?2`G6lLeS/XA(1'AT9.<n^s65\cmo1IkiA!/;KPif/7ON_DZ%W,=d0ED0X)5[@uPLBp84#--hqekNEABS2;-p#EH-/>?/hR8b1e/W?U7Pqu`Nidupshl(^X;c8/pM5k/_GU2<!%;6G$.[X(JmZpa;%*L%mYA\T%XGpsI\eQX`gIX.;,-1U4bmt;k]U8H]'+igV9Z=HY"E(5b0P:2?jIBU^D$DWm9Hs_WiG%B8FV!C!H%9dIWE=1qf<qB3h%-3k^@67^92o"tUNWt1>a:fXH1Eo`%;<l8g:+uO%69K=M5:36;WMUQZ,*ESYcMGpO`N>j48;EH`\:`0^Z/d'4'GU[lY%DUk-829.f%2>g6-^hXDOVKa[Tf;tEA_S$`+)/=s2EpW@*NsY&#1jsb'<>Khd`s'q%3D0Kr<A6InrQbnE2uD4FeaJS["D``0#<Y?`Vm_]i78pMZ%9q]1G4=g0H`FQ.Z\T$2eBS4Ai3)3#b9Kli(3L7d_Z0`WH$ZQgO9Cq;S1h1D")moi^"C?'p(jP-?e#XEj,F&te&4c#&YpO%$#!q]X%Q4klbJj:Pp`<<;oqfU,i[XUtM0M73l0s0j3J<@DI)"`)-5\loEPQE1??/M,;BM*_R]\:Q\lHi6JWr39f(qhp^S4HWlrFusB`to]2%n@ss/'4.dA=RB;&f+gA<<^Fm_Ju(ot]iM>F74cVU0RD+4lL3)\mN8h'AMk$r6D+T:S$`Sc<:tgIiGYFHP?\$+Dhs&`[0%QN@&V'[%O+3#Vq"G`sTIFnTri&o0n&3j,XiD?TGHpl8hBbW_D>rWVV%0(qp"$bE9TrpdWu;DL"$3C*Q_Pb`ICb1#oV<>;@TA0WAJ7k,l'kZS%N5e:\G'iUsY:_^`+t7fu:C69[Nq3]^OlFh*42!\cBWB=l*%-ITTk:KJ>3QC/7<8)ZIe)TV25Ockeua0FHl]s3DN/Bha:U7WoCY"(%6H)L#.gm@Ph\JG'+HtlXM<-6#%HN$Fm=L/-U,Qa\Z"-f]mP)8s_AI'H>15hKNFi^/rGlL#9"fC:gllr`PG@4AX)C8G$U,REW?o!,%Y1+f<8,qN%U^$;An)/WlSjN$-!5Qm<kLe1`p_qqT7XO0Ha#)Kh?]6<ag>f'XhL?a'HYj/Kk1<D)>%\cBNHr0,/<eP-DuATXiq1n\%gma%Fdr94DmS1S^5Q%e+r02`X%jkd-no6lHjR[rM"GM5;n[DUR^'ds*T>.YT2`]9ICcZP=r)4#:\_cp3Kg.O.l?'(0nTR^\lU;dB%(dIjTT3tIYFZMCRR?f4>;LE3<\Z(a]iTbX>@<+cWX`3qpbci/u0^dXgH@>1:h=Oe4Zu6TS;iKZ<$%*ch/SLJY"eXlNcat1:&F/FC%Fn/M+dX!B.6f?C,M3ZP]LHJ8%7mL"k/-c=AeV/27hj2b+S)h*PJ,&\=qF*.a2*5)P!$q4J^Doi)I5.:!qc0SN`JWSDLR:8oUtB4;%VVqK'8<+qW"-rCOEi_!EVWE<G\GYe7I?67af'F0:oYl%8,K6COLC/o[0gYfc5WOL;?W6IY2GCfWDt/FVM^7>[%#@'T%rr-KnJqse%*"eJV&b[.T+Z@jm*[hs>TuS&`O%biO&T7N3nb='H+1VAYYBBC2r]eY>$LM$k]chR@BBh]s4!uCVp7E]*/UlS6OiLr.9gk59+=G76%lM-3Wnb3$NDAa?LF5pada1/%rL_1NnA/\0<G773aNhMCWe^JA4r#bH,hm?,]5rZ&k,'8LJg:T":CHZ^$W6N(+9`%\V]uUebOsBN<%6:m-WUkG/d)S1=e-\n)0;S2U^Y#bHV6(uC2<,4]fR?<isN4C_@EJ93IAN#jsD!f:0^%G6^2s*0F?TH(b.ktL,VE8[n2>_l-=N4Y5%M7q':(OL3&GX@o:ir,_&;\]'?r9dJtLq.MOMSb^L-'+$M#0-8D@p@ch4gpetr-+t7+NmC$ARfX]M(tD4bF0V]:!L<Yc)+SrMKQ2`%-Ss-LiKkd76+kW,.$FNNI[_A#eiKqE:_=XUZ[471-HI#]"R(_f.;oin,:]Yk([V$a2Z67*2?&TjpJ[QBZ)/LflfIS;`Gr=m`0a5%%3[fX'R#b8?0e)tE#A9%.N"?6X@kT(FQqWBm7p^`D2$^=DMtF^Zg'[LVX4R=:(oi)'9G=aM=!DjYUi/LdW;e+?nSiMBK%Lgl^*HQn%s7Pe&0hu;%2]$`H9Q'h%$qH7PeSA7$EV6X3*AJbCRXAsF%<>0n)h39](9o@@n^<.V_;GtNB_gp48t;?E5[6$A&aGWkWCi2BrkUNE%%5`pDPCP:,m!3O=0M\.sP:stY/`IHJ0m_AbX]t\i"$,b$D[K'hB!!5(gX36hH4Jb7@_*FhbTa[AO4aq/Nle).5GjoY`['C+6Wh?6%m!m5k(ii:s-D<f>=>8P?A!aEghB=o8%c]6+`;\q1CkqPS`Q*EhbR_"]5@utc3@9r!>Gp4aVV>P!`>JOY[_pJlQ0g7hFT/dSY91(k%L)cCK9*e8SFr2<k2=<6jA%'::@koJShRIEX)=-sfak=r!6fe.pO)LK)8N\lWa$.<'/GunYpj8oq9Y_qO4TN31nB!o%0m2uU`M\bZ%qoa@!3CK'@U<&O0'67j8O$#4FH;;abU\W8Mr-qkE&L0NjBN'mKeS&Hqd;j)K0Qkd?$>nQ5RYVf'Wm@R=N's:4*OMe0S*I>Z5+?qJ%AmEi2p9tD/_pfSZo)GC@]W'PFLe[f^/2kGf:W6oq2J9FI`VN_Cq"*jU!cT-'Z$b_W6!o$c!u6b,n",b0^$r:XddY4$Bth%.OM&`V%-gRk#kn,A.EC:..NmIp!OV4HK(b/(si$T7mIiIl=r9jj&#l_1_gP!^hdLT1=[*TC7Uc;*[;#0Q#T^p(#eXBM.[FVFA03J?27%p+C%TfromN;Wc3j5NH)^oJ9pIP)Q]o:>`,E1)s(qU:,:\>o_h.l$'jB'r;<N4F888<&qb!CM1eo+:W;;[m'?TBl`fN&l"nU_&@2KHK89%i8Zmu!')5EgP(TBYhtR9+\'BPAKrDk=<lh112'(/qZ]FmntF+[A.E'\-HUB/rGr(U3d9A^Fl+-IQeZNVce?af=lL9SA#BK\IK5`f%-]_^sg#'o7j-XSL/gn9)2dK2H-d-TlH+KM.>u%h./ndP=Tf.9IRctIU==k[ln)+IHQ]S+<aBor'9p^s<mnXWlQ]T6Lf/6i#*aa'Z%PL`p<[Fa"Oq/%J=XpTQN1F_%.pisAFYPegR;:48Us/(jsGMQ/bgl0a9Ye3OkD11;i3Jr=)H<pB&'[M*mmC`nrf.,uH>[fOlT8i;-%b&ZR(8PS)9PA\jFgGJ0W.??^XSm,?ODS3AGZ+0lVR(*1EEpZTTpg'*K@X"S!<]?h_d!R&R[7SK[q(W-'Ph\)Ap[u$j;f^?OgfN7=%"S&LMn@r/%fCcYDccBs<q_)S?Seri[%Y+7Gq&$j@[X:lZL'+X]12,RQ,:4oGK*B5m:(YVKUpO'u-!%fb[=@*EJ!rK&UC\UCD[W';%*smr+&&2O=h_1;0dl..HNq6LN@,_V^VCt_::%L9l]ZmDFRc\J,3,bR&C#lpdP/P3$Rq^_kR^\^ID5MTJC#3Hj\!c`u9jL>(r.lp=%dj3H#:I5e]cuoJs:d;6"G^snc1rD476fYB6L.OKpKD_Bp0gA$X*0Ds?6\G:jOQdW$A%=I>r/Kj"][NZ_l^eD?Y>pJ%Z^K:K1WIsg%:=#ON2qp>UIqmbTk<SRj\D'foVIi_"kOdQ/s/taZSE51Vgc@T>aq"L02#*+kF/o!f<2G)ApD7*FF5YR/BVPP%klR(."V@=+2Qb(#%EY0M0=L7jZI(Rn#DdY>@6p,Rj&WqR`>Q]qs2NqHS4(9"_6sHbhdaJ<a[VlfY;iKsj,6/R.<e"R(0J9^&22_eT0HnolD!XKp2*)Ks%AP$o,j#c$)5F@No)W0Ldcl>K5aZm25O6qTml`\?b--,4To\Ok,5Y5hljZ)KrNThnGe"k!:L&jLnWPMAo)Ir(?-[nZcK,g"f;I]dF%he>tuI*M(9WA0F%I%&QP-8ie#WI[CBY2Ef.b;:oBkeQPm/QB;JrC!ZJmmWR--DZS]dMLqDq0O'+^)@Z73Kc*L,pgTB;W;9Y@um(l%`[M2ID]^?,(dIh:baMG7>O,<PntX3X!,>f>eU8QRqW@*f6Uur.F".P<1#Ea2HXa<J*aDp`RO"s'o+!jV,/dPrF<ttf-@GtG5P<g/%T6/;>&*<B9Q5\i4K,];gVMe[[:6.#J7;mKod9eY2e"_j#,=`RKQ)%9Vf.Qg_T\UqJO8-W<?L\WqNd9PH4dY5JMX9E%>06O3N;)`p%E]h?hmhk`Xp5\saBS,r<l,NSQj62$X155?VQ79C7s6RcW;BW&i>"Y<0GL&)jhN-T=B>ge>98QH^]cS9_q,)^lJ8Z@q9`mRn)XpH'%^Ai#b8*lmB"29U%pjVMB[%A3+&YDrU%Je!sj<L8/BuDripneY\1uauoI!uQ+paIqi+&'[:lAPVNW6Y]<',:+F92bGb/Wf;NBui6\%+lA?n5f-T^pmB\%r597%Lr5kLM&0O%&>mKm\figlnR>%aXI]Oa,BWPLr/S$^A$:#oAE@%1f?8<1o!&dk+%\&X;X=<bpQ:-pFT9k4%F50CRYM[7bkD&SJQRlLb9U[Zs&L1&4/.HZnc+#,jrCP8$>Ls?Kh_F_d'Yu_qfP*DDS'p!MU@3Po_sR3<dkOo/51,c4*C.9RVUK=q%$5KgJ&c?mLVN8GT;be<gbEJEXR[pV>FXNe9.^sm$jXC-"m\<[iNjAQOIZ;/;0OSVnCjbDC(*e;kCAMP*''M/F/A/k"C5ngGV(JhJ%QVTL$[3'Gm(/K<cPZW]*HmP6k?[S?(Q*"K.=&9YM^LPjq^jpQH5uCNYDsr#S5lZ'#:5XrtId3CpK\X<oW@@]5,PjVE?Q6&_lJ#J,%s)@8j:;/5<op<DM?^eQ!;g4'4L8(Dr-dZ5sOo(mYE1Ef>i&#"/9pr%./Yj'N6*:MX^-`Ko,N<\MNY)kHS0Nk$O-W7'kcp]kNt!+!%7(@/#`:$UJfGi'W\TbPil^eD?YCLriCo5R^Fl+.4O%Vs>[WC4\opFK/E^[q&G*8>bWU1\[?tT?(VdE@Y24[[p3Td2[Eq7T+>8kQ0%(]*GIE<>:^mf>+.N:9c,,5Qk7ZBoq\'0I^uIsTT!j;tT`4]ZcseU'Z6Y)#kaQitB'#:\b!]AKtCUaY9\aCS(_4orfUgs+LnI+n,I%EAY5fLU]P7=;AVCd25*pEVddWD:9^n``JDULcqMQ5N?8@`uO[?-&JQR`p%Sk4N=n2JAJ-qr0LE24)j447jp0SVQ07jO0P9ojVp//%0F5-^OouA`2,9#7dH&oN:S$l+(T/?hNG`(AG.uNKLD7k?b]?i6PL&bE,W(o3n`gA!rQ8Kede(fY*Q?QE<\>^iS,>5uMo:6In@ueP%HW*-*7R!UI/*\\a?!C!AY_26'95UBUGpTsh@XRs!^f#o,:PB5:X%e3G.8SQ^GbEN5aF?;oJp5M:lLekm1Sb:OpM0O*i0srFFo>5e%F[/mO\RnjR"q!MNTdS/6;Y(=.^rM\@acFp1>HMUe&NFJRIGe2G5E2sJ%tlUSC(OuZqI_6B"]OpZk+=mlTPpa=q#c*d_Cr[^d6BoL%GT=AGUk2Urnfk:RO!iTd)l)Y*K&N+gP)1K:%J6$G7sHZ&)'0U<Nt]V@_fD:F=RX2eZ//%cK6I\&W(7R#-"6l0LUhOI>#P_sL*TM_%30rY8Nsk*j%KONE#aKr./?MVH)Z#3/0d^UggZbsIaX\KS&YL=i%$;N>6jJc<-2]R(.!5UV%]gn:O%I@O1(\a9rRWp+q9X2-NJ^R-%rsZc6:8]S,?K4B;C<>5W1PkESVT)=f^^%bM_4,4bi]n(Q_N#n-(HPF_$TkXr^<d0r*CHTQ'e76?#,mt8+V,S%VjcfUd)LXpWg3h]%`L_X+'&1Y=:h#u5)g>=\'Q3-&l#2@f(i+?g-<)[fQDD+&9bTs[HbET_[Wr3j8Ti$0eLN/p61f%]IWJQY_9Z&->ui)<W_-hWQu;XZ%n%iM-.D1N)i+]e17`#%/:k"fElLil#*(MG097U2&85m?*2\J4V>8(#j!`;a_JF7aq@b*F+SFkAY!M!.D"#*a'LM6:1Trg'qmK1E,%'3tr7AFtBn-KIWi,R7S@d)L&7=nELs*r\AF6iXp@^`Tq"c#?S?COigf*PeQ4n7N'hI&"O$-F35CJ2%sAs$Ml;KCFLo_++I8JaOTm%o9<I0@AmUbnP.'"r!"8qU>%dkJ`os0qPT2M!9mRL6hCLh_sSpdL>Sa%2N"9"?F-ZfN#BpR$ajSCDNIq)/-L)pBsMLJ;6_WN528@p%$_:J?p]Vk4lR*,?]me[9g9-kH#/Egq?AK=&Uq2Fib0:XMK%Ma'$n8/G7a&e@FrH!a@+`i*l;%Hii(sWQB0s6-D4"Hh*a8c8^Ofi_%C0#\hXoiPo+!R62RDb'lRcV*HLq2DPo<^!>3/;h18^lkUP0Q1)B-N;cY6.p4&5CcqAp&&dU\K0V-SbgHaS!k"5n?A)s,*'_!Wg&4%m`78dNZu34j1hQU8=ATJV.h&mJ!UH#s8Jbb=V6kbFg`m0Jh#O'-H*dbSbsr]e69Z<ZK[&IU;Gere*#+VX]tO1S/@3)+UUJuWmLa\%l)4m4X3Z6QmB2W8O9sMOC2IJ?UXEjXN.72[9a?hJ5f"VO`[#dEBfD&@lCUCm%70,OV2jM;1ID$m[Ju"'ne!LJ5*M&!"r<#F?`6(S%pQKkQa.KO_n):7mX*5WpWj5`B[-F*[ZjMNPRQ+Jg>Lu974'ZlF!!`=Ni&'^?TVi`S-IbJ?gb9:PjT)DBW8W)5=SR^7ihdBn4q4#^%%(LtonKGd5+lZ!UJY#A@>VLPk3[pVkjFRen]:#]mH"M!Q$gS226i8eD9sjY:1)[Ip9R_pa3_O7eWYkPOPm`,,EUkr=f1/`oEqj`"%lK8,7Ee]n,=Dm%ZOFf_uWq73=Z^V]@!fHd'^N$J"[06N\^GR#ae8%[`*`J>d,V+MoF'Qrm<*Qbdr.rnQ6VENk5#*ZMI<A^kf9.4h%#b;JP)1[kR_,RTg"YYN=aE?m"rQ0_'Y_@\/@&MT>eI=MK9tc._MUd=Rg:^B?^rF;^1'eLsQ@sE=W#[](ms-h-C2Hp*AVB2aTi9I6%i+"K"k1C>$Am$)"R/N\1<L*![NW_%ock$m`%3:SsdeKRd<Bd3b2u(siH7]:sh2EH^N^\a]<E`g?"><.[USlQe`c+Vg)/'5#(Icc\%&BcPe9UXfum<)V5W&l8`U$"%3:2^GU<+cUNe>b3p.[`Gnd)kW7,6m3kgM4gWVYN2eM]K)$>7?h9J%NO%[FQ)8[<etP7qp33\M-(C%8Q\jVp0,:ad!Y-cDdr30C8k-F=P)gS3lg>*S?J+mM#Mi>,O"#n*Co8o]9So5F*OD3H2]D&3u\[q28=:-`m6^flT,q0*Re@/8tDj/%FBV'g&uH.r6hIsL'18J%*"cZjMH@?CeKIY;)__N<ed4g_)a@iu&P`:eP]0jK$p>9_?UIt<'#s[9eO^DGp#!]^NgbDQ7jIXU]hVXD%I'4moH[N?[&Q%P?HqP#*;Ki!(E`)J1=o:lgIY*f-?N1mQC])Fdd&GVHPHKhq&i@QtOsjX;I!R/Vs,bInTC5gpGj4#l'sD[FjO(^]%'dYPV8*-@H(#LG#M2p#'!`41Z$#[&b+K-m,)(@FRF@)oWFhnkZBo1;^m1!tQoL,h]Rk_/E=Q.@@-.?OiiS+f+R&BBWTcnT5.el<I%_N>fNN]At@7)E5a`q\TkA$K5'2%42ga8WcSG"I^A*UW9/MJY@RdLGL#<g`"n<5c:2kp(>4n($`=(KY(X"!bY:rmV;jI+<PGe8)0o%77%LI^VRAR#2^gk+4kQpVD$X_(U`s@XE::^YUn9-I%D/NKQ7ntl?2F#VASZWs!gFq%/D(N9n^K2:I#5Z?pX]Bf%g@.qs<86^5dR#%QC;QOIZ*S/b38,I='8nueKmKB6>Z>[*J`-W8ST+uTB:>6866_dpA#gX"]?'#qa)*rWZY;p3h"S/IW)-#['i4QZ$h]k[PY]N+ibFZ%C'S&`.m*o])sF]<N+7Fj]#nO:^IAHLB>rf.KoSX>1VqQA8mLB?.2o+>Eb\V&(rHFe8c^3;CZst8W>qm.Fd2n`CE718%'WR3>G]';%*SRP@1uCF,l[72cA`3QK-!/II^ru,*.,h:H7.@/^</#)GIViNl;Z4H4onJcD7>k0$;Yd!].Ksr!0heQ/'p]^pkK`UfpIuE?>Wlam%\o\*k9rq<YndQBmB[D5G$l>Jda($!_]/#93\o?)'\>bu`O']q#.rA6hVTcg1HESo"CIesDc)S&`?qInude**#"[nhZ>Q+o+[&kEq%P<^HO+V!MPc:$l7CFbW=>05#oLh4S1DXNLoRDeYthDFq&"U&;.Rq4\?XOQ!eL/bSGF&S9G2'THc,4>YOPggOE3OZdP4/dRQ[eoFn%3H!?H=8k00'Y-r7g$-*Be#h/[lXbK]>&TC]84Qs[GA0uFL;ou_V(K*F6%3Zo,LsA>8o37(H=[gAeo%9YUosS*[]jitjVm,/f-X5^%9gH=m>T6\=Af%Wk\?r6a8/DWh4qY*-lb!U5,7M;FD(F\t1rYJTHB#'+D+.-IR2rQ+%J'If!J^kWX!2gGkd[:G)cV05ggJ=gmK*gj%%`m%5<f$)fDCm]7l8lJhrPu&$r3D5s2%5?eHl4A&K%FHLZnT!4e_ig)G^Xo3YS@"P;t4YfVU^u=CT;&&p-XBo'l/+P@G'l)ei,QV%,$(<_j3cJ.Vd#3]jW:\g<dbYm@\V25pA,bkI+,)>b13!"5ddW1S]fKZI6f5s-)f@Se/I9(JWb9FP-sYV=t:AL]=2VB3KjSW0>Ugr%3=FeX=]!k&,iuO$pL`l[B!r1]<UA5lRYJKrFr[E*U1GVYiRT5kBOG9#G!`*3lS\k^SV*BRD;#b<^r_+Zr^C&hd.S7l:f0m13<c%g%UA4(KgrV*>D<.2m*WSIC=&>XVG!16uO0o_rK_sfP^/4pN]$U$A2jAJ<4p&1%,-D:tP9AOD@hI/PPN3[MZnC(2WPB-T@^^ZFRY"?\%#LnhfFT`]g@5S<n4IWYe46*uD&%!@R/@7Jk`77!gO=,[8+D@i*$%fSi2*oUCW$lo2jpe$_d4n!_crbphTWJ60K%<Dim?G7$a'M9[%8emktE04Y`6Ys/;V5B`lA&#*rF@aHC/\pN^]4Qg*]4Z;i9\ZS1E)^?!nr6%_+ob3d?!Ur&mF"bTFEtA`-Af2h5dK";KUA<jo>oQI%On31M`ZLNuLS:EkI9/Q;>CqL(noCm0)o_S&3]1WT:lo\H'hO!eS6?e31;_s5JHi+YbC>,s2L+sS7q,T82gM)lB%j'/S;aggP5B\p%U.0A4T3VpSV)C/BEI;\f9@q[D3`XBD*$eur&`JaVE]^0,pFD`b>DjH;c0?IaE4V@lD=9@=fAE#QL\[@gn7&7A6osr;jaN5^>Mm-L%gHObCedE"Ha1L_F-(`F;a,(APEH;iEao9GsX]"c&)c)UXh9FJNB=Ds#6j'.=NP\@nD04E)^[7X0FuMFdR&Oq>=0dt0i`k;:L$C7K%(XM52lg_U#DYD[lR_)d.9f8_5-Zr8P^9;AEF1lseS%h_uW\7Z`6J5H*Y\`(IHp%3C^H0,Z8<krm/*B3XmFEA'2a?ko]Bc"Y@jS`*%lK,p1e^m%l'.a+RI+lcX5$l:Yp"fJhqJ5r@RsC(Pd3`nH/7^8QiH'3aBCT0n#=.]fT&-%aphetGHVckm8ZsFhc)6G7F%mO,)kksn%KTa*e/!X?cFrnrAF3bepW=Z\GP!3#s=kV%N?KO%QDgD6FE:/.L;@u+>DmbkcCZ/P?RAQ]F]Nq"V=g't/<n$`gcJi#Sje8"j'GiqF%r(FX@L[T%%`,AmDm\ZG<`Q$'OnO>@lGhB%8j3c.&Rqc"7k`q3O>3iGV4mZDSg#@p!r0jI^la9DcJGH%&\&)p]@_*UFCWI@J(.,X$%K?^smghJUqJU'8ckNB;6)<kjHo;[,OcBRK5EOX]I&0S@)0@-=@\`^0lo-U3\G5>^*?W1(uW`l(Za1:5H<7kHsc`Gp0d3q,'nUu8*%9`cK<4F=m&hcI8XS'#Z=f=<-:H"Jr.,'V&^1'bV+2q6"DG&ESem_!BcrEO8XDH)+V4Q2^X!/CJJdkPDJBTt^1!-luoTYjtMW0,0[%B<dkHp)0&T.s?(qrf7"Y8X6Tr<jJpVUX,GQ/C(0ho&]]0IeJ%K<I1ij;eP]ej&CkD@J3Xia4iWLVL"T@H.hFr,a,^h`26<PH=r(\%UqNs,fWCBd/`s(#T$XUD['Dj(E@oKJl8]Eu4jto_C$t+;^Y<Y@?ZPJQf/n53'!YW0LWNb,>tI]2-S$XjL`>T]dRg$4e5[WuZ*Mmf%kHf:l9c_7)iQ!!>PPa%qbL5fJWB6S!*Hlf.UpS@AJaVgAhm@%CZP)K,cU]X!V,Qh,.H\MUXej6'IrUf*;k(s5Z/&`_`3ZQT%1npI%)DMSGWTQVeF5,j29--[i;'^MX.k\oK02H8Upt7W!SN`m2o9n2tM#34TeU47J\AcV>Ae+O_FaiX[n!ib][dMT@V7A/c%"SsT+eE<?%5!gG%FhW\h$qn::?VC@E>2*'8\(0nQCUTa,Y&&&)(5coJJ=Dk(F_X%eQ>?5-bgP:_^5g`u\A$;i8\S:nluftHFa/,/%f5l!HAmQe%Tu-A,pUT!K'jhHWdFqV\06cos\Bh'Fa3r`1<Tucik7Zr:J^ENdQ$^m!dE8R`-VSu??b_.Pmj3%?O3[uP!%]785uu2;pPT2OO'@OA%MgB0lf^<"s#PGRI`@p)7,H7Hm@P\QNW,VG.o56"kE1/5'Q=uK(=C0(_VA>dt2W,dOIpSRha(U"KD2KH6Z*NJn1Ag;6LWRs]^0V!g%\gQT?99h*%iqYG;p<ENXp(l!6\#JBPDDP4lSQ?D<1T3koHZZX0QJ]p*QLJ+3bM.&9DI,B\%AiBG<!:Ir]e5rI`(k0;gV#(,j(J80%(NfK;1;tlibib@iq54Y7QRV9qhmS*Tkq,LYYOBi=iQR>UCc`1`Ij;G@cd8:uU_GW[6i8<=/268Nm2#\))^'d)V<+jXRqqhECb:"M%4Q!PeW6$CMACMS^aD+)=;54f<+*ePWT"0bb%JXf-M[eGE6$%cH_CtsBcqd7<"ed@iN.=7E.A:An\2/OIgkD"]#\:P5nXg0-:le%$%1%@1AkUf867jk.g(]c!_Z2(hJY*#B5l)BZJBu!00]PZ9"-(YCc1^$.2M3,J<`7"P&BOElhag$Q)df76kBd<*20Ea`)\_OW'3S,^B%6,pZR=NQ3\J''lcb8:@uJJo=]XE7LJnuRe.,I+[f9X3ZWjOhn#7ZC42Lh`(%5Y*-YQ3C!B-L9eHG0J<DoPa8(bFm"jk]1=o(t5R(%lWf>e,>+bJ6tJ`<n4Zb%16]kjj=qZp\"ofX^u3?gR,fsuLlPZrgNEo8US`mF5;pFn,#`;V)Z[d#_'eHC;uE+YILXacIhd54"oaE[%ls;Ht9O5<F*J%F?e?TpM<9`\HRGXk*O$IA3[.atcM1p5-Dpg]XD<@J&V<-MBl>1&YGBL6qR^0>HK0*N2$ER*fYoRd=$4LJ>"\eEC%+Z,sX&?m.Nq*f9$QL5cgWVFJ=+eN4.jpuGO?q+f5#7,lW69:q%\[Bsh/pjtsaVdT?5DuM!B(7WVllJ!(.tqZhr3i3S9nlhd:iWb9%#@I$%#PY(@e7g7XL3siW]5!]=!tcsP_T\AcS;m;5jmjT1IlP*^*k%DBloI\Vp)afC8(Zq^-S(9aL-G;lVd`kMr<dojbk=ClM]F#0%Z%IDaJ@l7IG!MV;j-Phd;>0[q;iK;Qm_NbcI:d#>Rq64#h1Hlk:acl1#"(G,,1PZZq^-HSci1M)cI@=5d>caIkRIIEAK#6fr=Y/u%<$_\&RdM7HDJZTWW-8E8XE=0"+q&j&b6Mirhq"*:j8mQZm2'`k:)>_T/%:p[D0p&(R4C(a9X2YDY^Ie##K!.SN,rsHO3%obZ?%F>%:los/@86nI:-lk9[`mpG!1`H.+gTJnJ$\lf!&XKp*b>>Fl:V';GrqGM]8aQl31aV.Arf$^G'cEZoO%u'A0/pn_nMXR?S>LS5YpRL%bYg;G9-B6oOUXk(MX+ttiPS6iiq]LmjgfcAfm@-oa[SUbrQWmgk^=X].3,52cZT>UgW#'_i:h+VWUl>5<Be#o<F=t6/hKoiO'_X@%.NF^XHAl[b3A>Y!0JAjgLRIh#mCh[qQ*VMV0S>L_oZ-J/\FsR=]$.=P9ZpB2K@u^@?YG8rC;&?";ojcb+DTfufa`i5CrROhaKh^c%@MIX!jEtP%9))?j.)gBhNc&JQI!hP@pO/J[mT"bQ]PP!Dh9233Sc_(W>N$VJ,*mSp00kTc]Q\[HP*>(%<+2"=!P0\%EmH>K]Xr0o%(bm;XQrnc[j0a+).oj.pDIJ(g3gG3IAHA7u2,-/:',Z9sZC[ChSN)AT>*`.P20MG;]rWr`kUsUa_l"9UAPOe&9!87,,e\-3an_d>%qF3Xf]44mMD]b>CHR+F<%G_d.d[MjO^LMT,]PR1p]klc(]!f5"o'8Y!;'gZLhomLJ6"%F7eu)Kj7W12.<I-9Td<G-F"jsZO!4S<N%;DdV1<XbCA-J^Z;"tO;+4ANEYBofq0;I=Nd/'Ijk_.)YVLKKD*TDM=KY$Z\02I?.$DnG<oH"0p]`g1-/A2t4<(41,qQJ]`2)f3"3%OpXRHhQ=Tkh/-]AenG/s'Du*dRmYMhlr!"l<ZaMS<A0TPd-]'?SuLj^p9g-5%>8c&dW$oTgJ-Me.VJE#Mn>cq-Jq-3TMUiYnP8`;%.TItb+u)coo`MrHhJKGBH`=?0ki7!V.Ida$I_?0]@W66rF0lYcN[ZN3KCWuLJ)5F2=pJWI58u;uD_o"t3u(VBJ``u!8sEOu&UOIl%<I"dI%/s@Crc9Y5QBFn,=*1ul_!#';p(`.+ZBhXPW)qoDO#qf;rUb8WUQqYP;,c2BH%D:O`4<8AfEaE=Y?&i=rCu_2Z;gC40qT'R%O&RPYd-5jc/jV4mT=*MJe+5Vl0S>,Ej!)-"YuS?F#GK6\V_1TRTDcDWf?)ONN]Xl=q2iD\n2G]^PK_R;jrO#MI>Mmn.ehVKb/IMP%]4SX&'E9mJ"3,sSc\E$T$H`7%Hrk<>Pt?o7UE/kD8+W_3m+^;?(LM)L1>iYmQM%Dbf7uD6'd^e?pR=hITkD="S%3S3Y%@=>A]PL\%L&#3WH#B;]poQ[>Spkf43!\,4cb45!S6c[16L2ZBm!Ym5>*q$!bKb[iD*c9A.;VkCQ*C,JK*-bmcfHs^7rT&a%rOXnAQMMZ/S?J!%S,>h=8u[(+i[r9cU`4hpRW<4r%"WpqV5:T^C.WKm+:9W)m<n8<DRZdb<n<biJk[%jqI?dWR-&:!0DDps\4%T8'fXIg9/uKm7eo#'%Jaam3)<Hn9Q&mjc7(H&X2oa-/LiA^1]3(sE1FN!pgTte_ka&@i#2M=$WFi2jjJm4E![%l'Q9Y=me+KoGKVb%0QpFWXeI,O=Y+/%t%ZEMBfHFCIk$RH06mEL$YhOMRL:^b%Rm%^Diooi)A+a\=<)3nJbk.J3icdArTr-IX;<h7V'0PLG`Pi'W][aTW&(!@X(oh_:[WLkaC%D&t?l/raD&%V@Mi/^4@(\_9-Wc0nQdB:/:&3Bsj_8j`l2M7uP:+?AcrLuD+Gcn2jL?BTraGU`WfY$LFLbc>Xh&N94=K17?drbsWZ%c^l-no:Zp)b2lfSgL\iXS1]_W)[*q?%MiBg9>ug1R2#SRhq_Oq/D6&8)D1<LAFTaYb-Cn#2YW?n_Wf6K\5RiEMM/DNMs@D#i>DX3%?+Y5!V-$8E9<TYr0'L9l.LMT);UYI,Z8$B?P>od"C;f;Xpfd7e*j5X<\RMj2EUR<h[.fpfIei1F)KuSb8!s82H0gFH2+lpWo=N&r%aQ`T!JSVaj<@P\q[*""?`.]=ufWF2Q`XOY*\PeaOpqo`LVT'=g%[5dPS^di;4ruMKm8im;+$SCO)CHEolM8=;H;RHQbH4i+>%IE]%[rc+<n]Ti>mI%GI<N4L8$QeDuh%\ifkGMsl@dfKE2^kqSp7P:KJD!OR!5^dhIlRubSNVMPp!!l;fQ";QB0Y4P:Q\1?d7UPmmB:fB%.kP!jk(K(RflU_8_-ip9*]&$_4!us@dl#%S]qmN;h">*5%*Ill9]H'B-b.q:-`TVTlLS)(nKu#tCPcc.Q\J$9,&K\@NghlB$.,?-%>Wr&Of@b'8TR,J>*eqRXZj_7'Y8a>'63Fhh\aI>NN&pN<&%qF]kI"^\_('>=H`i8$DDcRNr!X@Hd\)TbporAH%ds'L/b5Rm!Y.i!%[!qRFmc@fIQj2P)<a/841U>GpQo:mm,j-p'6Ia%=(l+T"p3!&da*3TU>P[H.,\e6op9aZ#ZdDp9Y<T-'d<a/sF^E^s-4::a-`"8k%74Cf8+%9+b]hTA\)ZYZ]5e,M7/D\N^Nt*6rZf:,rX?L(FkC;I+7)-/qI69pnp%%>Kl.>.R,Qq3Gqt]FCj'$nU;(S+Oj*3+'ZA)3Y%K/54+]5-jA(iOP8mk.I`aH]Dtlg.hlTk;\YRc74fQ=ct)4f(hD%aRQdKU3f;n+W<Dq:+)8C]1clPK^!lT)YUM(YMDMprG)>U6YL#%RhKjeY6R'>4c,XB6/mfJA=J6O@P'?nEZod3D./<mh8N#?qpBf"Qbpq/kMU>2Y%@4Le1oV%dSfpO@rk@a:b4cDJV#EG8l^<"L9(iL%:=!S%Z))g^oN66!qe"3@b59VW6=kjoQ`1@lnA9*n/q"R(Ajk\Oias@CqO!"^T4]'gEY];rD!s_#.(9)bI$cMCL_h1Ng\Z?,c`J"b%,;o"2TY*0C8tKu0'_kj\Nc1QYmss`1""O021Q=[uZ_P`i\;U,rPJ95\7R9p*=7[Rr$utn7`G5*ck*7]2+?+2cr70tG$Cc]rW"<=F%oW9tT*m64l]f!."dc1[0*SKSY'igl$T^6W3Y8:n9V2ju0')Lsi/HC^>8oODPEOsJ^P3hJm7fI]+C>FK"ek[_B=j4=bT9mdVH[ZR/%H7)B/CE9eW]p/0BM5&fHVqK,Em@81(>#t^iLVhTHNk[$%4pV,^35;s>b3q9rYQt<+lhO*FE+LY6*4apscW/,g<O@\BRb:Q02J*cP%`'5JrD:=a6IZ3`54K\9SV+ge)U<Y5Vf[2Q"-)JPm%\2;^)bt8:DEM7&j3<2hSUGm4A0B_^ep!m(B:pp'WZZf!9gI@lMWXI;H\Id"%*@WbMOM'TK_qH&:>._IXE\hLqk^0WcbU;;NgApP'.Ul-$RG,m`,07sMEof)Mc*'"0H&p3\Q>)-])RJAi?^CF_jtoK4s0o,tT4:^j%A+6jZp1&8t=^4^^[fX]"et-IE8t@!VaXkQYXHeX^*_q[K!S%OhU@;ALma\qW<aACelSmko,c0tX1\[`<J`p,$G(3>lp[CpjW>utk%#/kt;/)!,lFEg!8RSr7\/N(JJoM8CLLWEYbB3T@D?6a?sjV*a[%54>sL^K]Bh(uSs#!m\beSAp!S*e4*(&V!8"-Ei`@1*!rg)gL3%`$8m+/X,\*7lR(sBNo`dDp_"cNK(aMYBa##d;.`Qf$l(/Ze]b?S3VMf%T&]fW\"*lV`i^Y!5-LZ$4X?of134q=j_eGk0ZcU\4knT%$62lhX_AO!Y"5<lZ^ppB+3.XM4*2@[J^\b+I?WBN>0<fL,bpf*oeWOmg1IA5QHDP'+T)i+A-M*:d]'GsO]J_u&UtHnEiU<_5uk]^%BN@B2>(i&(#b92+E1IcB$$GE:$QHY+R9S2WdF#195hdab6"_M2;=%`Q6A%![#JU>dAV?@sr+f"Q3"tm_3@1'RU@BpIB93Sc?oW)?%pH5p<:fN\N])T:l?E1,c>lhU/[S-.tMF=FLCE0)N)s?L!SNa"5\7Rd!f@BR2HY#%3;R:_$G_qZ\"_3OV,Dr>+ct]Ok.IIk-A>sKR%h:Wof/F%7lWn>gaiIk`[L=M='nAb"(,N;%LP+eU6>^?X0&&N"rm^j<8l<8d)BZ0M5i'6[>1Y<:g,>Jl?6)0Kr'Ne2qTZ=X=WZE`+%$,UAS9DE5hm#TX([_Uc-Ji40OdDA8oh7]NJ.Vbi3<eE)np1Y2;1t\'i(DSZ,_^B^8_7K+@SX0e,#^TJ$1n@t7*J&F]bi5X#]c27(%-?)ZiTT`^TiG4ulYPE`EmZ3IO&Th;mf32_]C_+XhckT4B]gfO]eEUq*IO6*_Z7,b]&/-:,1afFG#J0_7/76rGIn2j[p`FC`b+_s9%c^sZi-X44K#!"(cK:_UTB']q^;^&)>QX+qP7;8V$I%:AA+ET<PP0B*D@H1)aRC]B+5:^1#W"[d8%Wq#n/++#"9#_P8los@s#YI[b%<_`i0ja\PM`J-e>V]AaPIJ$>o;NZ:*G#[eX%[nJ*FH_=DEC3<5R9E6sWeY_5oT-(\Y@5.e!=^;]`dj)>;;VO2Xc-%l/)=77@k[A;%SZ?dqMQRpPYO&oG=nEZND4[r;g5C%>2uI-;h'mKqg"5<Aa8Xl5QB6NkDR[$_bf\K?s$!d-mVg@O72ITYTp_25O3O)hPIoo"l?`tH%]t?gH<dO)NRFU>em*$AjbYZ]hgFs[42Nq9)k;l<"(kBeYE''sNgMApe-MT[:EJLSjn.n[q/[bU0AceZLH[Df`>&BfMmN*Z9gPPmR%lUY?nj0!FiLH?u4QbP-6[o-EFH8u^Y.\j6>k:;t.jU2p/^cS5?,8=Poaa(6'@Vo*.[+cOj&e)'l5Xi5XN.qgF-^!k(0i-6<!``O!%n]7VS\*Z\cZO)%-H7R`s1CG%>4>5BK8@4T5it@t'^YmGO3dc@F2%TQ1IQW'=[i]]FrY/R$G`(,`qD<\"#_XbHl@\Z8UV2cfTURar%G)$R8m0>eL+1PHcI9@XK&CQ@$/?U%t3=HgQ%h"<)3Vu+QV2(=1k04srg&)L"#gHY`l307SWI4PUf3qL)DSFe1g2\&&p5-r,SeUi`%EFl(,m,#tK!e'iKZ5n%*T.)d`Qatj'^#22-(X"i1S6c:F5P2AlB\90\=Uj8opN:cg#3DXE<[pp[A^Id&7E_@/=Q?rg&#s]V4R@.d%n\&(G(j&j;j8!uSG0m.XQOB]WpB.+72SAQfO6brP@qY48]W`LM4L;En3Su7;%D&iB?f0E>Km>DZddk]>m]$/Xh!H\Y:JrRKK?iW:%iq!rqk1":q5`!QI53<l)jl\rPc/Xc3TE;O1qJp.3kT6!m'Z9HF4D5jJ-#e'GF[m>AFtIMRnBM?LV3!Y1n<#X=HFHH\ibL@hFP/E_%+Olh8(FB&I=CYakGg"7EL&3sJ@8MD*r_^p)3=VFRNgCiOGYl%fCrZ/+F+*daqrGV;d,N%hlT"*j=C`km6':<mmanDso?s]\Y+=7@%IIZCtDCKB`kga/6c#M+iqtWl&%iP`Hj*JI1>og=2m0>5IU!*B%k*Gt=Xi";R5sZln@BZ9sB"JNU^-AHsGE0!&K-"soStF:M+)M72%4T.7TK-L3@O6a"(=>fP$kX0rJm*sYR#<hn5C7HUaXCY3F"V:KXYh!nAE'%$(R;j)9p6*SK)MbbR-;N-(B6GBK5``acl^q4Okrm(Z%PsNU[P!s&MmL$fd*gBg_%e#lA/Pn+DlR=[SW]hhiJqetsIsn=hJ#dE,Zm./=.>)ef<\0W`4:([Snt>5OqS90<=50:hm26`EL5kh@%V1UXa.h%m2p8Pq-=^E.kLH\nJ.)OLMG9U60G()SqKEjr@.)X?>gHrH-#,Nl'[bE6.;Yg'+`\M3Tp1ms=1ct$d&IWks-1RfG;#CPq%Gim79m9_J.8aDCTDpR[fQ.+K3CB#U0e)0k5ISd`2"c'9i%Mi)#.U9a,\E,<7TV"m"gWi<`:Fc2&qs9<uHW_eh*NVIb^.g<)(GF'P%hh@ssNFMkT;p<*a`UReRV7FK'^Fc(lDWl!j']\@OB.N(lLT_Bg$i?E[*Vo*gib-^1mH$r7F\Z<.g%@Od?'Z"Z9tU/*QHQFYZlS%1%LW\!^kI1uToduG<2Xb!>:[r_N\%fLeXaS7!+'2/4>^tKuZ,T:_qoS)<!9nkUk4nY3iO3Zp.2Jp?bJf(^f*aAB#7o"<Df_o<ZKV)W%OP-%uSLKkn@HNp-*T"g0WSH(1MXu.=_t%uIFPb\JhI[t$<iOk-^$I>Ko_2UG>J2^\?l>uUGb7k*cV(3shR8Yf2#ePZ<DQf`SB/I5%oGH&J7hK?FB'h9t$PDO)')E2+cgilmfo$:8EK0!;/UEV'KJK-<O]F>HH^7gi3a5PT3Q*p)Ir'Il?%`_!)d#!pUgoLBk]*?-#]]3*%%ohl]!fZlbWJrhQX_j>i5Wd6Qg:`ioRRu>DB*0<*=<-Qb%*Hni39T.I;""&&EDS>5^M&NiB#GES3f\h:P?2`BZt^SF.mf22(cHAs%/fFqr/hG62K4=:V)jIal(O?$!VL*I7TM)aRH8Q1J,4HB.3%4M"*<q4B&A8#jI8I_uK^5DnTKqEFk<(0`rZ)4QKTQ66DNF,G9Z1ep%_P6(`fVd($7C$hM(ASXje#\EuFa3hR1(d0I]4utoh,CN)1s3O"97H=#.<fjufe3!$n=?:*dX^pV9$rrQUAGR@+R32K&iAA=?<^8Z%$cQD0`(+Tal`9lCm8g`#;M'%ePN6t<]=#$!dWu>^0"-u@o=lsngW@/+/1<+oLIPlueYEVgSI6l2<f\P<!:0cf"),Cp^]VYp[H'fC%lk?>2FS&k_L9r$=7ZU]oR@S)PZY5Rd,J#O`4%`6S5e]@5#7JVHm4GBgOo9Gl*?-[l>;-^ebI@Sge6smB_EST!?CR]84.nd##8Wtk%+?fH7JT[#TRDg2hO@QXQ"#7n`><_c/7p\SR58<&;@,;+&`>M2D![/ROr53LYebL`@HI(K=L>T;R@s/\5kOm8W=QK'$@K)K9$US=5%F@Ip]J)q]_$BVL(9!""0?_!taQ,t5nS@/+\l(@OTF9h!k:>t9-.F4gYP)&II%lb6GXEp3/<R4UhXEmu=eJ%F]h;#n6gIOR=A.nt[%ACY0c]-h]PMFq7]GZJmdndgFtFOQh)[qdd[C>2<0EB_Y`[G+jaW#;]S7ZQ<8.NNkuHLGN5=\Z+(,eIO%b%Sa&=G^[Q"_IE)e7]=]%\WV=`A>`jdG9EEf1!ir76R/5</1gj@2d(oM>&D[(r8Knp6-f'48/TM&9#""L>:SeQ3#O)dloUt641"5[e(q7NZeR3X6Cq0EgnbKs%V(d8FF.LK7HM*G-76g3A%#YgJC]TtZS3+$G:8!to6I?=2:d#EHcPqD,V?QjBj7HRYaT*-sV7U@Jg%Ja_j+QJG-$Cr:I9p%UPir_:%nOihG<;4&<0N-HmOlup7NeWD+B@IlQ2fml!1eWC]TD@;11thWl4k[r+FjI.eD2<<cl%[dnV!cO%UTHYl:uEL:kl;uALJFDO5_s4\%+j,"O/A-@ZdgS-%Y)\3sq:duHkZu<#4@Ei$-37?oPsh12%>nN&e.l;dZWm/H`Xe5%YAS$24h!pP0sa@@$!5<?LO"`cqZ>C;G%X)/%fX1VZnEem5K2)oYXat*42t&ODHHb;TgIl+%B6If`RD/KepD57$l`kjo\W<%M$9E$#,jq9c\$HI<_2%/W>,ejadEJn/)St8bgp\[8%>C#b1VX9CjLh?`ViT,Ga4L>)#+;WjT0Ud6B]`A[)7UC'g;/c=[Fa`^'-C5Mpc's[!]fjSLV]7E:[,JIr`:Gu2"#qP`^_<5XnR67a%LP(*s\@Wc4O<:.X##kS7D2C[KYo@^BbG5L'5Z[r]n\-f.MZb:9O:g=0.sU55XId(rlhbgT(A4h#_,T)?SU9_il'fGq(X=r.EJV_f%pYT+Or_uq"gk\BOif7FXNfnop5"46p/5=(Q([QP?,AJ"`6\LA#`,28en*C[+m4;Cp`%@<pBMHTPTlE`I=u%@_6aI$d&/9JhA-"Q?%+=XYc4&'aOp*C]BVDkk1aU61!cYSmP88eJMHnlN^]MkYF[`IXS@T+<<5(Sf"QEG4`(3a\Pb53<eGj"oSWk]cbK;c[$EO%lKRPG=(%P:O?$Zb"T##L:FZ74/a.dtl.:<`ducm::\T_\7'GLGZc]mTdaJ/KA2T`I&Q?,E!p3R(TMm0=dk?c0%U.n^HjJ!86SeOk&k[+VY3m%E'!KKg#rm>!-Tt^Z%0lbP7cs1,=ru]QoZU%(8t^tFC'.3kf_,Y(ebrRXBIIKh`t;[1D4;=PWAmoB)nNZ^RTL4c8S0RCM-rg-!l1V%cCFI-G1fnVZ>dsqU<\,lT7+?T65'V6]h!]ec/%FaM#/n3P5_+Of#6[!L6Y$7(G2**HVnpkT76^m4Y>O"l--M$kg,'Rf*<+sGHi&E%H^ktd9m%^3$lQ_R1_B3n6NV=]3b'AJfD$>U#dfq>R>@(3pN-;^AAtVgXn/gIVpROIece/;NFnY'aT,am5DRd&Qb#XbUK9Z$]X9P6%N><XA5sh+OY0f)*gq/_=T[@/ulnk/LfnY%SCUCh2L"t#D)@c?pr7W[ha(7,A2'(7KEMA#GSMsq36<B=S"DqC)[.dG-eI1tt98Ili%EoZB:YR@\8I<f,rFB1b^Sll9Yr3U5eb]3pET:1JZY%E&1fg*VUbmq8\_(<f330lHkie'3=0PctK9hlVH],rf[hQ[leLOjo/hZA@U%E<rKp/+;?nQl"Qbe&sYM$+R<=jJlcq#l(MEn%rlMiT]&Mrk3kSL"VC0ck50[2/+tlOLoJ=L=a0;HhSL2l>1_Fro)>O(AbFJB\**Z%[/-mAl=Ut6hU%0m$O=.M\/u[ihQ@YHH?JG,e/GpQ6EFT:5)6S$-<p7]>pmXe^seE^7md'mFs!#Z.nuM2oPGG*^;+gEAP.oW>U<L#%]=Ae+=)H(N6YF;/[fJ*#fll7gm6WNOG?:>,1l>4""EPG(P&lu?dgXUp.dE2-,1oY'!QgHKnD53^nZj(19Ot9O/7g#&U:?B%0JVg]%WoNe8kFHAunNK4XOHG\k\B:AimC%_o*7o)8C_,cbHK^<Yh`**E,!uDGMu.QM*;1MLR=(#+j^@2q*/+:AFn;`Z&HOb=:BV@T8+[+S%@Zb6Lea;%5m'paK=X\?AX5uB\1Mb8,kF'l$VqfL"ML@g6F#gi>3r.j&iG7Y9<ij&fc;HARE"/@b"Wc19,H.;W*#)K$3E?OaXJ'^=%TJKUV%T>aX?9r5pqM(rBF0D5m<=9:66g%cAk>EnqX+np5JdtiiNhD-P]q&&*4`h-=TAZ.fkd8E?a;R,6$9IO7H.UE22C,n6R%5hk%mC[<!4n-a^5aKYI"<cB0HF)HI\!P5%V=KohH/QrO=f_:4P8k^io\O6*f&#<6):nSgedWQ#dqN=F`3/6+;9d+98W(@&?fI>P'#hN'%kLQ'u4tJJeE3@NfEfLu$9BN6]?H@sEoad3QjeG?.apfW.Ou\2RYG+$$?'DU2"k!)<pa`$&qUu9#miSml%,sKgm$'?H-\Dl!YI\#/%F%7fI=R9YV$0aB'LcH@8I+XC_>jUU[Ch&Kg]SbO8j&>[U#D9J/\S_U+Kr/0b8Bt,X@&anflcd!FMsarW.5RT&Q&fH:9??u;HEgF1%KtV'KGmgIP&lW'4G"c"\kT/C[Z0^&I21M\lFlnrKr(+1GBbL47dWX++!%V)sNc(1n'pug9ZIXSP\m<6sHp+Yrn36.4b$O`oF/Gau%F(q(a&WF=Ph7j2DEU/%u$)h.A&l%Qbo@sFD]SiGoB?jo=c6$a@?_Zpf'B@(@k2#:#Z]S7D[e5mrVof]<SU#9=3Q92KefcL)=XHb$%Uor)LU6mt2bG9&of?>2)p+76LD(<*;I+c6(Dh".NM>DpShU9)DcI.D6#9U9aMepk]$hHc]+"seF]h]4+Bb?t-YkPS%*:,\.@,7S;%5Sm`sUVK!-VeV<Yapg0pc]kne;-b)eYs9UQhFWHPCJ#LFV)\ZuI;J@Q,8]htF!b#[`!EmqGnT<KY?_"HohOCFrc#;=5]XcbL_D09%3q/KmYmH\+:W]@sY#"@C=%%1JXn_trfE%tilgjK-O8V-/Qel^7Za9'B)OO:g*gqb5-'W@\!M:5I'1f!HA,qMWPQ#M%aXkZm<m67m%*%=GH]@4HOinQf)T%t!`jF?9SUetZ5%WOsMaB`Q=$-s8qA<\r8O7Jh:ouP!()&YfSIlMgF#!*%%m-a@?L,MRlVQX0Bpl#V26aL<6%S17FMlLQuB)&_0kruj[R%U!c].a\?LoB'Shm<e&s%a+,h+6h(Vo=f2WB:7Sd>aZgE#5=S)f$S/S18&nq5@5C);?p$&%t![-,q22#%E!*`"^7YN_kNn@mo!,p2$b"T;??LD)2pM'b:rRR"K_tFIlfnnTUFqhKhFZ'=f0cPHdVJ>(?+9*ioq+[1Se2l%[H?:ZA(#&UiQs!J%fMgs>&*NujYsI[6luk[e2+Cj^2aj3jO*Wdp*NGm8LI551+XN5C*mWn9:rac__<^&R]:m_m(.VX@B0CH<Y)"$>4e1[a!@+S!1Taak%Cpb7a*mP[^3A'Qi9"*\/l]H`;fq(aub.K+MagWPK'6tl9m>:IurQYX0X;d8;)^L0A7`YJ/HHeW^59t@sNkNO5)")#>Q!A`!)-lmN%HYYH;>j%Ugleh/I\BDm#a7J<REo2o?`D;POYR$q4[ccdf(bsNuNso0F@Drd=F$3RD:6.DmiGFKP$sgMc6uRSFU+N."jtpK$O$E/S%W(2Sk7T'M[NKRF!c[MCF"Elb!bA!Ggs,k*gVkKNbd[&?#QWF!)=K)#=rEq#!J6K!EV.U%h+C`.>l!WJ$.T1uRB7_=*_MV<$[S2i>%n0mrK8O_p^k@c>C;*UhS84E2\_cNY.?:IeSMY\JX#20\&g[4=E!oeT@Wp`YO95D]:S&Ol/BJHlY_V+7[;4#/YrVWf[H:Ca=B0.ak%081?-DeZ)9HgL/FXrO/Mc?KO*/r'6RV/S=qKtgFkB:g7jN6cCt*(-JN0V4p'<qu=T\6"sV7!Q%&QAKj>7ALm9:ffBGN$:Oh)0P(h%ZCOc5VXKUT^P`JSC@k`I,ojDCGsR_MR65m3n)@qp?/:.nEB%"ZTOp]2b_%O_kgm7D]CD+G^fOcYT>'dEYCu**>d]pA-g,]Gntk`[%ghsL2#b!tbg54_HCW!K&\b9oUT._3sdZI-KPE$]X9*gD,eJs;.Arr::PIVIPY3HEa8P4uj]lW"4idC^KaBn"<[uJPpYqc&j(c:s#%*86pFS1<m8gDdV2[qaE4:b#gE]2dL;:2@n%e"A?HKC5if%>.i"Z.;u;L+Jk&fT!Lg05*9X>"ZSB_f!G2FMor5q*)NPL/WdH5<&>Y%pE#i^h<s+!c5Q*cG#G=#39W[pI'5R?._=NXGCJR7B^Xr1c]Pm39m5RMC!^pBKcQab&6K*Or0tRdl\+X`m+TQa"]J(^Tg7*P[r`t+%;bUhT[rFf3e0o#mhlBrjWa"nY@*>\*K3`36\<tj'c5*5'PkK@j:pjn0SF<`Z,QPrj0'35"fB-&9I3*G$3m*rQm&hA63E(VS]B".!%S?FL!I?o,9Udm9f4qlAb^-8_njBVHPOn4dW-$#%@g"lPfFkI$LIbo8X&/3mcSe9.KC.$bu7kQHAU@UfANn[i20;*C4oF=bn2cq-@%D`+(k*2)0-3P&rd_Xh2jXJW>I$!QG%phDk%>.R!M+.]IsluMXi47.g&VDF?'O]gH1a+gUkZg5coKTH57km"N95-*r7enHsF3O3B\%]377*]K_j"3kJQV_S&)rWp/kjmHP/IUT:8uRpDQK*GIC%STA;r4$&gF3kJQVLXYC@W2Akcl$^k1;]<$3cH\EZKLT6AB/b;u]:jt\%VR(I-H)L-seT=R#j_1^Za=0#@24^Qol^IU)Wp'_^R."cNf,C]P<R]XQ<fah\cE76dA]3,@G,lpT4n'\pVR'23k3-q%eT;i_,9s4c%o<p<IW2?mGL@1%^Wg_56P%uo)FEY'6Nq`&Q*rrJ.!MJ\+0jdF03T&iHIn?L0D@XP#Vb[h32\D[GSF3[#r4]a+OLf+jB@Q\+3I;QQ%FR$"[qP'0K-.>U[<0QS2=:hcgWBe:nlIcIl$V7(nJDbT2o>9!B+<cUC:qj)<Fp#j8,DDnIEM8T>[EB%0'3R&27'o<'Ft=4;4.g>7%>\ri"RF?&sEkCOQk\KSpk?JV1jF^]YkBOVo&Q,YCiAGgSQ!@jRF@7&nh"N2^(YoNZ=*qD.P$;O'ZW'?Egj*KG&RgF.k"bGTgb65X%qO0LVp<DWl40li#f$OcK\RKb8C%k1EYHp2,fbUF8Om[6#>g!5JD(Un@VrK6;\tI>in"CPIU,"bD4M,4`M$iK<Fu0H:.h%t-E=g_<%_C.%k%Xi.;6e$*LrL#[6m"R)/H#D#5:P93PFi;u$Cac4ST"VJMJ;%:+h,(md*rEd1G=+YtT)6QaG=+Z/A37BY2`>1%2j2>(iKlmX%NIie'JLe'&fFQBcY'.JqG'4Tj+b@.i^.NS'8n%0lG2*s4@BJ!!&D"_P@^EhR[b)SUWIUqRO^)FUGmp>l;.`;Pj[dOW*@X/?HZe(1%^"gAuM^n8nG>Pn@i_Fj!`QlLp.T<^<O8XD<rEU.aUUn8Q?CX#/&JN@eV6>fWSQ=Xp`G7iQ'65aD]/kB41P/O,jF2isX]k-]'gfMG%%fPcp]d,":n?p-FZsk87<s43c6lGcnDn&a3/"Q+<)aFgK2HL<5Dmd>!mbB96LCch<d?GU<7WMG!B0?j[9mOY-'59De%53Gg2r'he%P"=k*#.`^<mClYDa.<5LmRU,28(CDQ(Y1ctl>DV\oL`@j$_;RT3<9a_8%tI1YejRZj^W,Zr"5q^4LQhsp34dsmUlO5flomgl=VC8%SAu=H/EYWHF"OJiLah8)bQPX4cVJu$>nN9?<>6m<eNP]m%sptQ6!d3tpPlD9M55rAEU1^bM&NH48K!^08WVZ+hN]uPNb(oM@A4*O%f<APEb4RHF<0@qM/T*GJcM*uOjc-Gf-DqkPkjChT9C'nY]MWEgLH(RViY^AhQ?[I$hZ5Hh)V7[$q,B'_^\GL)cI[3"R$>nqf^7m_%VRjaID^29%]lcH+b.eHcmeFB]dGq+:k^YOn#5QcW@1ZC$He5b/8AnNSDDeRh"pdpk+`9N9lM@33\,EF,p4LYdUPIIS3Us<j#\A3\%MPVohAVGosp<IW"?iK12?Y("^B="o&_5U^-mTB;0<.oJ$F($'<<"BcNFloiEc]"hQo0$pURJU3DHFP9a,.r*fAXtaFA4md][Hpli%a3W#N0:!ZMMXVZ,#6e@Eo.AN*=))[Ama?+%`Ii3lc06:X-%/UlP"R1l=c>'DC+`6H/B/LuHN[JEQ/bbekItgmBHVs6CqXo8</)c&%C]B@S4k`#>(mLX#E@9EU4U5c)LjO:_FDmap*d$jum`o]HI.(9Khc*cn*V@59*l4U%k<X1"bIhP%(CWBdhQL\/.7KW;jfPJ,p)Vkl%)9T4TZ+cBI=^Fl9oXM1ZF`Y-^"IsBjX4+%"egT2mZgl8LjG>`]8%<CKL`0L7X$NUebe,l0'%gg[HcoUFjI%02/kP?c>3-#&iac\p%1*i\jhM"[p;;KHJ'=o5DZ]Jd^ZL1qt*2ft.Ael5Vk[t9l>Lf;+jN/RFdQD\db#A_0nWRP3b:e<Jef*)pq7^Ff!MmG8>#onl-G$Bd%>(MbS:sO>qIis<NFP`pl^sfbOetT<f&)5:i`Tpe/SLK2F'%$@R_9pjU3S:7bW"*aY?(3!!iK0]NaYgb*]#sW/)s/DL]dC#QaLHeY%h<^K0I@Y0PPT)<_Cd(9$<<3SV#d)ocEK9^$?;XAq=`H%pOF;T%]P5;rM,hXo]'mF;_rO<',7AdtL)G*`>;!F,P%2.6jaDQJ#r6:f%h`GD)n)JK5Wc4SY)[JV?D?'Tk_qe+H>;sicKDl5"qX1[,i`\878g[n&<_6Z]*#LrHeA"uWgiCH,hREk;_cD1s[Fub25"bo@jp=X?%NTXQWPQH/:C$[R(qT=/-cb!#/Ql.IL)Va+(j.eE6>BCX_e[7$#=ffbb'_AEf+\0tnE]GDa4R^bh7Blpgi6YV6\ZhWKW).<G.R;E#%5iQiUS-m2jC&hO_V\<#1P1BX,kEGjD!Ku"6)G`?b?Niu(",O;7"'5Ml=N)T'[-iS><s;,u",J?`GSQlH:NsK\Y-IP%"\;f!W5Zg[%<<5.2e5l`c>d'CNl,RQ69DQYIA/jZ/4p*EenP[*8XMS>TPgAYb[aA@&-eF<e4"/!Raqk?:G_IBWPct+9jM,[`TC`$&UV)hPkl/_5%0'+m$'bF3S,>\`(]LmgIDtP(KCoG6KS..o3Y920F:da.+B0^;:B1"]8lfW2Yd\-@2\_l[2d+M5Rp\MF5L$U%(s7cBC1S=!d:]oM=%kKV,D\C]&TB8Dka)Y.3!Y=br0-$3F2oa?G#-$10rolEXJP.MS+?9])GICK%^E!(p`]mfATg$MTVjBb(*E^[B8c,g8Z>UaH8(A%V$%qRN6rV6,RbH*<j@U!$go2M-;Sgsa-S:7uX<f?ZV0[G;!L^qG2?AWjXg%<ioO#\r4Eh<X7\$d/(%ia+kD"dK(-5Jn2L>:WSV^":TM%eMQ(HB=sdd)WG'fM\o@S>Q%6.G53adTsT1F4R6<DEj),4XaV09%sb@NqhAlR7I!_DqW[ZWG._KKkA&q%rS.^84kLA%lfTI-SI]m3%p[KiIpHj6LT>u(p`:rd2Fg%FgMlldLXleiZf?^;]_/m)fkkACJG>B9NGVG#%rL@^!<W>\N@.d_,m_$,okTtsip\MG(2k,"'%">CP%RG-5*ER=UXr,'l$^5m18ihP>p2uJ)O,XkC5V`48:eaRbtT=#kc\9n0JM=&#]rT&j0iU?Hg8u:>2'cm-W5Bf',J]E/qlfW_thpA8Z%.JNZJRHl*1f8lTmFThI8\_l]8q`_`FWc0QDZN"7G_2I7]\,$t3)<tPCr`$2n<^3K\cMZPbkJ"XQ@`8Pcf?\l?P9m+`n@a9/o4#5[%ci%*.npC<>cWchek.g'#+g)gE?9__8g"kpPnErTc]md+(@CQ>K\9n20*CDi5*WBA0pOZMd+qK+*T,C5dXaY]t)"C0uk'R&sSKQU@%nMnXJn6S='+(j_`rJWPc^OY?B?0`W*p@nEo)[FtEcB/j[b'$!a@ik'nI'h?qq]-d0F/@aT',<+-&tV.^G25+6>KR^UgnaM.^3[-!%eM>^lbIK'5W3FB17O4NY<:j/N20tj],1/^^e\3c/pDGY8LGLIT-hC=0js)K;6M4;6o>fSj&LuS+M,s%K*8>p,b\u)TPNS:UiO-\R%@eqlTmD#3fk!"-+Ic`qpZLHVlDCCh'fO$U%rOdr7Ib`cb6Le02X!E_s2j'k+HR;eGj'L.M+.#(>i\>r]?4p%CT3#IkFoFG0`+=GC%Q7e1]f'AeaP.20CIQke:6g`\VIkl(nZElO:LA1Jili"Z9;X]&%Ss(56F[c"DD<LV(WH^96=aA_l@GX2O<]8XM>q2I18lPQ;as"15%03km=0?J1FPINg?bWYLX:98hmVH$fc<jn`<f+GHQS5mbhIRW"^#74ZoQ^j7TX8@$qWP3K7Y4.rT<R+esT[p8r7/':H?KfaVC:A.q%7k@=B5e"@Uk(T@uEPrSn1kp]QnSIXYY-^@LCe+()%/8>BX&ir6W06dL/In?9XgY_QZsW41M/*`:;Ya3>7*UWi*:KLkAs^2B&Ka:*%/7U)se+9[Ge3L.hd:&LTAU8o(p+A#Ti!V@tO*_[%r(3bH],U-T*puKZeW"rsmc,jB]urS?fp^ZBorFR;e36)qL469heSaL71W/k-%7i[dLhEL=E'P?&9X&MGQS=DXO^4'D1?/=kBhZ2WAH3=uMY0(2OG3lYs,:=tp%AV_bcWsZe8,kejhnA,ANHP+$r=3ZKK4DNX,nIh8%3rr&0fYepk@0#%-HenStF.`DGmsV"3%VB,,>I.q]^YMm>KqkE,Q1eN(s)R:9474n&*qu;g!jd>;_g1Y4rq#5Ej=pUYZ(GKtr7Z`#%^%(+L/%9Hm2f!@*mW.j[V6`s9T=b!SC[TW/s*f(UnAeniEoiR,SfL8_5'7\8h*:YKs72'5IsCeKjptf_^]3lMg$u!=bNkeuNK50o%3r\X&Q1Y[Hq1!j;IJi&@2uiB8:"u5*0<Eh&AXrXAp+L:^KPt'VGP\K21NB+LoNrChk4AT$hgXbtnBSY+Q#PO7=5OI8\G%UlLATMF%(GW8jqNSbmduWqdq/UWS`B#LPH/3FpQX=o\kR-mH*kB0i?c08,F8!nm#Ab/IXY9VT?bV?O@NJ1gqt$.!V#U=Yf8oe"Y?q+(^@G&Z%]\gEmE::CHfAAUdp>G'PYFTrW--;R8\URRu4\b7TiQpDprR.r?4,s43B($bQ4Ia$HT"O[m2g7Ia\:/Z#]r02+J*Z-uhc[H>n%4jJ%rMNFU]4UC"d:Zl!gASOLKU]02_m(FM\BLrE2t-.o/H"GKfDm!E?'tI&\$USAVO&ZY^m!_)r%$F7o(?@.TDQ&\^%P?KkB?lNl*jlh%J+pkT[gq;@GeSCdj+G=Y2nuonn59)Jp.Mm;-i!N5[@[qIh7A$s_U[!!kL6n$-"$]:heul+:\An6?%)$6]DhTnKjX?/pK6<WGL#(@%e6Vt7:OE,Up/8W/mZOKW^NfdRQ`iXQlH:huhb5-hr/[m#^3Ao4dS#q1hgbUh72p.D\F,m#p!rWu$THpknlaim5NF=R?[JoiIHJtg%(H$'tNK5.KJ,<+=n\u)8*dqDPIs>pF9^dc"qgACL?GC^Mc*'q@ou#l5.pkDYS%L_U8`L%W:J!;7S!3K]Vmi:i\b,>45!3oNrQfAP%\b,"h+.bLmf#Qt!>e]c<5C9#/I0Z\>h4:lb/tILbrgEB85CDS:ji@,pFlq]B?Gk1^r+u'1R;Klg?N0..pP-<QYNt@*T4>;kGIC#U%r8mKWJ+4N3+33sJPKC.;6knl=E#t_$gthSWR]oBQBE+TbIbGIuHh#gX:N(`3rf]8`jBc:*G,NZQ?G#e,LJRV3n_[^=LQqH0cC/Xa%ITl50=7P-n6gT's&,u'kJ#3'hJm4BY+(LPradkeV-_K`&l)PnE4FHSeD0P6No$,eqDfhF$n))t$ilC@lpQ,<$@kbEnkAdlA8_L/N%]';,1G939TIFZ&Y]2R:okAG_D`Im>8Bg-ikkNn1`T,di(6KIj?5@<urh>$O&Mk+TiNG!1dH21fShRIe'(>#58r:\+AiV'f@Y5dhM%lPDa1St"l@r3sGkffG`H1cALU$'XIY33.CI/#_;#/G0\Ih'WctmN!b3E:=gNb8mWZXV/U@(CoaM)r[)WS9]/C\(S\]-^oi-md.p)%f,lSOT7)+Yf3_nal,$L#iFU[q?%-jP-_6G!\b8m&792u%B5]n^F#7n3_MKUW>hLsmDLZoO9fX(IZM0.hcZB-/pTH]hAMO[MmM4/4%;2PhcqrlW^hnT-b@X.mKQbFU,P5(%C()V*TO*VW0b^,s=/dO\Zl5RCH\Ga;tdsh)MXfZ'JCOe.4VdI*lJ'Mi;YC1BKbJ#J[hU_)A%kiTuZ']]+qFU@0s+&*IB:YdLSncj$Ro$=!o*uurWEIOI`&'t/qjd&<L?Z1>aacQA1YkZc?n,BA+RWtaRQH*mL[OVJ<$(l&^_1-ZI%:;Y'+.6)LC3%qqn'O2"^B-do@/cN_VKQq(!"SCltj#9Yo%%fN`Y?q1tnX+n9\k7:DMd9Wm@sukf?S9HW8N8^600^>]s7FMr"_Zh5%T=b.qBi)[Ql/:*mmlW>A^2a.38I'H(h0\RF#@e,7/jGO0i#/5h?1W<k4bJuJV[7DWrZ3YOeUM`U/9CSfqJc*IjQ+)*"AN)"ED,!A%5J;mY=0MOeeSpl/'29ccbc(A6dBpNmJ+hm,D=PhqYl/U:(D#<_s"oZf?[?MT6ho`9X4mi-hI"htE5ql.J%GRUCQ;-ep=u4N2_ND8%2A\RQ2>jb*m`pf!cJ+<Vp>#$Wgr347i+R,Eq==+nrt9m)606m/V6PZ_pBMW3>oNV,g@Ej/m)=IHql;Q^4?e6ENLeLJdFa:&%PD)a%O(>ih_hhfL<]3nP9H*faRJ?43.t;:oGKq7Jim,A](]NGgr*CJVk]`QgNDo2)%cbiIH`'[$mk3eSbN&#<(]WNUs8>.ZI.^IUhDtIg%LN3(aCKLN50Xd*LmdB2kIr0,Zbm3[)I:1$Hs0t#U^A>#4%t46GPq-`1E&Tu6HgoJW7!;pcG4n-6eaN1iX7%ZIr;Agpf(XO)E*rS1%rX5IS1iW5;\bt'h-&aa/J)D=#Em*Jjd:(o3F'JQ1+'sB_eKZnoGk^T@gV;WmE1P,Q%=.rm8+&6`jc>iANu8N!Q2_"$i\:PpLq*>O%9o-guLpE'?m3]b]#"2G@pg5]u*]"r4YP`=+&H=\*I4%aF`u5t_r&:)V0-2tnZ?".GDaHQu5ic&HIM:]q"6.VZrtQ4,0a$F\ftZ!h%#S(p?$,&l5m$)nVHKCu#kJq,Io98]s%tD5?K"^^5B>6$"IXH&%b4j5qo0R]94aOCbkOs?\VU/HVQ"S*$p7Lk;WMq]'C\W2J@fOU,%kC8"*jR/j9'E@@d]FR'6]15(9;W7<d)$Cf]O["&n4<ql3mP66aKd/Ie?:f(*UE'q5knheKG<rjH.mmZ<b]\3^DQqgO\?aiPNj,I7%AP$7BJZ\[$,Gjgu'pn-a7Q)c&HL&F):L`Pf\h:aq^N]+f[B%&*q"LnKs8MND>@1\3nqA"nY<<;=mb0D$BKoh<ouYHs?@6do'>oNR%o[U_IjfNS%rdOe'7QR/k2W&:prnd[%AZ(culrIKahGP0!Hfa(]&&7r5m9dX.meb&:QZiA=F6376c96FMohW&HrT9UHhu)@Z2h*l9%qWOEh:Nir0?Fg'lrbJ^fFRu!>T>(;:QVg08MmB;c-(h<-Nl/2>b1c\N^MS1D]_db6?iKWY\'%:F*4IoBq"+Gk?u^oqq;UAife\sY%s8%p8Qi-7FcCDNDgEldq8=#8r]TXD]0.Nm\ju:'3G^A]8Rg1#Tj+rp$g)'MP]Y&=Zed".JH2$$XhnFI%b2)A*^N&l*g[Dn$mE1XS%-Q^1f83Gn?hmf.OnP9,\X+0]WRI`)F'k&A;+856-.@kb`B"`6IdeR\1b]J=&\[O9,\+#/ScWn1*^-6W&bn'97\a[d,IYI=(DXDO!%G\sMK+a3bScNe$qo+QE0NpPq7/bokqkP\cSfZ,V_gN+0;iD1l/kNlP?I"R#W0VN[thjVpfoBJ=U5'OtP&_2:@Xbgs<>^\B9oP;Wr%1bX'fI+$#hphp:cIZjZ5q%-U.5SD'YpEAO/GkJn@rpu[rCYPI#)gga+"f2TtNI>l#KSDID8knQCG%p7/^9m@AI0I:O;ZFNcchF%B%f^&bncBWT;$!5u2mmi08pFgDP!?%"a3`o[g?];1MfK[*orVt:R=20+[ie)^"`#go*Dn1DdI!BQK*]IQhAi*$D4aaoW[Wku&b"hcM%/WNHQD"7Ghoj4\CDI7b\S,5-OqtfD1[[TJWd*8oQD`O[Zs7#W0(jUQ%AXl-fE_B_G]mZ<sY0!hR4h+s3s4)m_qs*+IoDN$g3'3bH%qTQ_&?LrTI^A8Ji.f?dUa6,\EGj"4W_g[F1I>gPkkGrNLpWr;HI<GRD?V'eaaj4$q^O?(>Q]K/4F0E7K`L5$nTIekor;#pV\)+iB%qqN-7RQa/;i90_+?TI7CHn/R=J+NXm\'@55mGGD!*WBhm*9XLX[kF8d[!1QNF729scbFt0;p[aVP-3\ls4/jThgKm$s7ZH$Dn'R9%]m:1aDc8&6n)+$'r_$UHr;OI7^&RJPg\]lVpY-RT?jI3sl&5/2rq0q=dF!?g(M8&UJgb5i_s[b+*"/IMqWZa!Sa5Y9c.?m(J+tPZ%Q05b<DCp50O+gEs*!nkj,(0<JU5*;FSL/a^NM6ZuEk:c12i8Ylm)9:ij)5Vp3[I!`pir\"@?ELH"bgdqajS:'1e7MaWrnjPFn+Sf%DLMIF%_7q_:t-L-pA=U!MFTdTnFQV=Qi-L#dDQi6O#QV$X*9"qSW@Dipt3?1_Y*]p7usP5n\IfKj%&Rb"#l]?5M\N[7!S*_[>FY-%`:2#!Xh!*<mE]/3k9&M.E$_(@,kp*rMEamQLYhS0LApu'7<k*H,i,Ybb^;Y$s#Y:VBmoR4DS1rEJbJ?ZmJ$+d>L.?eS\+[/DSM1=%pK9\`]q:n\oD0[Q06$:.Y4UV=VGtH=;fM?;pZ<1fCHD\q5C"46@Ztct-A5%,57+V`?+Y=KS5$hdYJ,Fj>*ZXJjlJYU!W5#s5@/4,%-OcOn/CuB#nb^&HhfJh3\9a7]@sd9;K0RoiCHqi5>28m[@H+k>nQ7ID<$/QeE23N:b9(J.\rm$jQ83`e+%JP%q$X6CDS$f7BtDXC%V!;U?oXX@(Cn(3p;lP+BCbl$T6[`f\SVLkOTo\;Zq9qsgbMAZVI5Pr9G^M&iJL47+:#l54\aU\hH@j/f-iZgXg[a/"QH&c`YkMMu%@F3Y6h!sR9oC-,8fQJTjO7b]C!S1)=48tXY\o$I%0Xfa/),gh[qn8Em/#siQ_`WkqHhL/2?5'7,hp_G+3Q4`MnVeLg7p"aK\eb<g%'[\`4mqE6pHo]TmAjQHt@B@Yo6"%_3lnG$M\=VN3S[6A+ps8j/b_nF[FjHNG^O::4JIACC:X.N6SV[a?rqo]CfPo"A^OHmpJNdnL%o"X4N(KS-FoB24Fjb5ofQ`'LBY/'_nVbaJ0^A^NblIGhl'U/@;&)UVH>KXT>kg((UT4p2_IG;NYE;3,5iRZTSQOS_r1`L>Io(RA=%:GWr5)<UBD*'Vhf#TETp%#<.c)p[++^Vb$c9XE^'he>&tVV+e3hS70Ope8$QcIot[E;3,5+fqGgS)Nk)B#C1GJ')^9^65ooL)7#*%^_$6KW-e-@:$(-e>`bZI`L#JoTK)^>A6124H5T,bY_hl7#IhEHe:)$iY^>1hV\&lHIes]qo\Bnp=57jur6<EW>\'eMN(:BOn%6Oh%+Cjt0o*=/uj1LX&9=M*pSi,B8dNDJQ*>l0h3k'p0s8$=lGOFbS+BNi16FOQ"g!uDnHL6k^r*OjIh-\6SVIaX`)_(=Krc7W'Q[W+5%Eh_/m[@-FKBUC(&\nG_&^$:$,h7.YRT=t3YNJ"k;mU(J<g[BU)q<d9>hEHWE^?DWti8""eV0d,3DY`MZ>F4c-Hf`gk?iKiJNJHVT%o>AuKg])V3kF[13]]S#4[iU%4FTq3'4kl+n^3T;AB0;8>^[]Qmh`j="npeCLFiWn75>2"erjT7?kNf9HWW,LS&&-aXa(KVPq;$\D%4(gdmErFT;2nqS)o)2@F^\mbSG-:uDnBHRjYMJ!I\uTI.n'CuSpK[13np,_rs62ZDO.Z.fI_N/T?LRpmnGhi;h7<$^s6K(/Me+PC%FCHoBh/i$iJ*[*gDr'.?eaMq@s56"dpYh/pMflE,pn.QGp&:!o3qRoFj6iDKT7"6:IZ8O.h=7K3"eWtUFaHdK6[H++V=)mFZs<YX%H31hU[-Me"'&8WsE4E5@AZtltFq8m\ENct+:5/%'5^C[mg[;glA(*I"0Rrir\Jd4eAOoI@/sjte&%*I0gg2FXL'H^;T=:'%DMrir%LI`PrjE@$]1Dr0.f_.Ac-ZlSDnm2X94Z#<.49Cf/&tn=^e+ihR)P7<V+V8Dq!5&i&j)B?^$%su755DnE=.oRu3:O08@r^Nfk1K.Q%R/K;HGB4j"+3f0\pX*$fG<0#!![ZANqheF#QhpJ9]cY<VlMatfXrW.8=<cmG.=G_,(@Tjt5kgdQegWgg8SPdj`sD+lcF5kO*e:nO%$%";t#&<Q>S/l9_6FQds/(?#DQ(3%!j;,X*67)$lcM/u::2$KCgaOf(E[nGZB3FqoR+nM.^=9=7=pI[jlgG:6%]I][?:qS:"NA&P%K3mmDjm8g-dIYi\qf(rH]%UX*V]^:YZVrr:c$%-DoagdWMAs>lGIX(%ZI`fVP?^0`69Pe3N+t\->K>a>L&*,(Fafm>SD%RS':E@o%T?&a`duZSi:(^,JH#:%jInk!Sc3^SI)UO4\##s=5ZBWYH8%Whba/:kl1SL(/`ZS$/<mp5rOo,EPdks[/:@_"<'='3/E,o$])^[,M%Y>3tB2=BSc^q@SEp*p8`a8qE*(6A3<IsMn2R04E:I;OCJHbP1lJ_go2D!L(ATS"!EP6XRc7E/*hbHmFe4#(6\=OIu`pl0Ia;hh5t%A2T*L9I(dNUp,N$pc.gPQTY%Nk<aNDf(4RA9%]'$:Z5nSg7gsn1h^0jk5%J_[_2&C'ZU.G93HhR!u'C)KaIFS:g2ah^#?Q`Q"7qE%f<$`h625L8V]^Gl[=5=clE[QS!qh"AI]ATSi#F@HgQ$)//=h^l(UpJk/Dc+=cUI;lhA7b)(41$?Lud%LB0lSr?U=`A\[jk:Yk86*%k)'U72<`sDm;C#!GC&hbcZl(T>&b&E&+s7D>K0F]_0<m8q\e0*[r8rDADb^&(X`H_7pXpY3L07Tf2(QB$JLK1VUs^60@e-F$s=Bi%Kp#4'i;2+DU)OIX>X*kqqAZOFA1jXtS<\+513d&CD(iMdGN/A&?kGK`m_ZpIka`*Mf)bOVKY0]g7M#^@/ntR)BE3JK;Wf\RkiZM+%IKI3R5+SPD_6)%Fl!^c*B%@^]9:[q?"56H!KK:-ak4r2>O[JCRZk("95*iFDX,5&g$(^/S\t+T"\I&n=Q?fXkG=\-C<F$uc'q"1#%K\#a&6J1T=bU2tAj#7BUIX4-f<bV&h3Uft?6,OZ4mW)V?IQ]h8&TW#@SqPH.AaXB<ou5))gV.r:5IF7;qH)sfe1Cg#*4o/QTS9VA%ELh:MIP#+mV?q*#OMrtMK-pI(U#8=URgJDMDK.3(*l%TRa/*hd9V=\"D7\Lqb*c)]F![O/rMuoZE]PdqapEKmX5=K6!%*uL7An"[%5R3)QO,hZ$+a&X>+cpf:3stY?kIU!i^ocZ6\k8')g^#bfZ@9B+eRck#+d7_oJ01(<O\$?VW*'/UnG=SIB1#^*r*EWXD:&$P'q2MV%JWu$rQ`DVJ9;de%/PKh`ps`AjETpG9V1h=_'A(5;\;-ZTYn(pXX2$Nb%3(_^SH%GbDIK(aqt@T$':I<47WAbj(LYJ,BQm/%j<>8A%cL%6ojimi@XK^`Qe:lk5"XpVdV+Umm_FMEZ&uiVZ<]4X5)K9FNW,e:rJbWj/[;&DTm9iBFp^2,N,BGQ$3TB&0p=WJEmTKnn2b2XF%kji?dO6P[J4nN1Uc33_;5`mlg"O*.#VPV;Oa-djbqicdDdK,\T=[1H_K''O0R)nW55K<Pi`m^"pobgS-POl(H!N_!q6\MQ+q<>7O%Yj/,Shfi22j(ku([T9uHd`HVV7!FGKF!F-J/r?22.CoVP$(!(a#Ai-sdmf3)ORSRs2H'1#VA-]f-:J#-5->N<+%D,KPU&]D:T[N:%n*rB8oM4f6X`:Z*L/T7NXVBT!eQMfNMXGC?0^6hGmj_8nHLXsJh>1FL,MC;Chgn\t%&N.oCcX8Cc.8MK8^RP70f]".r:W`O':C[5%7WAd@MTd)5.Hb3&Mp"SKDVuu`&NPs6i[S#JQ?X.>f2Z0hAfbGAG;^#n8mbXS\pnS]>A"\G-P`e)oVC#;N]p4P.qSI[FM=g)c;'$!%N>&!-O*f8-lN,iQBp3,jM6K=1"sTl;,A4q_-;d0GDG/Y>h)D8?DA'nkf(399+H#/&gDLR098>\94.o"Fj3s2=-85]J/kqP:+tduF%F8V&[l2)&cdAj#pcl$H`_K0X;5^i(t;WdreLc!HNM@MtC(]a9"?KoBIYVms(=1d%g=0`NLlLM2QlZEM<=_rfC\TR,uif69c#r6^C%Xdp1s#=TCi]JHK=$"D:CbDG9RiJ&>**1S8cd#QkoH0!AuP8l$L+2Tn4$)nGF^k=D@IC0-RLpju'oP&ELBc76+V`J3CHcK(8[d,;h%AC(,uXh^h""$/Ep`Kfj-Mu]TcO50:651<"5Q7c6)#r_!t:d9PVimW>q]@bta-#'?%@d?9d0ph2/H=qVT\E1/E->3plXUH?E/M0j;%:nJX5n+b>Z+;eUq+=D7A?g7`6Oe[Ys""NQr;f``[@dph'I:kQ:rWKmt#qm/qTMBY3M8%15F]gT^#[J@3kc-,QY5c%7j5uc4'"a[3%_B$7;XeW]4][XoY>2,0PqAI4a(;(&@7pFjp_'Z@LBm)"KYX2h2#<VOr@o2C]h8eWCLe3@"=lX7f'"CooX(_Y1>*hAKJC\B0,R5_i%"mT+3/'ta*=PVl\MF:VSn=@p%K*m11X%8Tr;HD]LPV*G)h/-844O`t]"KL^'_8s=lk*F@f#Vr@i%I<L>-N\!8f(iP1.>thNp./P%%?T5?Jh?UeAf8aCV\0I&V*M3//Ftt7<S[`0K/K!_dq\XEoE^ssVRK1aS+$"!=1_6%XLA&<cWhH]`S366uXD^EUT*oVi/F?DM4_b%C%oB+EbZ4KF]WHjH[RtJ_B<VVr;W?(cI^_eheRIT,+S=.G\<lPD?6&#q7B4A;b;`06t'praVM&G/D528WQ]8[&66GnE\5l4s5:PsL)%!nl9b<bS&g=C>`tVaB_1GO=!D^C_XKi&Kl:S%rY4#IMWJBNbPIJ\_*:C:EPo,b]@*nGji1H`g[;5RU];lF^;ol1A.d49G34[<6]d%c]<JT-Q[a&FI5fc5crW%`/>3[L,^K=(piqrE8l"gY-SSHYma#KYLl\3Q.4t/-c0i^!N7a&N>!sgQ+.2/D;4poXi%$q>iH?oEtF]'%FQ3C@+L4#H0N::A>(ta':RdV0:3@M-lq1hR@ubM\!=^%S5V4M^Fe,V7NuOXaIrn"-n^3hO`:'uu.m7LsMW9HD42>nOf$1jDJ.4Y:%.)ShMl%fNG7sj"M"6ULB==9^gNPPV%<i2j?G+bD715Uk3"WuV_"dr&9*n]"-36+%I7*[-jR)jTp=lrV*OeU;KRjl&>Y0jm;kbLT8%kRCH0J!\\40^!j)_*hmbTgn3M:IF7MOGKH<hWdTM51KT8P+.X?lUZo?EH\4HC^?c+FW$4'dtZ<I;n:':'+,.#?&%V(FE&E8L@HO=%?3@`5@*icjk(NT\G+FMm]&(1cNLg%A)<o1fM\#mtkjQl8'^PTh++o1fBln_+3eP4/iM?R#V5VEe*q2h/[n"J[35fg:H\iq:/klF"%g=cXd'cmr(VG%M*JLT7\U^KCAl#TL[]G@/9U!Z[Oq*Er#T8p%UO$Fk'gc5BS@K,\9(VJ!$J^4!nCE-ht0l8stCbUW7"SW%CjT;!p%4O8GW0OA;Y2U:LlHO$-oW!V2aTK[XLVKY+%H&,;tqG-;$^sX"Ff;PjflIA5/--;]pkH8n%hC%s0jaNNC8r)9smQ5[P#Cn7SA%p:Q%Hj3&te@!C,c*21o8[85<OZ3NET_&ZG.DXYfQQcK(N^BR%p9,Q*+BEk5Yi,]eBV`hUDrUk3^4YnCYKq<&&*Ghq(TJn2431&#;Xksg%.(3,`l@sZhTa+d5bb-%I*U(,$/d[moZ;q`!VNd)lK:N`I+g9/N_6:4H4Q!SD-`<V9gKX`/$>'[(7$5$`3k#s.0YQ3Ip4Rsk(-[M4%E?pnU\ir$GZuk0a^lQlErGE*3?%EYpmrYR:RbA2W'+ZKI-K5<<7*6C+)?Q'iE^uf78t0,o!7""SjfP.<ln`k8!"MTYSaX#31OWPt%X@g#Z8HLk]m+=>Z#4SVCbm\W^ZkLN(j/dV`FoA,.$[uUF9O7PZZk,,B:-btS1Xj:1Hp>/>M:6j?>c5Wtb/VAfi9Q%VHSoe<BUUn^%`/]<I-0dmQ\[%.2>mYDtI#3%6;q&[Amc@D\0EDAH)DVt=Jqi[$DL*E7iq[?J"Q]Im:Ks_(OiV7`'Ip]hf9o07,o-K_`RU>5JP?@R%ZmlqDA/7o?Z2/b$c>V%hG=BM[4%F8t1<l5ST2J9@"pG[<C#R"#(@TiLXT$2A?tQk[roW4B_V_rge!u72'1*0eO9]'H'uJSDR>8at%-,OBT>Y0'A3)<B>QE[th([=&tO#E(+8mV1s)7Kq?>'3N.3/e0faUDR3ARd=YC10?WdhL4,82V#6?eD,#d'l;mbh/DUOH]&T7@X6A%BV!];>T:K4QOPMVA0jYQaL>/hSjOPcc3/mC["!+nL8chKj^3AG*sL$**j*fEY$L_hqhW[GQQH4CFd^ATHI";_o*Q&G4Eb1cl"%NZ%B)mP(La&5$1ZWSs8JBOu3C^%q3-E1Y2:'XZdqT+M>W]Qd##>ZlW+dq3*0@.:oTKRjCIRFTSc-$?g:Nm/e]!N>dD%f;Fg7[gg1epF%J?eJ^D0lkG%r9,e<rHPq)ce^;1KYp6U&C5:kGMBZT?*hp0o/bi+j&'P)"!@:RTjS0dpR0)OuJl=b8B%-C]$P$WjP>To@DHh:18D]%mEj0>lhsCg%=jhm>g(u%nSQ1T1I@-\&J9G#-F@pr@E(M.;k\=c;mf=_(UNG_(1"adC&D9>+==Hf5:^8J);=KL?<5IJJ%P"L)sbt1%bb`KZC,V)*bU]fs1Yr.'L@P!`Z:7*\d%IK"FHR+@TS2Sg/sd;U^R_#mV:1Mt=^>(+0mC'AUbP1Y<a^YIS04F5AT]KD_:S'o0Hl@(%"gHJc0pd$Wa%usq45L^MR,dmrkf4>gCZ@ZFZsTI]hAl=?p^Q*bX\o8#fV<lB&p1mGi"VC5'"%?Xq(6o--X3P@2U3.!A$2'*q@%MO%UQ:ZMTQ*#qJ2bNp6qm&:)_nHqec]9!3H>Of.G3#HKN?eK;`SQA9_R7f"5"S]a4FuG6r9,AH9aNi=uuk\/U8J+FIf?W)bcpN/PQY/%4"JgG"^a*r$E(g)6D1@0HK5L6S\\k`$]HlP5kaSt'E(;5f;JI+07e`JJ.Q5G\Ia3;(Y5@%[^.tU+Zs[<dfZa8p$;ES"1.`DIo'pP%5_W/\^+uB7hK=iJP$37-<76KF`c"5b)S\3u+4.jG5oi*P3udC:$a8HHcKslL,n^T[Klo:Pa&;7UrCOQc6)g)+?5("h;\UUDi9uCY%A`9'Cmh)-OOj,%/+YtSoRK:QA9aUZp7?Z@'T#fR/)$-d\CWBeE_5]O\UePGZgSD*5kfad/d?tYOUGGumU,2<_p4#J:Au`3jDPApA%S&mc=p.X">@c<a@P0EF>$*@.665H.!^h\n9?"+ZZ>\nJ]<b+s!(]F<<psY<b<U``G<URY@#KPV](KOp5B23-"cCE7;c3+.4*UIBe%Gs02LBJQ_Nlr0R@_3nRKn*?+F_Vp.P<s-f#N^4\ZlFHRu9k=4"b;(fC##1DP]@uS'O..jJF<uX?Akla!%4AO&9WX>p9X%rH>&-k!%gZr$=A?N"pH\#Mt'r_P41*jbeT!FhTkS9J)',):('A5<aXJ#i13,X!UNkbt66b-S-:?8R/GVes?+e6.gct0ej4MF/J%/4qn;28V8%pD[p]"A[n@k'"dbR1W!8W1+AXZ'*%]RlE\Zisa[+C2jo["<,Y<\;BTt$)(-/N(2U@"P1)>'sb=U['Ef4!Y6l1aX<M7m9lF^=V%qS%>s--_&Mq%81mgH.ABs/TJVcU72O:rj!<t]THd$"f.rW`7SB@rg#J"W*2=RhjZ*3Kkh*ot$6mb5CX5ne#]@>]*_fWn0lI14,Z0UjH%SF&)@feZod8dZB1.1L\Q*=h"h_l5p'TKUc#jsHpf%WVP[$c<!haCuN!,':&?(*l*ZK,E(JL#D1cDONH1k@2OOqUuq@FP1lp.4Ut9%o_H^ecPSG6"<]8H;Jj\_+Uub-#+a8c;JjilT)=b%B!=3r2U=X;;Tpa^h?cI"_^scC!LY%i?irj9$WO8sJPEf#+qE!*p_%f?!76as%CBHUW!q?Q4$jKiX:5?iIN1^\31^U_eLu2J=0<b$I8RgSI"'oVWn><A!Lb#hR;$.`&P2%q!\.(jiH>8d>NoVCed)qTa.Mn-M?EVY$%32B=;%.+plG9nu\q/!Y)r4P*0#.0Kp-=f^aJ7We,O"[\,_aNWQ0ZJ&=1<"e1A.'@DNl`3>fF"]h^msHL:rlqKC^_dT$#Kl(+\P8J%F;otZf>/BR->7cqjqr%Xmaa6[JN5'Q=2n5K`:(FBf9lLO=N<7k%G_G+,U1NWkL/(N2e4_+PsiUl:4lTI6)No?Umt@@W+Jfo8i79N%Bo",pK^G$04%qF0H7/0Q42:[O#<S8TLYFP,.78Pn!6>"cY]K67o=Gh*Z02mT@8DlTius0X%)c8oWnrd`G.G1:(UHcpE=^0ccg-_V%-[<cA:]%,>rF\:Q*CIR;RrQ(E#f`VlVgCq+9SD0009_$eiXnCe^u:=>)k\^XFa_9(8$%F7F+!"eB-=?MfbN0nZO+hk_B\2U#&q(^%*>uZZkA94t?k.B%pOQKKJNhdP;+88DeNIQ9b+/WBqJeJI;Vr((MVeaNnBu+Q,\Ah88=UYJ'6,45H025<1DUNl.7VZ^A2J:d^4/DN%GUiIpJWp9K`t)qm3eSQ#VD5rI8pSZ)"=I@-7V0atft#<`X(Do0'Oed)IGtk$Dg!mk_@<.a7oOL90j;IOLESoI3OKjcS;]T#F7B?1%aQq:)B1"Fs7guKbVuR/KVB@0<+U^R%!P/r>2r[ZT1=CA4$]$W[Kg<p-0+)Z;=j(-)%M%<].Dm':FUIT2b!WtMN`tdQTO(e=h;RFU%#?7co5U[O;Q^XZcCID!S5mT/56bt*lc'<+d7K>[a#6^IOWb++<a/K9#+R@'/$Z'S@38(Fs1B(5k%PL4lM]j2WM,%G\>`'GM408/l%_+kSAK'6E8)k>,Xp]Wnr1-DV*d2@IL!8Y(Y,YMQ%*g"%TckuuJm-.pOc4-_pjdbjd2hLE8X<M$TaXbZ25mL%,-+IGM$HUF['WWRf%p9og3836"`=TOcinKcQq,M/_`+)2f/r)XnR<Jq@!+Z:^2X1Nam(uGHsOVV`Y/XR%CNaW8;dYCN7TsP,f[]lkto7c-*=G2?-71<NC%F21mL[fhYtN)bPg&m4P$,JVmhE'u@PW&p)\P?%^;i>Otg.i'[6jVL"e^bZK0jq]hh+MHV`87'him$L-h#[eO-P<R[]ejR_,ZC4Q4%BEt/G0oCn]-41>S9k07rAbf;4cbAl$IZuK#(gS_Ak/HG4jJ=^X#lu':MO)am6JQGjjr!K:[Yj+\43OV;)4#)u(.8bg@h>GeV58b'%G!tqS?t)W8mT[6+%o.[C=HJ(*F'pRP@p9u,454UPV'e8C07b8J^c5V;O]I>T5i^M;:1;-BP"5!1?E9=s\[PcSrDLb(:u_^/M-E$o%[p6!`8j#)C#.&n(>.LI-TE^+T?Z?(*^LP*2f\]R0VG"@)dJ-Useu=4$'/:gl"0%QTX3*R.Ui3QUN`P>+[?[:]k?CR>F*V2:'Y[\W%;\Mjs/s<#>=!eCJE4;&'CcHi`)OE8%]uBf"n:L1T`8Y0>R/[SjoH"nuC1(`=7;sCf7gj;Cf%VSg7TN4$o.95uYR>b1p:hIc,kqat%-(i[?oX_5G?RM(W;>5Em&;8K`WIMuIE5u?)!ToTT=&\^BqSsi&]sHoh,UT%OfHcl<"$;qEDsqLV7OQ=TA8P?-(ikbmSAbXiB0=dK%cT8Dj/KK`QB353O"?19JlGF(dV\(9\^:@dL]&$HkGO$(JPRgN_o?A=A^_@DL]0>#J+=#+Ujea9;T6(Eh!n-gH+/V]2[*iSX)&tmc%*elA)p`h>j6aREu-Aq/?mG]RU_?UQ"S:-I(D'/"el.R0;lnG`V&g.ZRluuD7W1E_b@7WVEiqr77acXVj7jou\+C/1@H7q=eQ&ru6%`CF$3>VW18'pTW"^^o',P<3au@88RgR%U@g`o>X!k/sIp:pN9QeHCWVl%D10:BfS((jLT4&4l8*d"F"7+k.9@[a&#toHC+rG1fL:%_`c3l]rK&ERuKrfO\8`lU-9^s"?bC^;MZMI,h2C$nO#:^#^&g-qPP8KLjAPVP!VNee`cW>94JsGIART:=:,e<b5T<$""`'C)b+QB%VSb8m=hB3gp]K8;MB(?J%K;H"81Q;`@.BZ`02?Y)8=F)T"bLM@6l=&OUf>VL!p1^(O8(n,)2Y/37O%]VF06[g0uW3"l#4!6&pY9j%?]>I*l)17D:=<LU/k0epBI6Tj+2blF#Y"<UOq\>C=)Cl&Z`QgD/`\N1M&C=QJ0%rskX)XPP+43e`0bQao]^;NfdH[]>DP^Ym0ei;%bQ5bFUt:3^]Fb4o7Nj(LWSD]"aV&15iOAu\._lf&O?8p*P8Xs$bSVTD#EgfM4t7qhCG<&.!XVV"0//P0Sn`!3S\]onC+F&5.@/Jg%@#11(0M$?)]He0cLAJjZh$b<%=Q"YuM#et((7]q>WMGY,7D<jd'J@b=@]+i;`B[c=M!B(=QMWcuZ>X[#_Xp::S,qq[2=m#pMLDda%6'Mc<ClT.=7JeHHCeK6Hf&8GoYZRS/$ER)4?Bde\,Z6;u'+:@L6?Qo$3tY&+eIm2LeV_9qUs`h$OdX4D-)XgSCr-`<gB:@RWJX(F%O=;n??OUs%p2X`M#N$_Tp+kL'+\C<mmK@osZ2Xf;AHS[(4+107P7`[@FqhO_%QFj8-"4>flNrO))Ja>#%+6Gf1&bpeF6nOcq3*L`%N^?q+5@rt9WraS(OC9t+`?#VLW!5L<95e>n[*o0I?k^QD6P@krcZk4Y$?.G9&:T!,@WNBh(G>k;\j8q8)fh1Mk/7QuV<UM<Fhg<1%%VC@aPk(NM_n56u6bss3>@3nV3@./#")BK%Rt[^'P<k%;Gcj7a/4u/b],hX*.%[;56T)etfe%N0m,a='0nYhA&9R?W'rsd%:%S`[%V\40J%5KCH)&RcI5Z.e^a7:BYOBi.6pd++Vm/AGl[]-s\,#7hjMD^HNM4u#EBCq9fZ$k!2^u$EkZ10roRI-->\SrWIn;jTUQ0JuO%;.]#_lOJL&_UO!QFE1AD7:IF8L2bn_5H7gEZ`DW*/_!GW5@r)!oE3bV37D&<=o^CH!'hkYqT]:i/r7Z#fdR75LlGLDNFTo@eg\Ll%'Qk<SM.qe/?L3@1'LmP-k_.6@oc+r\5a\dTZOUFIbQKo(36NX=_(5Um)[?gfTc=W=DTG0JXJeEMU<jM:J&BJapB1J5EGB2jWm72j%WPsZ[hZoMdUp>Tg!:qt*68f.X(;oF#,d5-OWJ8_N:%,ZDlC]/[8l,Is5PTd\)<VHha[VU4-9l%=^@h2iN@4ud.jnmpZe_NJEi,g?%UbQ`)Kg%gU>Y/Dc'p]J.6Uq]kU2"YgXti\,7$j6+^.6:m]*0=tB*l9D<+?:mR0Bu%,'Y4]YY;6pi#DOuJB51YN*>`mSV*`GV.pA6%E,uX]gBYLW.%%gE*e4t'K>[s-f)?/`IV=V#R@j9DPeJ3+$Q;esT*.r&#RlcMd03>9%cp[>6M+Sn@"DC@h^2EXL=18uqmX@b%7QDU%<VAE[Q\%%ZY585Sg3%ts;VGq/SC/P\Wb0P5&(SVt6<;KX0Zb;_&?ETFX<pGs$Nr_Q2e78!"f2BYeFXp8_CeSNZ<5-[m6+Wl[FM>`%X=U$Heu;r]Rhq]Ub9p-nb6^bSJeIpA:ufq+P/EUJj>`pW$r\$N9.&E%cjp@<hp9!YDP:AF$-pHT"C;(>#>5&I4BdOSU,/X\"r2HV%Dfp>.$V!o23gpfA"Z<WM828?a.Z?AN&(uld&#tp2nc=kPUlM`g&)4*je*N`X*1fJj#=kKlq>lKg8ZCNO!p>l#EgEY]_Bu3e%@&29%R.a("kl\lHOa2Mb[*4_`#$?qsVGOiQV+2tl*_LXXd]6j]ZN2dX6g+e]5'RSeojk[#4!.8',`k'UoidQMJLPhg/#d>,NB]#Z+_dMR%(d\uT>&FdA.2YE_MB"=2\VD2X*dHR,l_7N?36NA_&R*rZ*Z0MX(5:IU^B*'n5_3$lNkSj`MgBX6VCH8R>XgO(7p1Eb1A(rEbX<_Z%o/2e#F\[)<pf&%)TN=s"BW4iP-X]X/i(SF`#DY,J0<7Z[2/tb<XY:5S<#Wc'Z4luCZ9"DX04?@4F-(m%Pbe\[^kpa.cO1\!73X_7%-)gL@TY;qJMX"kDlk"`dZeNZ<Y1HcrMDXFb)XekN+@8^b&.-V,A2IM8RNYMT-.PIgA0hU-:fg6QLu]kM2)02NFjg"T6pTu/-/jD8%!pLVcW-X:XfR*6fU[M:t!ejho5X@cfZkpB@U:OLhKAfa88+_WI\2hm^)*EqT1iO8cRn-#FS\&k_Z^p9\ZK!eHY9gJ&$h]l!V)7;#%KlRcH[Rg*`6%Zsa;T1QeJtQQ]>:Gta<o#A.1l%`H<Zg:9G'HAC,MrWnc/Kp$k_,moVBZ6QHHFS$]R=1Z8OmC]oNpS];1cGmTduL)%q0m/>7)[J$>m6Us%ndf1ReT,kY=9dJQ^RY@epsL4'c#%Xe)\<3(T-RDrSb]MDjH*S[miRqWU:@l"^4PTRF"ktYOiZS\X&k,huh&i%`2mWKb@2#<F"u3>_1$JB"kBGlLq;W0/>dt"MS9Ck=U%FBMg:RkjnC1giXoq+p`R!HR3BcQE-;en>0YUV%9Zl!USC(CpS_gNUNAng%M3*GV*f.qc6VNG.3tP[lUNQ016,(lgnAW@(,M2`nY'R/ki1PY"BK*Me)@fjlPtm/A'(RrPeNMIW%\JW#W1`_rM'uM>Fd9NihFhJ;%`f)5ZQA,ae,%PX3GS"If(D-&i"TeOu4VUJi6!OXu4+p^nn`%5YOs))0$Y(suc3_ScK2.U[,.!SU(Uhs@(8Pk"g5=dEf"qTNC@Obm%pn86j=!+ip'9p!Q;TSEg?>ScQ5N;B-:B'AY.KdJLs7E#F9VnF=</&()Q"$AZ?k)[JFQh)9>32>OEBsK\<P>1T>/k/BaU5s(3,>%X%OJnY)bpbEr'.HOsA4`Ge/BF?5X\;T:NiN6(Lu\3_cUEbPL`Y+M`rf%e64J\K6b\bAQ#I"3.pgb+-BS+@/N91\%6E8=<bJ'6rpq#J%(`IFp2q8eU,676DAqe`N#cXaDBg@oWopA%8%edDEOK(N+Pu'kmBW#cDmN)?:,Xu$,[67P*biIm=eKB)r+X&+a0s8H7/P:g3Uae<]%MQsDQ<Z(Ho\jL[^NJdT*.1^`?.M:p@7is+XNAV$Vl&;W9Y\42#*u@nE0$$9O<5=[G@9Y:!'0tFeQ21E`@@>T.2ck5Mam^URg@_G'%%(*ec60L5V9FI;f&9jN`T*p)*=gg^\K@9c"(8efjKK&Z<B`X6NI!Nfc%"1CF)\'nK=H8GV'Q]Ab4^_[.MjoZ=b#U;W9;Q5S$?cdc%_DHlgBZ$kU1_q1u,tO$7W]@=iKJ[4Lk&bu,(3*4)#n+\&&VVlX'"ocO@;&;5n:GG\lI0I[P[Vp.pJS>P(KLL1naP1eNYZ`P8nP.M%>[)'e*3^H%fj"[\)!I*7BL=Cu`!n5uo[)G\oJ)5:aM*XIhu7TO7(XQOP;0bNF<UBCZe;ZRkQ+4^'(g/u?jSa6kh(np!JZ@`MU\YB%**>1N+RTF8%<:!U^<?(onuU/nTo^9"(R%*&l&Zu1$<\^YrqYWR\C6/#OcTV(U;`@=$>>]q>jCgE2TSp<`%B>[=@fA;%1Eq@he_C6%6=$%.T4sFuF2=SQ-miP8pdkWnbdWO%#CJ'@5gp_ON)dUSM@)lpT`8?);7RUoacE3b8HIP<()[3%<VE_!#U7I6?G9hUek$d/-XanL%psM\B;/YtJ^C*/tb&p$45%#;Xl68G^BH%/.%PZGX,6WZ`";Lm<8:`^^&-2GAK7;bBp$tBpDh1fbon*=pQnHA04!\(J5_A5k(9_-d%-I(1B7N04>Dc'C5!.,-cZWJa[`&k31C0o+Q<=p+,mc@8%gF:-6H[`C+/VN.`GT*oTBeV-6!Zn#%4^XqPUipEH_]B2k];C%!'kF?K%h<ACR(m%k(3js-1=t(dHOTOLT*&FI#H%\4&g8`6lR%4;]3n:.4N-V:;'7hA&]DtWddL,IRjlo_i.&\$OC\2\Qj\#*]-`d"cYB:$G%:R2,oNbm@#!>S$f^i.I!&lCBdGc#7OJLrVQ6j/15>BrguN=CF[a\k'63=;+E&J5p!$c?r]+WJ?e$7(U()sF6@8OT:+o%^PW;DL%r%*;9kJ!hiabf5UlKdWUgc$6`NMC[t$aiiXb_Ge-Y1Vs/,Q2U>nD8AY@7![Gn,d9+'32(`8kEZZ[=pi-<-D2:_lO!7Zp&RhHOmEMXr%=_cSQ^"sgN?*r\RLN:*RXuN.>A"`-.6>?Hk)$[i[kp.=.S;2kIa#'leGa:HQ>/oMGqWOWn,JO54bnu'5=!lqdO@'/$RQ"^=&2Udk%)JB9hBT!9VEn@XX0TK=V%uciT*uKkQjN*<//:`i$SE/sHh.(h[a`?8D7H;=d=A/_eW+"hfje<$)Aec"#e=*e(\hV<f/5/;8at?KR%72+?R<tbUq'm?<f2-G3<@tbbWP-PjP"JQm(YbMCb3+H)&4GN+?UQ[YK;PV;B61*kAZNG;&G^88ZO73Z:;2SLs4-XH6KQB=$J-F1+%^U8cU`ur@_JBhd'h=)*^&nDEe80!88?FlmT<AR`<g:)IXH;_J>h`2m*)-J<f1W+N=>(q^r.VP]X.[1S5jlhHo!!0nqCpe%V+p4"P%ak[j@"Ud/8iS<76LbUZ=&dI6&H6rX35_>Yk\@@$/T!o2I*#KF0E]ZL[4TH%]2PCu3D;5[3"!Y2C/3qSC#`/X`$X1>D+[aYMMLgE'%i\6'jQeh<]hP.;)CO(2*W]]&K'\OkF1#s$]9EMPX@[W>71YrT`3,?2.b&WAP";f$sdK.E\$a)</67gS5H]"96:*X6`>.'9#TOKKn%Og@"]BqPqPH09!K"pVg`=I]@^\P<Y[Z4Is*KL3U0"pGJP:`,:/Lh19[#-hWRZ*:FcAC$&;e%nMWaA!ANd+=%:<UJ9AY%YQ<^`%8J%n&L8!2.P$+]k'YM!FjDkAY*fQ5rj@_LJA(>+8[FbB^;]hX<I:U<\F1mHBi4*NQ+iV^?h"H[tC_<,f2A%fNX.^=M2XX3<EQ?@0Wl-%S8K1(jYWWdH5T@Gf/,Blidi5O!PVKWnSfHr6fpcI-bH:n*DhT6e2HEpK0b%Qfl;&BTZa5e\;[WnCkC$GYg;jFG#X5TSn8`L%E_Xt%89Z>MoIL):pX^VX!TWooeKYN8=AG>Lq,^4K4O%QkV\:sWSp%M]]LANN!+=++h\!5/:)%Q!f8:(a0,CTu4#M)9C"T9>)n'^iRB.MT%36,H!Mm-t`:<-o*>,4]=39S9teprC<Zgukep]916@`#&I)UpNTkoh3N$md9sZT7;ijth,'RjTK0G26sPO/s+_ENs'`4;0:I;9N'M%A\l$YSAIlm=UkRp(fl.!L>5?]ZV`+VqJfK?7q8>#^F9Bq_ZO"0f;>4`J:PeI32/;/?/[GAqjb^9BdShU_E:\T5Hn=s75UaV:>_1Q%FF6mi)c*a[1,rH8jJA<HU#.iMloG+NMdT?PShVS]8.=M*F\#RT"_eeijJ.@*_F;Qu9n#Fs.^4eB0@@C-8["?qLEdn8(NOZVNsF#X%lUX#:7i$O7O@>g['Q_3=Q%<=pO0%<IT!HpNT9Q/je4"pXRDaIc#huQ2J7'G6n#eLQD3bZD1J!sC.T)LMgb'J$<N;5X0c/Dq<UhNa%ln*)\T%BJd3.K&4(\P>-J7^8j!![1gg9LGZ+Ar>s+C*ft=[lk9nfp.'#YT2*-:bEN!3UGO&nTHt#(/beO1LkqD@ig/#lgsQr5]aF%Y[jU86&]r@g5oMmLnYBDaG$EeA7%\DGggR\*Q_ET]]B#.h2N2kF24^W.k3#?K0]gRU]h1?dH-62LVbF?ga\tS!"c$rb%A14bQJ=$%_XQt8U#rJ8ajK+l`70n4@If<?6D/I4,bJ`&"otdP3>iO;c0Kt/UJ&lWg^a0,%.`uME@O]=PM;AqJ<Y`2G@9?#]"3!58"N.C;A)?G%GbTC<6itY!KXf*2,,[<PMps)qR30kD`<'!fX$JcM&ak3_1m0>TC9j)(IJQu8[!9\?\Qc.u+c8dHe+#lj/BEab]np]b3N9J2(:gK6%b(T:SF&>:#_b^m]L>PZ:6CB5?j6=/AN%:<'ebmkBT4sEQXruNJlu/(&OGcOrZ`4Gl4t.\[)G=\$PR&eUKSq#4Cf(<D]mrr<(IUI&%\I:\Y!0iS@`u*MIo_tAg5`!YOq\H.2._:1.csd2j\0:4TV5_g\09Qmj`/k<::QDdn@FgcMN3OlYfK`)EfcYUV@$@XKJT/&6a_jWQ%ONYLXB)_P#E*@(rRYlBpO-%Mhp]h>I^>IX&!Qb`hFb%9qc0u9tj-,lR.Z2@-?5J%29sOm=pD1B('+R5F+>N[Gn09%c^-u-EZ>Eq1%4OB=iQOk5@0asquOQFVR,R+kjZ?bN5?>e'"TbC:@0H&0W)FiC'Yut+.]tu:eZ=t?]&cj&aHDr^f>Z<`/?35&"EAZclhPS"sorZ@:%:-*Z_e<92O-1b34DA,']$1No;X*c7[7G_LbA@&h;jdr?0$/;DFZ_#[`Hs66J8[X,K8`iWmRgBP6\/K\phCKWT0WN6Q()5uN>F-)h%_0EL_]-s4#>[&J%A\4(Z0-Nk6>;3S<QGOj6C/2U5^T19Jqb+g.!*2A/;+XXAX,:pUS*D0S6'Pc;)NqYKiP*Q6V-W.>;j@Y&*!A!r%"o0Or=+_K/5bO%RTd&Y),pO!!>30Rq8sl`8jo.hLh`;-VUb9<2VK*=qGlViT=Oro*Z^`BsW^+)f`X[o<rPFE0>km;J#u,]cKZ)7B%HpH?dmfY?P*SDX[17q`LNgZ0I!(:c[3'sk1kT7-W(9K+DVO,Ca`Q9s;q;m%U(`2PeFS%qV-k'0n">WTD%Sr5.M?Q$(@&eLZj3_sF%1m&nd6P;fBp(Y5=]PU*!!()rYFM`1#A.k:6UU^r17pXm&\SVhq]]#FP4krdgCa(8s[Fjle(B.-L%<%D:J8Kqci*EBT'M0*_@F\GK%+YGE1>cnK%U(WH3jjhoa^"!:?'P[hLdQLRg1>mmP3&sW))i*MI;HQNpE.JcIQf;5T`6ajn43s'&`p&%Cm>`G)_f+80MIeiliu)gR%$(tZin"Kmf<k2IiIl5(#<QkM[:EaPf=DU/aS@gW_Ee5*%($+p0\"n]9nm"NC1UK._SCe^fB396UH+O5X*jQ5oH-@LcloNb<SF6O9%_.P1b"7Ws_-B'.dE!/);Ae#(HjmQqC/I=s>?Y]9ErI;6L%msABWYrSP8UMmhob>qr@UG5i:2!KW14;B'KW2W)7Kc6>g!?j,s7OLY%mgl%<s3p!]J,Q"qWuX6F)2`NK2<k&,Q1pmJqYfICG0f!SEW,Crl(`HPHL`AR4hl?C5P`Y)?TIXR49?iNLpE'MdbVU\RGfKJLr^OB%WrNQf;s2.%;,np\.#k$i9[<A86I6"(&NJ0pK>V#'94oc:%Tlhf&HiC=E(rTR(>FE(66`-==Ou/YgH@9]^MBD^lng60@AP"Z&F<sr%9NE>*&N-qg6F47VhD;4$Q!AH#"4]HtE+%`>Kb/qO+];n5-7b$tTjYr^8^N"/<?Uoo)IBAo/UE.?c`&n?VZFmT8Jt@,I#&JZH/Yk>%Z362Sbkss?%IjbH$KP,QU5fU[>Ds?<)j9h%HM/6K%.b"XR+Y#-W<R#_Jb=KuYlLZ2$l(@[_+*E`QAWeL"/*F^KVQN1<]Dc5!Od/V%dK8jUTOuLWT.1a%[?S'=;H)6bW`6&DW;C*>5`H]09jqiR/WMNq;9kKDbE6B4qU.(Q\B-+`(L>g;BM)Z?bn69:@B;LL+5Me(lBo@k%SJU+/Y*U?<.C6Pj).$%re*.cjC5tgpcJpA\``==)'[foiaK$!GKD7h`(FfH=Z&GUr9t.He_R!=/Hq(og':DS+LI/jHUoZ+]hl_UX%6$G6fBPF.K`lKVt>&mf@1bYh[<iCtN51DQSB`mlZn[h*?C%V>R@dhZGR*!8].(UOp%T*8TSq_SVWH*hp&W1Zjl08ST.sN<YK:tI2%2h"e"l+V6\fN04#UK/^oN.XN=(3lTl#<*u]%oC;706*F('l*sAhW(H,>*`,!3WDO>BY?eHKq)J%[&]]H)lBlo+e0VH3f?mIoFc("%6P'?Q+".jKWe&:D;QZT&J>a8u^"Hj%RZ`[2clE7g%&pE1R'_Jr0pZG?1pdKh?W.B7lD?2>_GdCO$=@40P2q"Fqm/E4U*t%O#SaTj%.IIg;7GVK?:pupHJlo\=O"=*A+-'2j:ofSL7D*>$H9=)6":'g5c>&9%U_I@Y>%Yo[]`6)qJ#k3V>SPh\-'+:,6YoZlO`cN7fQsI]%(+T*NBaSNoZGR'*bY/$/iPL5sS@ugRZsm)s.=<rB:0Ga4?>8@Lpm[V7lm3u4Q_mke!\iih3T%>j&k0hWR:#V"L#T[7ALET7S,'g*%=YVHJ`>ad'SYl7@+]63p@MRFmFp%hJq<P\bGK.8#U7B3;nh>j2]9QYj].PWp#Or&qaFYKbXf0:PfM]E\,6Aj#+>XR<?h(Fea#HLg%C=r#Y,@`JS`RrVK=f9MUZoTbFS;thjPurm%F,8Ueh>?C&V$qtYHoT7!O1Hp$/gjk3A/@('=L!'l"d]B#LdH4d3DGARlZ)qi[$X6_%k*;hB=HLtSd!FcH'joO"FI&pu6W&S*#6o-SZs?p7S2%np\1;QrGC[TX7dU7?Tc+\0;ip7gOArA`7\(;pc<9Gbh7=)rkscD.%I?8H%aL3:&Kk!LR"-`])^gI-V0YC*a`E^8kOjHN<#'#S*C*5ctB<d790ZqZ$QSn'-S;e32Qc"tG@2Y@V`cSP1$VZ`-(N>:Ahc['I7n$<e%(cle^<qPeA<5b[(R:qXX_VghM?gD1S#'rj4E=eVLa@oi8Ye5&bB=3GD9EsGjT?\j3V0dHT9,T=R/\-Pnj,PQNdR0F-_C0j9:jS\Z%Eo4d%%>0E+:#I7iT>BlDR'<Nt/EOj1g!-Ndan-2m*'u8^hbtDE`DQjf!&-u_Tc6i7Xa;VUJh/2#)];eu5l;e2W6tg%YIk,INAXTb%.mi\bj?*P9aJ#@g<4j]n:u,3a<tLP,/8"-^.5eNP"FR*A-.3WN2#Zj2iPlR`C/U\p9-KRo@M%?S8eqEuFX@AT,oOK^BsJq#n6n&8%i$=L%V0,pe"/SuJHJu*q]qUs-9[uF@&bE6$&qd2>+L>(o_42^DGb8Gd?<F62WBT1o(//8VMA<ZuGkEQe<caVbK!>BmZCE758Qne;%#u1a6HT@4R8bOlt1p>Ei'=$7;XR\u6W]BCc5j7!)mMfY;.-d3=_'fp3OK"QDf!g4!VO_>V>YhM)M@<QF-pj?42Mo->\m1LLLN!Fc%;u9-7_Zl'>1dH:%2fjSdpu2*Z6mZA/E9;SF!OFa!e!&E5]4VLB;#9[U/3b7XjW@T+@e>nF'f_<nSdE#O6k0Z.T^pVMF18@Fji&Z)%OuZL#jQFB_Cb'R<<O9`_2tWR4+nO38ReBF<V@3d&e1C3K8EL?gF=f$1.p61lZg,u_#)lDs;l2rE10f]Qb#AjOqF46FUA/!U,_?H`%'dXa(C<KM0UQhU5!6LWk$8Kot!P:fo(.:em;UO9u?(KFk6PVfJ\6.dkR)h&__+MRH!>SQOXHr7rA(``C^d'"P?<eVHO>P.Bk(+s+%gR8'N$1g3,QoCLfYQ->=OtE`k##ceY+f%KE-sX#,@CSV-(+$%o+-K'/aL+dEW!n8pi1b`("p0o0LhQHNC^RFH'cu@d%8V8s\2^WG%I1.1<^u8;"dL-up.jaG,.SkfB.,<5Zam(7b\#B!/JgXAaKA2%ZCg]M[ddN+:4RKK-#*#b'(hX:LMiTYAc4cio:]LqJ%,"e+$9;GE%ONZc<GYV2,^qR[G=<l3rJ-likWR^7+f,.FNqkNnOdd/DN?SJ9)Aa:SBS.$q-=qL34+68t&;=>t/See,<'96gT5^\tm?L0PL`6+s"%H:TbmTTk1@WERXUOW)bE5Oq,M"&]n=!_S>8kTtEteQ2,nLk?P'(-kj4":3L^,0G<bMY5JG9NRXL@nl4,>%\Qd#k&$F&Ch#6cRB;k%(oP>Up'-UDA5e/4WL^'gdSrQ7=:qiR27eXoV"[j9%7j>1-SA7EQ7T5ML,.eZ4dBufU9]aKS;S_DT+QGZd2$=+I'/8InYT*:3$ug/%Vp)?S6]-*K8,O?KZ:4-$@Mc!t0\78(`-hh-.Y3Zu$O[][CfPrks'UYX'`s:U>o=G]NV>.j)SqX0(5e#2+c-@6R3NafI@@:^!\j%G%Ao1Y0!QUt7fEI(?g=ciiRTnBD)?tnaBS-Mq%pk&<TI2%FW$2iV&9LU]qHQk#d'ES;I)_=C,q-BRe0]gM]o3UXJW>hCU<7N(ZI`JA%pQkbP?$i1UaXU_OZPoPc$XkXI3+m@c31Ze?QC#fPHj19dHVZ"S[`c*]aY'SAR>Qn_ku%<dSk\&kaJf4Eln(CmJ5T6*PR[4u<1`-\%9Q+ZGqDAraJM8@/&m]3t:"Ae_pX'0K9F3V]aQYi/[(E>=LOB:9*Aa1T.E&5(-]nbA/Ls5$?AmK9ZS42T]Id"&[*aeE,4<)h$-+N.%!O$,-WlS;9*\r&tR;gFOUjY\+o5KB!Q%eV<m<XSjX@Y^!SgDgrON)'UBHIY^<7nsmMNj?D+c8]77+aBj).R#($V+f74Mc[PQHXk-%X+dp$9<>E9j2`&#,(ML!]#0o7_0E3'$N)$aJru5?6hUrGE4i53$WCIZ<c;<?V3(ksE6<c]MoDLU2,bH,EXn=r;<O2B72/3oU1M>:%"@+"6$i)?t(f2C^A"/$'*7HX8_lMj3Pm)u#(Fc@@WQIO^G,D7%CLaFmbhe>)f1pnXHI$l/=%/N[*Ya_P-hBDu5q&b;!iukSf\K[E%LUDOG<FALh:7*n.9h(`'Mj6f[HRuhN+N['k6!4hc)5iiie87Ui$V'hMI4X.O%#C:oWpRk7W(g.Bps&[aRY<9WSV2AF,XXr,"i/pa%<omq$#u[QDQ4`@J"NE0$qT;^2=h-2afu)8s=^g>kA3epOa\%5M[;9j(M7L-tK3oCtXK64qjI*!FQW+MX9@RLdQegE9*<2/f"X+`3%Uj)#FDTTh9\8(L6jK3%mmK;$7jO4'iJ41'CYrJ<Fd9o4.X_d/OM$jDl'JR/&R`>tu.>p)!8nNq43n+T=r4C-i'IRI&'?!Jn?pg#\%duD*T\H&9j)/l,SU\lJc&X^u`T:[\#"nu(p'k,CHN,A3/WcQCfL:lb@($?]ihH9n.P(T4qeQu[t#F%?G1o(g(]):hkZF-B1+F*;=%Tm]F4g!eQlc5#0(a1@8P6pSg4F``Td<KoFY&t$jn%"bFL1!QRPh=dOd=KIFiFQsSV<ot.JSGO]>*E""f):OaH22)4%4:VA_:*G3?%>%I(*:ncK6!TfVUX0,;/1Pc=nFD:fW+P`enSBNRFQWVK5rbPWk9Mr1tQj=UpnqUC\YaVIF#`]5;.#Z0@XiZ_?8f/FT31=7)%k9L]%b3kh!bgGO/N89"LiaQV0F&0W,0.idm%^n,6p?[`L6PcSII[(aF$nn;Gei#KCL_n$oYahgs(l/S*?kUXLG64njLW[nY\e&*a5%$Q.%jlN1ONs`;-rS+V/TiJr5AWbZI&)9T)VL;@E+M3jgL+YCS7LDiY]s&t!!;Q5m`Oh<!>$)M.5\%abVgoP\B,K>+[h#;OY]"=n3elu9%q:LRmIZfRRk"U\D)H*p+e2et/V2ZfRCmA%mZR&a/@Skpd(7hmrq1GulPQ9o^,(k\rh)^TPQm\$-kA@r&NZC+0\CF[iJR5i4lP8^.%9QE!oJ7Y9+DH^%@9q.8C3/b1.;2_I7R0H]J5u^27*`YD';R1O9..>\(!C7D1OJ%IJ15a?0knqKBE!ChF@T(<eM(=GW3PhF,Q-$Q*%b,^!X2+^7FfH1#'2:iClTX)F1b#0PpkEFq*98X6&fU!Tab)Zr&erlf%cR;YC6*ZFq7KkI#E"jgt:jKj7*BDg<(h33s7=`JCb\PJe%R=3U0DLsFq0<16A((GO`PWU+S@:=dDVm2=+$kN[pG%7cpG%p\@!jHGf,rAac*Z,2hohDi=(KA[Tjokk&$kq!7PoYOracKX$QRQEs%b`XEN.d5(5(/I`j*GIHk>BQr6gpK8a1j$TVdK6(,6H3\"*`u2t10@TZ1NkY@O\t<b3C0Z?N0t,T#8%UFi'\MH7hpX1)Ee+\K`3?<%1<\Xu<b3!S0N$PB1+Z>%i/k$>3CJ`n8*_Q>S4:1q7E^8FHZ(p&]SeT2ZHbi!JqEi^V0#!BU]-0M.g>#ck/`IP<AnW"[;V2__<bg]%.8C4@oLs*rWgF0FS9;s<.%tgO/?N$3G#B_Kid3-"(NY$-#dPX>(%o5Y>&g:b=$9IjGTA2t>c:'s!H+'Kk]8=l-dmX#o+8pSj:qh"%+?--!1/Q>^C^;F[WhgFD6#/HhP#q-%!"p*O2iuDffoSt>'WO.6>8csFVf5")X:->2/QA!n^dX6Nn#-XP/fo\:%Cm5?DRGWV\3VYr%AIq&UU*O'bh#a7HS#jOOJ-;WT@XZ[5JtWUj4H;jr,!%LmbC9[O!?n`RnJTL(JMda?.R;5FJJ!e8kt]VNZs;Sf#2ger<25(VJW;LC%"[8]-h_iJ,#U#RI$)pq@TO>0Gm1BIoZT9_5V[<-,guBE*Be][%hW#fqWHKkSnRV;ap30IG(kfAc+G.eSE:XG;QH2IK,<REf%?@SL%Q3W.:c"EJ;#Wmf=035iu=s=S4F\DF'Z6r6]VGT9VL%1Ci[/c_3U#OcnVBmd:-VBXEPOF%cC9_%8brai;$U623ENT';SuH<NAt^5=%8i/%EJhJ=_9rUh[jVA"R40pYa)S\Rlql7oAGuL7fA1-B$iHcaM/.DV&7G7DeA9LiYCY)\U!_W?oa=hjk-./!4L'Td^eK1DbbhIc5%C?SPt863<5T1N`JP+H=h:m'Mt[;-VO"IB-Bpu,PDMM%r?OlDPjRN1HR,*!7^RV*en/i_qm1`a``8hBO6\OG1Y)A5`=24L4JiCh"O%Jn@G&a^LP\QZ_Ho;\c>',o<FVpo,7MK7Zp?,WP:<Cdk>Ib]kO.\n'S!fj>R+**+NhMrZ$SDiFbR/PHsV=d3'_)qj<l14DBlkno41%3BE'uWE90AEVoB@l0o(lR7fQ&IF`@:1qHs_H:Um/Y$PQY!#884b.A)A)@$afo6S*gni;#Q5r^j%'OD''"M/4p*3@u]Pr_?0g`bKq%N6"ap7%M%S(bMBg1N3R7&t[?fluT`@@J-Pp'(lZm]i8A"+ZpAlq00ej.VWGHeUN#npRo%<Znf\G>X6E:aQVLc&3%oH#g*W%+>,LE%k2VS:Ua^3_k6AP.-M2foi67jg>4a*_73E$2*F9c4Q"9O</@1@:Ou!I9N/DTD@UjCf<`[)3YhjE.U=NG2g;KS.3l.g>B,k/;?jmH/%[5.!J6Bmif,o9+9UfORQ]N=\uZmt5*5\+sT#)'"'9^o[>G8OfpXcAZaWth"TLe.,?[42X-mTDO1+WGKcA4\EX$jGEG-lg<\_Ckj\%VPbI&k_*:gSjk*R"S75<)tFds@e^[\q*\pH1e19&L@(iFCa0@SKa+hlB=ZD8Sn-$_P')u=)n^^&3X@D[6F(d_PMpuK-2&S>*-)Y.%;Q'-rCBKI]:j&#M):!c.QTT[=YiqjfZA$FfaBWcJLU&6&;_f*+U?be8.mmquk:J#O<@PHkDW.pSC.UI;5YN&j=a^<M^d)!%0*,hJ%rXTe?9uBa6nJpuL&Uc/1?@#:%Tp%?)'Tbt;*/cj(2NkD1@Ls,W_OH7\-;9O`RlXN7$c.,F>ctk#C*57#g?"'KT,)$(&BF#d^s*P>%ef^#NY5s!Eelmj+K,f"V]QjY*"4W*nG%UfRSI6R_TECablIua>"[I,Xe4>JE.%M':;Dq&UH8cI`TqA>c$VJ[=`YKaXWq8^9d#dGh%Q;e6m_Knr<6gV^n9'/NI*J4E/XPBXCK$5/oW[^aI]u#RQI#k!.T&<&`8X@rtP%Sg!C.n]E#,-&sr>l5`[HKDn#uMI3BOeHDW%=!G%WK[N&k_k6<kq.GDmJn]h'@<R`nei0p&i+4mC:,D<Opjit^;R<t9Z<H[_EBbI26&,=4C.U,AZOiu]^F>acp&!.=Al,`XSW0hGiCOf%'GR2A/_12O*,;.6BZm,YOk52b4tU(Bq3@t31MS6*8pNlCgQ5fm6c"tNZmM`a#b*.bQY3?QH?q+AA!ND>G0OVTi2e]XFKtX[18`&f%`nW:^\(Y-0">U'Ijimrpi>AVU&I<]::-&T<Q=`P9)"D=,mAp<TCRR8TR+87+PRJJ$j1n_l-H9X*1M*;G'u<P!mH44S1I]icT`WL&%)\u:='@]S_<.1,aA)s`J6n>@]^+abc[MjJtI^D.P?YgNc:9&i><d?VZ$O'YqYdJ_^8Z=TJRE-g>WV_D$RkqKuN2Z2ZR*i7LFTb3"%jK#U!d^i^8jB1<eQ0h^\YVB"omcWQ#7lYMM&Sk#RjX?3Yce6<_l7el"KqH8pOQmYo"#6en3X@!:YaMS2"f:@,1O:&Ta"(CkLGTG=%"90mTc5b#2pcuiAL\;5UD"*FkC7Sj3<NjRbe<A*sRH-Eh-!k[3N+]Cqn@>9A8'`TjS[aW]YquJ=Q`+V-e6u!nLYq$fe.q*c0Mnhc%]39.Un@E?8(nfP+lq<.55[BRbX:Q'q7e57?eO;YW*Xq`T/%@JFVO[U%War2C4eG9Uc'Lb^lVD^RYSfo#3kL_p[)9sgEu\aielXKU%RKeHiNc2-EL-37;)HDQ+$riQ\gA:./TI&=RH:3AE@;2OBpSd++-8C>[luL?]2oH7V<iimb[;E^Z][DGXXj^ES?kD;A;$aZ'D%K13%3IYCCSK41omFZhsnC(BMO+_>I/Su)=Ggl2C__.F">C&J.10tFl`0YJcRe`7HE77H>8R\li(gi0mNQ$38CT@T5m,Mb08U=iVY)k&"%iCcSUN1EcNZDFY,&0.lN"i>nM:6rkj;8t<M0T+,4`F[\UQW[DTZK,8)UYg7n'S>8V[2l$"XP)^'=]oJr4Z[MJ-<bu&W![;*AC;H#%j(;1]Z?Y.Z>Zi$1+(!!RbRUhboboV)LkpI%W.q\e#mCL_kb].c0<jG<[]hq>;?Gds9,:gX>-m_k-+Ei#)=bi"lU+Z_$PqX%BZF"&%Lk3Vkh-c(6"3Jdu"bK`E7>3I`"qci:=FQ?eH#[W4pHDRlh)Rk)K-4CSW6d_3JtD%?_5A4:/LG)O]"""tReG_8*\E5,D'(QH^iEPs%hM?P4N'r1N@YF3H6#m`C>0!1eSDg=f^D;gI3")a0B&o2Gk*+B4AE./G9nXjj6/k7??>P',D1cR\?o6k3cd4\Kd:KZa;:Ae@N1-l7%A$KoQhILQcgI6t1Wu+KF.#Te<4We__'q1OWa_T?4nf5Pt@n8LB"`UV?R2'[XW0o]Wq,eSJ7*Z&_OM.ajH7I<--W`5u+HK](('QIj%]+(HI&3V\@nrj_Yi+l2TXOk_NOqKh=KEJ3bfK@L?J9P%TpUE/-+165i%U37L*<mmKbq*r,*"6`+dUpM^jfF-#X]iFA1U.F(S#^Dm%@.&%PhTB5IguZVI.>(Hs)<W>h0oft-Y+E7j2`:E@G%fb_=a@c1Y?;8`Vq`eiS4.nh+t2M7KXicPR%DHf'VBLqQgV*u4%1=\PhP;b%e)E9!LY(W18n_%t>s\Wf`AT'"7lN(=a`Hd`I(%I2<N6L[mTUT6`@:)DC9GiZMr(A5bj%hNV_`7f@W"PDd(ep(Uj;)5LWp$I<F6+@%9j=^;*(s,]>?"Ccn8'cJgsSj,AsF4>J)e%I2sX/q[63<?f(sB]C^mGR,0Z4Jlem)gHK@r4n_,au7HM?LR:`edOWS*mr%SXAfoDtJ%VAp*M?nI[Ab1)MmW+h-H?,jg>?$$I:h'TOt2L$Cbem/DL"Q8d5\(=aF7p&UA$dJZcLoJQun5'!`!\Q0-oAgIWDRs<1&gEI[+a)QJ%Ou7`8O-LQ5=aEcl<E)5.m>@!5Q\?R=8GUdm8i(;07j[2?Su5\]@b3J_#%ceKM,;WFYM*"4'VNs%0d.:/2*F=k__RA):[<X7&arH[%?H'C1kh^4.eK*\VIThumV?_#*-ffP&F"J(j?RlnT\#b3*Y8E[q*,r9,\e`oD=kFe?$);JoQ=,>T_.[GDj>L=rYnug0(Y[T^ei#>$%>7ISjVnI`c&B[I;Wk0%..gBT&/3+&]F$O6?]L''][gTK66<P,5=\QLI`U*dsKnHhk.B:lC?t!kWFj$/-bkSgGQ,&k.f]PhL_o!_A%6u$:rH=ZJPQfIL&<hYsh8bA%F>r=:QR-VPP9mU:@Nor4")5Nj'l@Q\FH[H+*'_]Q7o&.I!<+67HC,QU[2G2aRV@q!GX_t!B<IK`V%1:uOfq:(cj?.G'RmtK!,5[N*:N^W$*ZC9d?\@tfZYG,A1%&*g905<<4=pV]ollGH(As^?[c8,F=[<;<hKG<>+J-7TmFm^6j1<Spg%0@cq-cHV\j[C[Gr!/sN$ELjXD<BJO`61&JZ;LT#\;*TkA**9_2<Z&3U^Zf$d4@OQf151[46"g?e&9AZjie?+:,S@:K(c@JVm7j$:%!_f_['RK?^9oH@2"V&>ZSMgnY>/8'Y+jY@u3-Hdl"%@NP##9YIdEXHf)4il$NhnD1oF_u+XdY6,a4nmE<,(R<c=$g52KSi`A^)+!%B<@p=<]=hI,P?PGaI@b+Y+$Aom<">\-9![m;al2uln=eKRr7_Kdajc;8t"3e1q0R8]Z^HbaoJgrj(Su9(@7aJH:L%F$X;dKhos%i%<>._BZMMu&>DS\Y#4)r=:+d;$:LFdMMI\hH;$P2N,ZrbKfE'u<<$J.g;Am;+hM?aWLJn_T,t8^k`m@B5!6i>4isNGqNq-&krj!%L%5nqW:A^jfNZEWZ<JH_!)F0fqaW2.h&#cb%0;=1SB+=eCGn%^W7.Lj,EGJGt5Vr$9=8V:SZ-QslnTT`!E^>*CD[o,!4Q#(Rl&(de5%WC->Ua%OAY3A'ASB:XtskEi2R"K:3#?sumnio\aa2I,Cp&=]ZB;o5tWaE_@QS2rWJ>aY?&r:VNLZImuF%%.N6d2#bp@gIYY0![=g%1*s0)b;rbsCMa4"O"_rOTo"ma,[Og!)K8R1:')hbR4T[hZ<dpT.4-gM`_MjWFUL\F.\O]V6*j_;9gE5CWL)=/Yu9F%3e(.pB;'7"%Y/E\5B*p^Z1-)Y,jJreO$1NDKi&bIm/@m?o_I[*`Um:5e,(4^B^e.a"#\?&bkV:qf5;Osf1/BYqeKV>S+*mQ)FAcht9Ul:IH#+j7%@$GqdD4kk*i;A9bY/PB:B1BZp>^3?!akJmWBTn^sW*:CG/(m'ELK$4r++cl-nS$u@.!0$4$#<iO/@[-E*Ar+V:LQe+i?RLMA9i8H%<N%,J=(a$tBO7c>gT4<!\/#m2o89TqjW@3pT@?!B))`dY;t#WZ=N-/g!WuA"M/^-q7KZ32D<_%=es8au,)Wq2g5LpcTG`U:@80[s%I@n?n._/8W_!f*7bgn`r!4nPN23t'=F85AHa(d94!'MJuN$]L3JZ<QT7o`jIZu6`pf8227`^3a0MMVM9op_B@df'uoAJ"0)6b!+]%#:.c#SG_BKffQc("TRr_#lU.4fGFTpKu\5;<^XN?Dl;Q"JRk>ERg,!e'qkZH2"S2=4?"B$3.bmW-*-4SaSSpOP-9(sq_0,m]I/]J%_3AI29+0p"Ggff87%LStg;oWNS-1lb)(QFR#e6+-UL>,mKe^V<kU7_7'M_*#.tAn',JpaV+pqFGJG(,H'rH!J0MFqe[:M.mLp0dZ%*@?-,3^!*fJEXEb@\sOt-,uCZY&TSP.O+b>'G"]H)13b6j9D.5BEk_T3o#2nYX^6S1G93/L_^S72+*N5i3\eYOr.qrZJG5WP%3@c%AH3TWpVF29"I$WYWjO?f[SH!A+:LID"eN3Q'rNHr7FtCsibtTHW!'D*7p1GB.ll(gRhVkr<*Y4uAHS$)ABurn)X:&'L2$Q)"iBTL%o*",RG\tR8gY?Oi0ju["6VR/EF[h_7nJ9V,+TN3=pl\]h+rN/",+QC.<JPZ]!*C4r^`n:t!<Ik@m3SVq%gW15!R/9N?.+XqP+A"e%a'5VTDqX9tGYN^+%R:nu_F@Y#=RRp_GEf=$X<e>9!1<Ed?r?)Zdt!rC2QJ[[RK^e&!tb-p\_'S8EMJ7S#eG%Jc9g=I#C6N7oj.E7%nCn"pGo^9FJg)F,Z\:NhNJGm.W6[4KrfF<C($(Zf+)566<D^7E*!*%[e3NZVY_0hM@C;sMrEFP/1kN@UZ]!:8bt?IUr\5(GLf/CG%M29-LAJqO;GP!TNcYi"rQN*&j)[YuC;p^uh6#nMYDuXa5$KOVl]=<q5@=ceOcb4DuXo!%OF__e5T_n1B36uic%tE(\+$@/n0$8TQ%AL)"j^_aF)-<7<a$CAc.,E-#H!\GF(dU_'rm/M@S@OrOA0IhePMY&AR5.)t="c8#!ZQ0pk,?^:TCh'$[atL]af>/g.rpU^(n6tmT%+Qcl5lY>G)o'J8gEH"1-`5H>W6UrlJ@X;b"Tr?qgj%GZeZ`(m5DA!7m%45jk-^@"-c[hf/('(WQluDq,8TLo4cU/FfZUmVIW\_U:%RUti5LE1b5>SJ+gpB,pH0<i3B.3uNof45C+=C@4od7a-&n2@hW@P?4o`bf`CjY2@o.;#12<7;[uDkTn_W>$ZYTHIFp>E`1G9[>-J%d/r&N%L,LSD5\ae\LNDFP90&/U+C,?G'RDB\B(fqOdBd;-q;>TjRDFfWcHBU(B=g467dMgWh[5ed;H=D36iZ6D#"M28dnap1imV6%C)]!g?ru)=\/HgYXB3/=X[VBTX)o[]/6,tLLjU*).B;d[4=hE%K3`F5bRf^g\Wr"^WhW8JHf[&#W*ZjI6M2gG<#tA>;GN]$-<@\l%!I:as2moM6ZF6)rfE&6p2:tQ`/#ckkH`?:e1<oRiOD=UWQ(l-Y95'e*(]!:gGIC>HVCE(+6E1%9K.#!LQ_LbsD3^!qjg1JEr!bZG%=(>"U;,o6LibIX6(qG[D:hWj)7&;_VT<W`9elGms8RI@&Ji/AO-)XBqf4fc`g/Rup$[A`K4/](fe&W@l;rNu66adBi-"u+/(Il[r%6JZWo,R"u:&l=5'ZuOJ3F'X&oh-@qY<fNP.'<p6$\ZTrB9VF$nZ`4^,nO)+`,,CsF)f6''93frgUu/,7)5YBQ9rE<pV%i5775!HE%QC;qb$-[Er']!TGnrT'DGomC:]U7(H.TEfBnGMZR0p86Y_`:_I7.9LTP_0"PMPHqbb]bP;6d*k2Qt<V/3bfl?8fu?9&7"4fD11.h%ChgQ#Aspd:-*J#`1"h8W-tCBZ9:;n9C/FuNkkE4VEH(&BMg?6[XjQctU!DJ!K='H#EIe\mU;ruP,H@':l"jUIq_8I\7GE%OCfJ6_%8LfuA@+Y4;@M=%EWFec1^+%9@?"Ie`re%o&fhA`>1+SUYL,Cp@#U\Q,MI'f(oh:P!G\s5bo'm-5XO@BmC8f2s5W7L\*dI^d+S,Ts%_)U4D6;bSU8P_do9@XR*euQs9*H&GhF`Rok"DgB89Qh@RQRWl/aP4#fV(+uhQ]D0LA3)37cUL_"<:R]2g5^!*-9JNIjQOfa`RiA$%C76*9euD%G7a!b$+AisP0P+.<gi7Xb=n!3p)LGpJ%o4(mdhF&fr,;:7l54]h&@XG0PAE@BADF91s.BJjRW:)@18P[5<o-$a"FB?B%ZcY0NTUT3pX!n;_P[lM/8T7KI-.1rp3osg-<a#ku+EKBWU,q%.ODVWC/25H^VPZ%0]*E]nR\!^eCoGNKSmc9uPD(A$M<O,o0.Pgm%p$a?LE>2:*p9g]l\_5)-WcLPfC\^_pe"ZmnT,`2p?qlBt@eK_U,Fli<`oh0uRc.4CNiJr$`")qBs4?s&416\5Eo%J"G;tcoO9Bfj%OdY_uU^A\=!'tY@L,]i![P"#%[%"pL[041Vb!%W-[Aj]^E3M>`VgP\hN/W^Sn8L<F,GNt/9QD;36,ODcbo/'%N,gaWG(p*m0QPp2%"O:l/MT:I02i_#:AZ,!I[0u!9A?)iMD07'PM3o1jUMdBD?S7!*P9^Qd"U%WQLRIKX'S#HD<LB1lEj((iJ1HJW#iXfhS?WKX7?=L@%AK3d6)j<a"$R3W;I2^`/$K:#jeSfIlffmSeg@jA")&._bGB_,tD4+0R&RmTM?sBDQD]'i&f.M'Y&b+RqR%nAnk3#B![QH+fqnS.(%MPTEa1E,NUb-d!=.+iLr@=0'lFWhj&p(>(NeUiJ>XoMc<MWP)c\q=63b2H9'd(R-89u@CUj'AY8KRWk;hjjBIKpDPk\H%8$>H\V2%75!DsHkafMgSimC&%BN[aS>NkY&r)(FTc93NC3%<;TQ*>%DPWW12#sXb.PFHb99Ce?-mWT^$?=M(%QW^-IbdP3omJ>(8Y`YnJojC%>m%l6]@hQ)+Ec.2,+2ktV5=t63.n_$*!eNb@#GQb6)k3.j6\-Q-:;(fCKbECR]GRlGAXU!?((;eg<cF8k&]W/1DoYnhB#aFk8g;"%@]mr&)@K6%.sqWCE$CO.:Cg>06"(udc^j$L]M4,IKr<\K1078\"2);0IX`&NJ?QFT`AT^YQEXASi2DGr$P*eH6[?"K"%GHJlZF/)%H5p_6<[(sSkH'TJ.*B6hlYTWZp=2SlAM_0aQZ#kAI&/4IL[m37fip7H#h;!;aL<@Oq6j\JAm#BiEX8hV$pKkAD-7iBIp5e2C>W1$%=]**V8VQ`9QS!lA=MjFWN3.SXWZ26.$YO2$$/uGD5:#^UPg)5e>l=po+d7A.8b..P4l&5,S+?8kRMij<=U6<j6LU"h)-r5j_IE[R%I0POr9$3\]7*WOYUU#sZ>++<,3.h!^4DL1fFDVg9@)0[2h-J_4k]GP\(#h'5i`U;Nr+<CZg:*Kp1C&ok>)DBb4oN'O:]pQlf<h3b%X?)BZK(_KI@WsWl?bUs%c#FRaIicGDqKic*aJ^Tu8&p>@hs5[WXDLFidHs[B8Qoi=-K,1tP)o4oX`]@es&f]%5WOJj"A%u:"*!@,%)utK<#[V;(5S#2F*tAjnVI@t:!0T"f_fP2TRqE,h#kq+JKm]iPb6B0tMlZP/&="qN[BK1)AJNPG,H<@U"B#+BkR^mg?-TdY4*:*P%P)=s`2+Dsf^`gGZF(<e4;u7OlY<g!O8Q<gtj54F]*+;^LNFK@ooTRhG&^f`RQ2@55-#E(YndSR=hnBNX,$GaUOOu1Sl$!oe:cihf%B[*VCI3C9QnF).uGP$L#$a6&#RpT-d/2cQlfL9\@rb7*3F'323A[Emr65S-QNeNF'h(?'nmqD@Il)nQpYhV^(1@f-LJ`^t'cuh^A%!JJ<_Lnu'g$,^LI"cb24dH3/;q6.T+H\=K1*oCDb^pK:1@g;N%8>)q&kn"e='#p(0,Hmbm)W_OuX'?M>%ENL=r`g[iUYY+?*>o_6%>f11)D7XprY&[1s;$:%?RrKNf`%Fl.*#N'T*0sdFTWHu;W>Er>!,g@^jW3aCqY%IT;J\t;\gXR_Vj+Q($E*"@.E1"80D!bLXD4=C%_au#o#fYj&E$<U`(Ds%GYsWZ2F<-8tJ"N8%EQRc*o'5:gZ'()#kfQI`[nVV9n3X671n)3"OksnC[jKnjETKs_0[0&nolVBO,?KXU%-5m2b30X*7=R@<VdY&`=pQVD(ZXS3]F^e7aa%TXlZ%%IrN\Oj!,%>]N1\Yn-MM&>*ZRN`H_'&6:PAo6Sb&q(cU-P"@.USjc?@tX"%c%5.R+.5/0q:8Db[jeB.DO]@dFH4'.:7DaOYLU*)3nrmeWZ)MJf:G$="E^F_At%'&L>a[d]%/GHA=g(J^.-K^XtjgBJO!)dg_WuJ%kg<jqJgBH2&?feXct:n`_o7?Ed`PcY/]i9D=WkfYC#>>bT"drE\SN*"c@*F0EE$6GMagK.Dj/+^9::X:XCon1'nG%C:F#8.W\tib%>^5CgY#>U;)EC.T:F3cDiDm2iYXZK7dX)rE3J>`pM_]]'G^^d#q'a9kZ=^MTSZ$Lm/A-Us0)#/[1f`Fl[o[mU]QcgWd>#F=k>f\Y%;TiR_?Pamf1Ni3]+J\PT-?LJqi,2X7"D&"L=X$jU"3c_bf[AtAh-h+=eX[:9m;l?[4rZu2"iVUI5sO"960K_0<b)um,7jE>E=b;q%"mCqFf8gW(2WsgBfj`a]U9RJEphdDJ(^"'*#E`W5XD>:>ks7UBYAa_lNpT6tD8q&R]h*oUJMrG7B=eX?<!_5^H(]r[]Cj%A_('XY%DUk8@`<B61d82l5.eXNY:>hd]G!`0P+g&C_ph@RXjfGAN=epOY;VFN&nE3%HkHDd^6?l4Z,Q<*`XH`=J`S<(g"<"@N^A$YC1i%j0%<=9(Hfp2Cqq<coSH"cL^.-'h-24Md>J!lr=T@mEj*1<,$AY^;<E,L>u/'&M:K-8Oa)0cLG31o!Oflq?EPBR\qfNK^K?065SQ8hf$%/8W+B*5bI[<cpVeU*!-!#Z:X(O+Z(H%4!t7*]_-7<hqU'6CmkO%^f\<54VPYg]N)hm+?_.oBPV^WN<K=&\X`D]]0L[C-iYGI,g]h%"0iU2nUss[70b&^mYEfDV+:B@h?YCE2Lph1GrmRBp@8B\hr,[ZMK4JMDO=r%_h<6&qE9dk872E#*KFSB1k8sA2lK_NX,*#!QTVCY%@<b7PZ6<gX"af\BMuGEj*K4/']f+KGZD<>4M-WP-%/Qc1W"RRGa\8!NUp)U*Qc5QPe4k]/PA_3]^fIs;H8Z`O>-7WG3"<:P@8<b:%jLW8UoDg*:(A[++>OfQY*`bXj6pWH<;?=TakmfA_!s>cAm6VWrHQmhO@MR&KkU6b`;PIB&?oPh-qX`$0K"^B`[Xg6!N2Zm@kBC,q%;_Q>Mc>T#LeO.TZr/BobJo?<]hCZc&s3M7X*<7.bJ8I)u5W2Ca0pZ^#LL(!ICWh50.;5&DY/+$Rr,j@21*-j,JtuSec^&a`/RVQX%0IX\NnAW@9Pk6q`.Kkt1dsQm_GI#9M&%gmE:p2p>TsI]o.Q`W`)\mHb+<)RI4Lp^gOp)$K#&<89"e*<j!'ofL02QgCidN-5gCbr*%I+.Ih2IHF-o',VEDjL9O+]_Fd&h+_$GNqqf6>/T2X<Vl_N\DQ%p`p7Q^0]Z&X3SC$8>#Oqj[ba`bd1'k!-4,5\[r:5,mM&(1+(<2%<_4nYm@A]KT=1i7$ZL?X*/(H6m8.$J"HOVG%bRDO1E5FamV:&G8+<BGe5_;.oK:<ukeKg:'=PKCn+B=<Anh8_bhCFFIn;s(@>b"]%i#ms0l+mH\i&(ViEt:SOU6&FM,IaaoNf2aTDm=QT"@gm<8(Dg;V!blP7J.OG799+ZA"E\I*I]PBqV`:9&OidEBAPQLY"1G"`rVCB%l^ddK3:*DdUsETdG&d.a^MKKMX+&T#i/@uS@`]QAS)%jcBd[]F#\D1g6AO;-W612Iot.A;7*+pT.S+lakLZ7r0PY/l`:$I2FX&l7%cg9:e,BnT(X]A=M/RRA"$jjj;b^8@H@;Y,TfWS<0M3TU_?Y_Lp+\.n]H+ihF3(Hiap6O4;F4ZisrU?(3;_rVu55_J;c]6]VjdV*O%8(urNH4TDL4808o9K&pGfFq<[/:9"12$!)6NKDSSn.X!/AqJ_+LC<-YhTDp[WVhh-(PU'keXgUEHC:979!aif<N31HT&OYQq+3M2%n"IcJ*iU4:.3(R=Q`Lo-/)u;UjB=uR&Ze%>He`hbq]>S"m'5fggjW*18KVC"Ah]:h5=qt&[TZ2=27u9e8@?ig]<@.1Y@97un#T%k%;d>6t:YVE.$#;=LR5Zq@di`@mWOpLq&q]I-*NnAE6PjI]iW9\NZTIJB`<BW<AVqFh.9C9.&p/Hc7kFYb2-W?GlSfuJf*feH6?P2)%O"-?[7I\+2hQQU"SM/_7hg`UOrP`g&asffL1q'S'Z9CO7cJ#rR,^V:4@8^_j3^>5#^ZGcM@8kI7qX\)/^t)FKHaW=SQA[Jc/^YbE%.iacrF\ee"/YiH#`o5ZL6c]s*ZQ@<l!*mY:lb/h]&XaGY3qU:e[POFl2Fj7O=BaSXbArmm@<;9H-I3DV<8QD$q>46ZRen_sm4cpm%539jprP.A"!LbS$jT$i+],'KTK[eoUUr@JA--I=)H>1E&Ote&hHJcgtTUGJ.Ds18NTqmfpdY#\hr5>rmK1@X0eENhhldW+WN3$8C%gmT=Yn%EHp4ag!4rKSoqr5'\*BfWWSJmLHG>Bt<7O$[ts$/>PTK%p)ZRe17H-&m4@T<$7qmhm0q27(`,S*jSLbM6uJlb5_:.[sSH%"@DB;SNb5/Nfi<nN[tul^U.dJiNpUtY&eqn_DuB!k3dMO,4ER1X80$2?(^"*D<sKo.i\%E?S,*RI'H*%9#lCP$6-\DVCI#KW&-pQ%cW"<%%Oa_3/Me<.jrVQQ;/N3j7*kU[*7#-Bg$6\QH/V8a1[FMIo)E9=rjkZCm1^n7Ou>O7$Q]Zf.pIUhCLbBB$"!-gR<FT^=&5mQ%+%n!:drO<Wn,7oqp*eZNhcU/q-h12)f)Ffl1P9;,e3TV74"f#,+msE)n/X%"O-2#F-%"4K*hK_dbrDm4W$[LPR<7%(VIasC;kX#:%d!"Hs3$`RWP*J&BF3^sJW+?_*3i5.hY5na2YYuOhXmoqZO!F#>C'e=f@7/@H\!n,(#lV*@\J(T#mr"P6'>mN=$m1k[*1!6`0Z',Q%Dmt7c-;H+$E*deQn\<^[s8FOE424n#G5\,*%pSLdd&YsrC&,r4J79R,_&/<qqh_Es5pC;F=%)Zf.`Pf#0K8Y*1?0Ag4U_M+NI`EK%>%\[F4JEV'C]RGmFsLdiQ\GN`'Ko$^kKA_SU#:&G]0t++CnDJf4bHeNpGbJSkQB:F<pk?C<t6.eUsU?:fBt%"?\.PaXgqcYWqb/K%PK3?/J';@=)u2%UYs6LAl;l1:_bCn@P8CLg3ZTVt*EWs!(M4b.VKRQ7qm1Ctn:@=PREp/Hq5M.cZ5GsYhEYB@ANHd9pDbBq&4RNp%ceTomB+nRF1g?;\l!uK,WePadN5lpiqmLQ7Mus]nT#!S\\:)@;](,uM?ud!>Q!`5>9\G8[YmiDDGaa9mnk/;R-H_3M2)F-q2-u?Z%X8leCYKW3Sh40oeean$7-g[Z)Fh*j`W>jTD4L:oh/As'CoGrigTT=g^/m>b<K13DsT\p>3Eh>KOd6aW$KFT!j;Qca%.52,Z]s4mY%I%F/,_Ut$fS8pT**g-;/*?nT<93.b`8X.HWaqIT)=_0.8YShW,.Q!`?G<f336rYO8<\F\"s0/6qWjV-\J(qa<MgtR"J,5deqe(<:%eRjWX5"GE]%M?s_qmL_J3SZMt3I(mnWkZmWFi7Y]muQnM=YbUl\ZVH_"<gXV/"VaKqp!o,OKjBFD/^jI"Ii=#NC_@)d32i">nU^j%pOr,(5g;Qe:]W"haDH;+J0YYabOd$AXln9Qk8g3u46gKs"?cccUHSZp2[L/_ZpU`]e3VVZLeL-*EVZmj]PaV)rBB)QD?G3FOV%fo%l!pO()"FV25&;.9I3_^frij8\E:4^I8[M;Pig4H3RS7S/+"RGnj0_9KT?h)$"5B`RZCl113Y++NbB#id#$.91W1QYda?h.@QVOU)%\j]sWqqFoLFS]QN702-b;EoqDVs42jeWJIpmNXkWB*H!Za1PVu&e*IP_=gVa]_-J[M$I?JjY@ibMX=g[KG_otl2D"!0/n7#B*M\n%>#?E,`@fR4\,FK4pB6_H&A>(k\6Hq9.+$];Uj?tpA4(ep_'I[J+;@BuBt.neVo[I'j9/Tiids]6.grV]R9*qhgmS>Vo<dKJoY5kT%6goK[Tk,)%$)umB#S7_BZ4MGH6)eX5CO=@OH8]p?D"ZF#5;tULb/863=)<u.4aA6OFcug>Xa*UC'na<WO>,gY#s$QH)cR`TPZb%j%rC#'4*O7R3_A9qHRhkBP]YKtgGkcXn>Q%6&\!P_D;.KL38e4S0(HDucG5DNb<B\e[@okC85%kQ&:tO.nZ#[@:5o>S/A^&NX`VUeU%P(n9."oeLIIVB(1#DoEH+1\I;A%FA=FZRAfpRua9B4sG+_1lH.\6o'b,?b);%Mu?!/o_#/@6m69KJT]I+snH+c0i3*^TF(R28NA#%Wh*\SH$KhU+6V8C1.[K8[P((XPN5Vj67,&ZoKV0G!%dYZ@2mr.BkW+\g))NG8jJ1_1Dg*#\'_?KgkG^i\0Y+(o!]9!LY4K@!qqEF%`6p-Y17Al;5T^c/,?E2XBJ5kR8]Y/,>n.6Y?obn)pR+nI4$r8b[(\'dpY0KXd?5d7KJ+;ubjF;CnCK7!4(!?-1O_8W39pI8BsngT%)5t$<OdBU/6]%qce.\LHq06&<fsJ2!0L0YjcP!*DD+6EANk4Ge00>/d`1acRW\+RT5c-?J:l_Ba=E_DCd]].\:EVGrEA.$*%Lu.&%GSq_SH3fu)V/Da_qKNNp3glgtqR4uhipjoK#0rT@9EO9'.abQt8l3WMPe)'7'^pC%Gi0Y]/^*FZ:[LpL'hF/99Cr&l(WYu`^U]J@%Bt'"fhZAodI79Run<9L)fda(PK;Z3mNP0PKOL6SYHtC7!-Tq72Odc/VWH%ktqS2I3WYT$I&mbm]U]<Z,i6K6sbA3lD@q+nJ=N"be%Ll:KS0(k5n"NdR%*>$icC;Ri9NiQWE*.rIL"bL9ZLt1K[EYJ6@D$K2#Y"6IYT^(p7dt%]WPWRDeO9'J']q<rLMBXHSSVc!5778),%q%4?6dF>``7tXF_jLQg^T_u1.ZD4Zs'pC]5pZ#T\^gH5V7&uTu55X$biVp5[BK)E]*6K9a7COUOR4sHBiJW7.`o'@:9_TOkZtgK?%b]$8k7`hmc1BBs`<Wd(X@q^e]FRB;#3QP$bHWGflK&^M&ls;CAgJ+=[Ob]\`h=gq\?V;i&l%SbO33F3.]T^ugUX@,(2+Ba:&f9gQ%=Kh1'pZoPsb9UrkK$B>(UVBeeU?JK$01:U_@s:u%FnF)qIb?9fqeeEHdX53#qI7YN#5r*,NtT;\krsg]02HdY!WG,grfDuSm0Yd#%"ZE@SCaoP8B=-Y\6k";.i:%PQorR1CC$>$7SS=EJiFR)tF<k$-Ts\t,hQHPL3fLff91M]Ho*H1Ckg+0*5[NoF#2&'rV'gI(I6)2^%K5G<>)=1;W<foM5[AgK#blgOXMX0DupW7c,@ZQheh89E_I#5bUME#7037XL,,PHRCkP=EdZs+TSq2;c:&T;M3[8q`ahoCr2\2%uQ%Q24>je_"a<rl:`1F^NSaPd_F[]@T.@S:DsT^U!Qk>*npVoIE"'3)0l6a\P@/IDiIb&GsN0E\>"7&k^>BeZ;OI:+Ql^a\3jXY\++,%9&sV\Ve"Th.)/G&o1Mq:X'%V7B\(?39KMS3U"('B/,U#rRn&d%pL3i^.ogHXI&^MO:;L`QfNjN(;c*V0Cr5dkZ)2cH6>\3cZigpA%dN]`T_OP]GI]$P\$\!r]-7hMu#om.m*IKYG<BbEHYmW?F>p5mkOm=EQ7B-AY+aSu]0$8]r?s5bkb"uL@2j7a'D[%_a^DZ`N*^4O1%9NNFN$85dH&iNZj\-sH>95G8f+^_Q\k/B,'Ak=:ZEK0dVI$nPk:8/&\&d?\kj?uCRld$.LJ%&7(nRd#4S<'B:#:H9(X%X??o;b$/%0CS,V0'oLZC#N$,B-l)p+5@H3jU*0O>BReE5J;a<?d,/W:HK'7;8#k<dBpK#a;kDs#kb6cXK>+iWI1j"A?F/Qj_qAS?^o:(GFPY)%/k&_=[hH,UT')I9O.efj$:.1'd-hW6q?S&Y&;'2Tc9(qBb(r\2G8q?;i1qX\_$<Z;jSX8l.,2!t;%\PM'#=MV?(n*k'EoC%I4)Wm%i'9E/V7#VY+I\Ap%='At7L9o<#sXehYe,GFa);J2e.mbQDR3<G)+Q*A#`F,3ck-up/eC_h"24(:lJL`Fje>Q6csiXlcbC#j83LYn%F28qTE\R<Oi7Xe#4p9"NB+5_dKYJ#c(7tg+,Me1(;j$$k7FFh-(#QO&?M*0;`I+jFXW*DaQ763Njq=]7lh^SW>kjTC(/6(!pWE5K%T4URsJH42XcgY@G'mAFU*pDPS?Nmsc3i%PV([\V'#*nDo0R&):3=K:6Ng=P5biPjEH7--^$qF#.!ai.g/:4k0X/q*?&KSY4p<'ao%V0rdG^6]4C7f\Zc'R!#W,Y;D9q:2-GiO;92f`r`b34r?=JTqWf8&i/3^IQ\i'(3?EO6)ikKF3C#i<dkr^kF4N.cr!/a<Tb&]MQZm%gZq>kMfb5Cp,.8Oq@*aLD,Jb+df>??-!@WYdD7>;`ON$;STsj/6(WP0YCa'"fYc5+2P5R`WXsF.q`PX@<ql(G#g$/GLQ#RL;n$Lo%%B^DRVXXc@7WZ5=TQQUUcqPU[1>eDX/J>OOm8_I-$?rGl0BA"+UrFlK_Rq<tZMK]r7cm22-dU[e]`6f3TW]R%aOZ>H:N3>I:[N$a%X7gj`NV*)r&q2jF9!aP&b.p^Cn?ok5MGg;O=J!:ro37^68Ps4>#@QW>8-Ft#5#NW(WQkW.$5`9#l86^U^)N`^TtEH]W#B&Ek)9\X%B;RH:0)Djs9(R)=S*pG6/B:ErZnX'5Jce=__[?sk$'m$LN!=j1icUM%EV..F,Mf>E(c3gQXq?=TP/#KX?T(0l1Rm:oO4SWW0HP<D%B9sR:SEi?ZLnR.@N&0k"RG*qd&jIl#oEsiQ$Lf^p.%$dJQhhKfPf"odRk)T;5dAb)KjR4K8-Q5.=D,mj10M*^h=,r%eSc>nZUuGc%Woh1C(LB-^<H%@3<LGA;S[loA7LaP'goQ3]O8_$X]Q:1q<M>1qI2YKtjrNXoZiUQ`;DLUogNO(mIgP0D&h"qFqe4`/d<V2Zf6'"&%s,"r/`Du2W,_<W,KYIq!SBHUdYcH7tog/6cq_IbXqDZ?d=o<:T%8b;;[t3K2R@N%m1N@$ec3/?b523'gD?O'WVjq2(G2^kuRWtSq%PGakNcu5sV%1._[7H`]>j)WIt]'Xq0'0kOL^$km6cD,'EVBoMY#bcORLPt]mW@u^:oMC^MBR:/#Q[Iq-:1=Pi(b3(Z87HEXgOJto%@L+9@dR==$d<q(=Eeeh.0g*&ln36]S;E/Zns"ef"/6:dW[CqXj-:E&\r:\R'k.319[$F\ZoAR8S+gNeUGOI82)S[42nD<+c.h`-+%[)<AMFFH,9>j@(`8Qeq:'_]LR@"l&+>.FEUS*H_n\5E-=S9cc/a[OEU%I/)6VAHCq@MYJhO4tF$3F,4S]p<]q*Pa;>N(^?b_HgJJ%(+IV&kqT8Y0#QtQB@ZGI>\>CtYuAglh?f5Lm'.I\dArY"EY#i*bH"%.C_TO"8m.E#'Ka<[bc61Fdh1i)1:Wk7h,#E<662L/*>8Wc%9>27_+55@f[R_J?-lG<M@(8n_No:6/$qUOpN,CE]Sa.mifSlVL&jp@lRB"<E8g?mPlc+]gUaV%1%6P%4/<^GG@rP/#c3=37S+U/p%S`eB0Z<:SAj\`"g+6dq"+F*q=B.btB9S8`?9)9.\PKF/G'U#7+Wr!Y_II`Pej#+gsKi3P9%&-i4C`^/DgEsWi/7LcYf\7Lu=dr/f%"m#KJ$OA&)M+[6JB,eUq$`CW87Y2#25NLoR:u^*$f&d(*2\GsD]MZ>XOJiB((_!Hm5*P1p]t4p)WCK(A3I.+Md"tt(/tG"0O%=[Z%E=B%n(u33QdarW`lb%*TIG4G@Kfer"NZ(O,&@=#V6J6AO/`pa'W8!EMpqC@R2i/.A8G?ssq5#N$M=%7'T`Y_Z`*#jI:Z@%AGEu(!%nb]JcTUG\[ZokY2Rl4mGqM@d`C6.:$0,_>:ooE_;SYYPrZk3(OW35%D!:XaFh<@T+$4?6tZmYW4;-(.q??DO08o^Sf#G7!&VRfq^%=o>4&Wh6L>aWVV[.C)DLKG'3pXQH\YXLc)L3MY#^1+@moj/ee@2i[6&"9L<J[3;ag2XC27'$pbM7I<cR61KZ07_grXSE3oR;(;$e%qrN8*8r2$^<"Lu)V"5rLDmqHhl.LJK8%/c[kJLEFjG[>4P(b-tUSuP1Dj#U*[0jm><)T->IH<5@id!'#d<FuKgJ^h$dh"FVqdDX5%-KV[/e.W9I;7&j:)C`bLN;Nf,PYqQ,.!W7jP^5U\/#;bYE(#n/n"Ji0V$9r&*LS=H:JZ:@r+KKb/:M*S\fJL,6k"@8AKJB[2>i8,%h;q+,d8Pp9m,u7,d%T^2?"a*:'=B^8[agqAVX>KA(V#+BnXU^A]k@tA8VS.Ni=5J/T1,J&qD]RY=3o(-l%8";M=eM4qDVYrhSX[#%7aTPL#q[=f10fO\*%oA^.P*MnH/!&_%6tODQG5>'a<%?O9!;Hs*>@=Q\!i-^<)&/l]6idpps"dd#$@%Lr7s]Fj[jUL)su#nqQT<k%pJ[N:972LESERSF3Oa_;oF&"`+;&gcSBKjl&K[sZ!<],-<ts8p;d:CuA'\uu,3PpoN%L,EKO-d(=9SOG6-0"t&L&KZQ(37#L*1OF%rXZn5!-F12O^03^Jjak/VhqLs>ZJT;EPD@Z.mgBd>9%Lki]q.=L7a:;.\`R))3/gR*YZ`+kbZ9:&dNS)he0XJU%%?i"?"6[+.fIV%dg9,`03>\WK<(Qg*jebQfJC,(b<Lr6*k11dj]";)n'eF8:Z=l_/Sl14`*3cHiO:3I=sl$EH,!D^bdV*k7k.*fj2jFj5kRN%fJ&b+%GI=GgImPqQ4"KZob6(7Cb<opb)rpD[RL#4?m<Hs+5B_5k6BpH74%#f''1$St#U/`Ip?tk$j"a<#^l"G<qf$(KN[3,e=@EH^^"MX(%j<Ir"dAEja8KhsQ1caKWIMbO>CCj*:;7PaXRKGT*esl*bg^o>2S@[[,CbNs0:5\-].8P`]M=KC=^eKme7B3]<s/4OZ`PLXXO"9Jq%[JLBU)-ZP1R/hY&l`d*#lDsdLHFHWN?r(K[Pt$1CKrVce$[ace0?CU`Q5.ApW[fKGO0lHq2em,O2$_.[,g7n>^6/H$N.$s);/UL/%S(t.WJ0(;1@iHbF;EQIddT)nI??&Vccj8M?hGq`a6u@BW=8dqsc*$=b`,3PK?4=@Q*05ggbW*%rf\3]7%#]dMG&NUPRT5fGKiI_:%T"H-W#Bst$lt,)91f9Ef*nCh54:sQJ%NF>oO=/VK)[1efBg,V?KF"o6QT4cEo#/7:")c4ls/$`[0*Aj>],RQ,fX"U=;>0]hdO*%a%l8RaF,<3KkV9/e;mp1JN)C]d(hOI+Y%>tRgZHt0@@j$2#kM/X*maF^Hrg&bJ[<QjFW5-Y/0!FTg2EO['c;iI2G)Ee<Dn31`!4^J@%&5;\?WMlLs62Iin\J&mFJe@EE5Q.`0Qc,G;I^eII$lo?m";%W][,Onr/F`l443]V1p[=bWM1H\IVc@?sCATju$4C+FSoN3B;1KSQ%.A]CWC6`;=p+.j^Yub?XN^k-d3+NR0)/d,D7B>mPqPJ$<=,"CR:e2_oSLI6O><KuA;!4ibD$6WTpHJ%45cfCBf@844s),O(a<^kJ%<-+4oC[J39PA`mU--C;4hgcVd7iU7'k>_W/e(l<"qXj_ANB%g&T!**`1?^VelKn(7HG@j1RYVj"e'OrCZtP1.e@`5Cg7t<9NGQo)%YF!ijXl`It#dGEE[GQ^6LS*?l*nNH1`;=\L_Z_BjMZg-[lMUbMXmYd@:M-!3T'oRG$8$RBLPXl#JAlXUS(MP*h9QIdS@"olff-BM%>$cOmbIO^Zmb]E]PD#L(Ni8M0UNFC%>FO%&!7(lURIftB@F&?t]R$#BLI@Z8j6=YJqBOSC&UbsL@hcbTf=VRuo_hIn%H6o(bd[Ik%F3MDD!\r'Q]N1]aoC&r.%(Gp+39I,u55EkV18d#hf>&>J?Ope+cDQM$S!>>+EdD$bG."dUhT,]ik<fe)I,</tGr8G?kpk46H!/14%%":-SOjA:Kg.^)^PZq2SDN4^.UXnD--ea6"jrO[S.bllU*T_U$:c`Oiq;dtJ?fu`glK,.+)YZWq?L4mT:#^jjqPRfGmE<7qTLrJ"%D.O[;AgOV8dai5+k_EW7X]l0mB'AU4J_JiH22<F"']>IJE$7Ws&R/&.]V^m!6?Q(Rr$sE"FA][pKI]540LCQqVGDDLmsmU9lMq4D%*NR`>BL/tR>?//%:B4Mg<=8(<lA[g5,>.9%$sX)!/d2*DF4h[h$="S(U$5Jm=o6AIG6A4C\[tmK:T4k&C\fI8H*O<M\.@R2=\7I0%JoFE`1PGulZJ@!\EH[Zb@4G:Fd_J2*&<<Y5nI9b0<;CDNjuV1emX)$[aBJ[h<J-k_geuKcDY.tjk)6_DleKiCUl4_AhA+S"re5#)%]/(GCSDPJ&duil#\OMf"Z'c)q+5;QiaHa!rS:FGp1:>0$PEc=7O(`1JPmS=lb><E1>ogaAqeR!f]O#'eW9/e"!2^`2r-&`KPudcG%,PKLi-^_M&GC"#^FI_&^%7-09LIJkYL^[FTCqlskHnKXB+McT<RF@c?9N?P/*%b+JJ-@*Zh2A2,>A,-d;NXk+\qHt+4"`-=N=R&p%mO0^tQ#?J/!a=U\j_IK%6FVVagX."MAX:(&258r:KnLI3O0>-NC@3*8S$N0.&ORJWko]:6mS%Y/<d]hp*__[p9!5DTAaG]rU@3h,%KC2>#^"X[craPErh^gqU;gVY"lg6""QYP*p&iH*OAnC8/([In^Ap)!EG8o.,4n#P/93ftg!3[gu9AW5pG7$[+=jW8"GcIscjO*Q'%eei=714F<-*F9@tmZ&R\YUm3"1X&-1\5Q)XYcH:3XE\6!+;X[<];DSG$t%d\8DZ5U3m9BpFuS27g9(p8^Q.is$,u+,4>']q+L@#'%*Ml2^=8.BiTE(s3P=/6ECV<cV3r5WjbUOi@F-$TS$fXVgS>a<hj8c`"$41q)(u</cD+@:h1cq_oba#]j\m92k<]*=*<;B36h+0*a%gof>=o\+1Y!U=JGgq=n'glY0Ni`)rBBY7,2`c*7=&0=]Q'3nXH[tVdmRo1\$rL)-3A1e.t(2JG6"8+:@^&YKilLRpK")+4!\1<M>%3Zj3B>Y9Wc'P#'k3f4+rL:QLGeZ_N:Fdd&+b@GXH\)3Q5Z%$[*bO5-%04+Ctheuf4qKts@XH0Q7$_[C!c&(@/Yn1:&Ugp"7gu`\(%d;_?CPOE<^SKd*-)+]N+=4Y]G^PHhRMQ1>JI$Y8jie?aZ[Xh+#1%D=&ouL05eD_X=<;:?cm);Ct]kB&QM<[fBlNlqa6spr>U[_;h%7%c<:=o@mnhJ!kk;&1F#\A8=GDT\Hj*/$-%E#4CWjc!?6Djg2t#-)<;MD3\'7PuCL]cTehE^ku0]TC)6Gc=<Q*s!K9fCu+NHk'6*%TP<:UL56kl#Y9J@[l'Xei77#%T5n^7L.s^+;K"YiBt/;Z>mATS%iWt!Jm$o0Y59h>'oO$t%jOC)\R%_!n2-aiHJJ`R'0Z[WJj@)=%-FMLYYZut4+51=3!&AWMQR0\T[I@kLA=/``bN8Or=ne2=Y+$oG?/,FAW<?RVp7e?s"\LP56:Z_E^rPF48B6Y;c)B<<h:i%9Z\E8K%^AR9_4]e@%*\NrT^peTq3oG,#n]?G^k17DKrorE;>LlgCbKrZE1b3\)AhZ=tDL=D`%<Ion]7]uNcX)r>f#m5V5VhiA[_kbXMX#@3%3'2P;1<Qdk#Buhk_\?VgA6LKWAG\N3L%bMQEL\2b-?2K"jX=Ta?EF*PS0=:>&PgTjH9&lVLAmoS(8YU$Y@^nXW9SuBs4RDSNA=!E%*+W\jQL5rZ-Of@#q$uF%/'/ln!l+)`JN@:$:-'!b7'D>Thr=g\Ji^S*.lEl1?lX?d/0plep_bYKo*rt&\U:5e9qL;VX)3&Ue%#0(%YkcOgaCN[3Qm&O$rHF+SKN0cc'JYZHQa(X^"l2HI[i7I3ZTQ>Z?&ZR5AKd:J_D;:R&]L^ji)/\PhkMCO=g\sH)A0!_m?9!=<LidA%`RTa3*tbH7`A1>qgE+@0*lVT:a7iQ[m2KL6_pfI)<?l^jieD*F"sL[SS']o(,YlWk(R=n_>_cn9c7@&60Bq%d0@_pYTFK$oFgF(P%(Le.c$ENT6G.+?k,+A\^?pBQ<dF)!Oc$88LDXI)U"G[0/3rFgWZl@h(RDOSsPtH]D2iT7nDKB(oa5]o6<fhGm#d]r$',[#GF"45]%<GNUeYbrJR\4r$1/]:u$R\-L3+_;U,(HMp98%M$.pQ=DH]CHF?,G6Z#;]^3Q5[E5Rgbfs?k\T@OMjb>V,Wf/4$bIP5S70qc39)2m%XK8\-:9F":!st-GK^!f](EPisL$iLq2#O)l+dF!PL3l;KE`_(B;,R.2VY;4,6qF/_)\)_nBnE'$WR4r%_aS-G:"(d"Mg)]ke,cBq%1uMjFee.UWl="4:<EqcT:[R]1ob@/X$.r/'^f*I8rp=aeD(+la_ZK@A7oj4m(JHT-S".23PQU9I="O\T,e7r.._hrQhS!$('je+J%j_DaHiRuTVg'he&plLg:>Z!XcpnDHGUX?I+WX@C4"U*L%`ZbVB:3qC,\5$;l4i.n]m$is&rA8uMRUn2AU4(uNQ+oK!M[da]%,c0b%c$:Bp$Cn:\)J'@3V76Sd0O4jRe<QQ6n0Q%t&FSGH$?:$O.UscfF8E")lEn0GG<As[V[72].0VlDIHf3:ka(]tT!OXW/(Jl+GmhM5%gG8Y-Q:l:Ij:h=IWY<BeRIFF]DDTNSATl.Z.<.V(G;&VF_HVV(GoKjU]DPNIhr?^'T10(1_Go&(A+d8A'ET.b@t_ohX)!_e&rLa(%:.37&2r2ZaVIn%b?X@/J?FrVjqA%o/l2e4JX4^je)UE)TRQfQdWG+Xe=AC6g'N%O,a],'ni:"ap-eP>kR9_m#P1N#U7#'KFrpH0O%1;G<$P0VBEe`/"m:Af-R['NTnf>tZ[5tBE<PZgXaW;mqO0Uo-P%0]0$4d<[2_Fn8M.[-+^UW%2"G$^t;;*.ea;pp=[nKE(WZfR,c%nAfH*[IKV<a:\;Y5]?:1,Os!Vg'5$/FIt#FAZf_U;aYLe6lDA09_MC=+=8$"9p/YZo"!n3>'L2:CrtV8,U:C\%j<.h-:]Sk8l9sd%bshPj^HXA!c`tECJb<]r^@Yj##Wq)oQ>A!T13+%TF]D0=+2dcY3Q]n6D('1C%&X.OMMYh$'6pP&/^f_'>bBkjbG"'u,^mb1er:Hu%c0KWT/YDm0[4h%Dh46pH9>d-Qct]7;`c.$S]q3Lu6.-_g:)do>aAL^<:HD&iMcj'Kbq8I-mdpCpLE1eO=J)U:ci_lOUV$Erj[Rip%\'tq-LO5L.GEO<tF-fA6P.bpI.enjpB^2Wl&kA0"B"6qPC54<&iAFDo3fb>a;cLZ-f_Q_dffLc+l,ir#E%oL*`-9=k;8Asq;Z9tF%31I6BT0Lr&BoL!h4)IE$.')5_Gbk27(QU1'nKK".B2l>`drA+%dlfuC.42&Q$D?TV)-LVY=K/%J,m4*k'p(?9WoYGq@F!5'o?`\/%)=6m9,Mi6CNKl/EKp7Dm?Om#Ta*\p7bAK+Saafe&em-`b$.bM::+kkrRB`SnA)fN#+(=C$\-_P:Uk?X`!-k?f7!.1*CX6"lX-GnO%*mMs^NIX?jQ>gYa!237UFV?8mIDr6@MSG&CEL'MIdC*7h::7>Xbd+E"JYUbc%3<D60CKpB0Vg5#s34EhA%<Rn'ER-[fX_ESQ*Sr&%IRF[4dfT!lC!A-OgJ0b%r:WrB(L]T&b/80R"Z4Y>#.?tI,E2si-o*!0&K*d!!740EpchU!-'@5.ToEY:HD%4oEAhYDj1K)_c^&CF%&4amJ:7^Ak-m0%ZFqDG/ld)PBRj$X4NVmC,VjL_/9;(&2G+ftNk:"RJ!pmF=E)(IkC:QT(?ohW,6Dn]CL66s`g+irb.(;uV(P]hp%*>"N[@AYO3jS"Q9.Ced\DGTXfEb0AQda?5*MsAtUKd"]V(PTbEMdI["I$MstF`\:,UWtDN1Ls5N'G6ds';,JV.kDoS_h.EX8:oT0%m]!6Z3QP9k@>U'_H#mG,-9%Y9!c!`OdA+8:U]*I.!@FZnG:)Du)dEI>g!?#_\[X1!MRT7UX:7s%L,2HCR4LZq:b"hLGAXl]V13WU%IV#3%J.ti,j%Q-q6;qI4;l7_1FGE^"<`"78Q</.;"<tEs3ZMeM_/H:-dGHn_?CL1^"FU_m$A25:.V)]X>CgS+9og7r&*J//EX`n<%l&V(P@1G6H']#?hMbl)_e"c^d380O`G4g,'Y;0@hB_`b!3S)g>Zu:F9cN/[F+Jt#Q.=0O:=0II&d!a8iN_aXqk[C5/W\n&%!-V'@%OO7W1/1_Mbel.l9,t%u>;,CXiUDe":7)B^uEuGn!@`o0oN)]P>A8VcsRoNYkh/rZ9;-0Win*;H*H&;+eoSX2%NOYe2$P[`S/Z5!'%8d@LA?aRU>1(75pbm;f]jUq?`OXI:K$r1]0<[i5.:YYrJbJt$aRBOI3e.cJ%9pB'S5Q('tPA/L8bB*e88-))NQ,,BtQ\-8=+K.ot%WI0i_*m&Lo1:;?ps*Q*e4WUY'71Is6e+I5IHh!\srAt_sFak!484X?D!]_q`nTsJ\ZqU+/!Vg.f/'#?,a5i6$YjRiDlu1c"Q&.9i%GJcT<=2T"Ur(Qs^9OD\n8%M2J_=<t8c*'[1YgqH3b0*F@5^Qm'.,n]qopnXmNFliKHLoW`[oshKB+IrTGIA-WG?&`@\XD:d+.Wa3%i(4L,9t:L/Odmb1dAthF-Z&bB,pD_J;4l$s1kTo"@9mr-8@.Z)iJ8^'@U]W3:d.(*opM8I-$Xj9DXfJH.l-fZRZ2!WEVbGBXSZ\h%cgQt2MpA:5?;)(2>gc2L'HfJP[SQM*.6c_%Dj#9bS$60.f2\O56&#.I/RT?r!JNfh=:]2+_#KQ$Q26e`>_s7X1..fDTN4s4En_ui%Hrg:?PT7iA3/.8rge/'8!fq<?:l.Gc#IU[JUoY8CqjFiRA$RWlH)/f"30NGoG_kot8(MRCK"fBfU\^_Mg*=M^4KIQ[S((Gg%K9[&%I<)>mKVNoSR%"i><B.:MQ!82iW?d<Ye&bW/\NYe\7SC/2$6psHs15G2cGM%g&q<L6IJHXh9rjZM#aH]Kc:pmX8m"dh5W?nrQg+0<%'9-`6;Kek-87P2T>"9k^W&Yl"U/e8Zn5C6"m;dD:'HX:oZ&2I:'nn+l;o5gT9d,`*.)h'+dV/]S9GHp9d&sj9Huhr0,o>VXbAPYW%AhHU]$R@<2@I?cV.\DIO[\K5"B72dJjJO=Be91'L^^S1eo_0b>19D%Y"sis@e8fu[@cac%T.lK:gOF)3R!)e-)(]4pDJ3Yl0,(Zc%Dg-[//a2T22J)1Jf/Dct3IN5'6O#i7,,W74@KeR<=VI3IlgFE<$C,h1QF^+O4.K7OAX=Y'?[-'+-!$"1Ht]Ss_u\ktCJ$.5a]qNo%>5hlt,IEeekp4\rq,j\Fg+[EOlDP[PYM/7EYc#qf\o)5OS<R@92?/RRZ;n>(R.XEgmG+$6^C9E\54*-`Od-Q697!u.*ShDs?5=$'%aZTu!)HCZTHjUpEq2cbLT(W3dLK9nhkRL"2=1;^`2]1;!hg?!F8ksrId'lc7.j:lF#-"tZCD7HM+%Z\(9(.aWD<isQ%U%1.!Hp.c%]!.#A8lm`qF*H.BL/n]pT\2#eX8(KL>gqii2u`+YO6Jg5CLb):Fd9U7+18,oeFa<O"=sjuni(s9Sn&CAohg=*;3'o$cOk)H*O9mU%B=Q'_P[p19kg9:I+GeLu7ardX;8hl0e_P?@F4`XeCfK]A:?T34T0D8gRSXG\kb[]HZKmX2U?o.D+rW)O/E+`,/>$@lkkUo,4`ZnX%L8Df'f1(g8-W=]rXRG;rd-`)Ip4["&h>5rHH:kk0&g^m<!!N\6Mj`eE5?%1G0D\t]n#Q[dO@X,,!1`3-F-<iX]2lRhndTuAkf+'i%<VP_k/CQs[@Qct;^Y2>Cg-/5lB#WQEk80l_iKCB.>mB^d0O=>h#`/sn2"dOZ#VjPoX7%d5":-i#I^:+O1kdg?$tkmRm3SXSQh#dG%]Bh1@s3et,_,"DRJ?\;Z^K=VMYN9&_mCFq]Pg`s->]6MoC))+'>8@8ZVW?+<;1?o3r(JXR-/1h\8Th4<L^6lQd)ruSUUD>"%Md;*%K-M9l<D@8"Z?&7+)]pU?4T'Gkmj"e1I[/7./rdk!rNdH7Q_Rm79KBOR=%=E6>L%H+`7Cjjn,(G="Hh0bNp>G@>(p+S^Q665OrDpk%.U>!MP3h!\:e<6ZjjEimCa,;UgO6n*mBam.;`)A6HdjHo3%^='r]j0X@6H@-qa4UH*Lt_T4X/<e%Z:C1Ip\(_V0F%X$pE(l/_YIu%XS#^uRHT@s.)5$8joN6C=Xo5,[.G%m!>-&q;MGr*28l8#kZ9L?,5?^<r44SOFEBnp1j!*\='<L>pR%!1"d^B'ff+O1QQ&4ELoHf`%No5j;Bg,-`c1=49-pQo:E,s3Z(*Q2gLGU*I.9MMRRV+e4@k'h8>,_d[raEbFH]Y-)1IkqImM$nsr;.A\+SJLEECO2//i=WL1'mA%%mlo7!,W'Y3ifTT.@`d5i$&bj5Y!+-,![Nll,_\bUXtOTYn9rKQ)soE8.keRRP\lug#eH%#GLfIF=]+VV@&Ao3S&(8H1MrB:PHT>7%4Cb-;X8@_CeqQVclO"WF7\L<,kbdAnogGt*1,l8:np-1l.Vno*n3=);fNE*fIMsf/^5.BAk)kF1;kUn&VtUUtYU1FsEuO9mdBCE[%r!smm'BrK-%_D&ic4JH$.a^MtANgPLA&A"rl(U_@jiC5:4-_2o'>I?iRW:ipflM^'*i+OLiE!lcJM)cWRR=gQ#:R,bnZ=_`kkoW,%WNCB^Q+1E#EWDg<l\O=?Q1NP'o/G/g'jDa6]j"Rs,G"3_La[+AA!&CWX*6i&MT:AXUV(oKZ;1ZYrh0`pn$F9jW)hE(hYF!!D<!OQ%6rH]?`nf),E#Cd2^_r9I[=bNU0=U`p;@:?\:*u*'TA@2M8OS!b9HY.;kj-ct1P'c9]q1]5fd.non)Vf(mTGZtpL\X^DD$YjV`nKM%T358FA.PbR;o+'WaESY3*Epb$-AGS=\7<`q`!7%?KTCLn/NX+LGTQ^%%eSeH2rG+YdQ>EIW)Lr#^^PoL5`iJ6:Js`<1+E_"EoQEk%K!la<i:P,B;G^I=Z<f?Uo9BZ&E=T`0U/U[FA][?ZosQfWcU,ed$'<?D%JXESFdJt*NTW>b:c_BmV<tII_o7SET[sBR?.VCD<RK-\%$?V)UjpER+G$Nd=\et'i(uJZlX45cO$.EGFf["2a>V8i2,-;WJ08;4EpI8]q2=k^Q=]QV3i!Zq:QH@<WT3i$O<<(N?X!S_(/*jSm%%Vj^-\=j?[_#Q$ql^h0p/s6rNXRsYAfUP8[_XqJ"<#h[r5(YbH`lh9XAWQe$BhH&jTc#:&\(h/YiT;/&k:F%L^4;QB=#+K!mp3qW%A1hX@d;R@4Lno,LAZ-uH+`(*;,9Z<i\Q@=Q&XrXQ`#.mPHK(mZF1nRu=4V4A&.Tg@j-Es%#DdSJcgIj@hl!u/fg/51rbsm03Vq*]%;c7kRU]\6N,AQ@^Hrm=TUXBe4+e-ZeH=4"!me+^\=-.)ZC9\dr/,e:9S^&Xi=2of]%'/@g1P>:%SDR(>eoOmmc<m1pQOg&GZb,$j%!@B+N-W<MDfMq#hp;@\M-4bp4a`NPoWe(&0SEu$A!*4b9OgNU,?K#*7p,o+(o>?hPiXh\8\"l4ODAZVM-nL-gd$PG90tZGtb!\Ed%];3k#o:bhm7d./KV=$=->.#1SI$1mVlr6p+gVNCK!qWjlob.8\IJX%Cg&`?gd;aR3<lA730.nQ67iLFhBR!sNFP,%F\lKQ5_dTfD%5e]Thp+/-XLf0+3Fr,keb*(i\KFCr>?Oal?Htt"+JE@@FVE;0f1M8'DQ[aSFLMQ%+fU\.7UjD4ng._9pU"j7L..W#QeJ4#.P))%Q%[o7E!]W4(K*DFk-hX9+1;mn$7]UJ36O'hQBa$]A)U4jk=2h/ERkiH'#bO.LFLKk:\\fc5GP?!0X*q8_TN,p"r]rR0.W1''0PF;.q%f*EOBTf+C`o1Y7P/2SBES3B5doD/)@FD9-kcI1dp.YU!Qr6YYX2.7BrdET6;djd$MoXkHWSm,M"\M#T;X+K;`*+`6IAA&$0Pf]U(%s#oYOYG7B6NS/Ws;PY[I-AOFh+fJr=/&n8&l*uXW+%=0E7-pca[E>o&A,s349SW3_q;hijkmiiM4ZsnKnmY%UY/p;dN(eo_&I-<%%VFU)m0?[0&W;gM2V;#8GM7#K]Ub%jhcJD7pBp`!(k*j:mA7(39do&?c,IRi`ND`?<!pm]%L&h/;7RE'Es%a*pm4+=OnpUa[r>aPo%MNFMR-0p*=Kdh9ob&1aWQ%S^hYX2Ej'I-Ke1M<<p@Wa</S9_LH64?*"]Q0BIaq2:#,cbQ4""INe66pXu2OcB?-9@?jYNLamqk*<!%I9-#Cmhn3;_)$(oBCa2b:sIeMJC!=rLhl-Nc??>fB%sj?hbj@Nq!HmjqPX<nM)B'DcELY\T`6'AP(+3l3C-5Z*%[PbT.r2FTb5ik%i`"cL/WTMuBt,cA(dC\&,3XOm=ELu_i*:U3i$*eSe=CW>%iR`B0%1;uLp,6SnE1UDh1tDPNQO)\p%:98qYGCYl8%2_Z'\e(bqB88%(V[>O*g*euiP(BgAbjXs,$CgbDUD0KJlF6\o#ZLXL>$L3q=SK_MhKR%-F4^FF8SCFc7*sl$'oh]64e0;)f:V>_2\BTn8H0(HfJ_3%][poRR(\CX'u/ZPMhK/lha!27[pSYBaFi^%GDL$+k,Y[USqiO:+e,fEWim@Z0FWhlTgVn?[(U18k$=O1'%R6R4*TDM:Fo`f/md3o%;fd>uaElI+Ui*lF>0NNXnu)m\md2Dtpme.^EYBh:;<";B-kml/nn=tn0,"O].ss'b=#?HGq5X[AphgA,l1=Z%7?S#KX%X?3DgrYc%OFCuprCn0Z"HgX:r/ntA6_Fr!ZK`FA*%\C>g??H%f59m^<RIo6!T1N:n-<kk^A\o+pl",%'(OPmWoTl,`9e5J8UfAqq&=_TR>Unm%PRSeU`,Gh(2i^b%<;#elY02#4(l:dR*lkNJe'%?lHuC3=TdC?9itt7;&%g/>ImYt/@cC#^J%5F,6G&;Uj3"kuBEY$t3HJD#fJD9r%S8o+r3jrX^.Nl?a][@/YU-,#/WOPC/H]>ij]f*ijcZI_m>G,Ud6)!jI)(,hS1:6;]oL^(aOK%l##2rNY,/pTQINpZpBTOo>S_>@*%3fR;T:-fj7"s?/61X1M=c0$h[64>eB#sWW3&[;ht7=XFU*=;N18G@K?H)/L1m]XC9_N4@,cE*j"<_%0(?ESDI@VFB&2J&l2f&(W-%kO5<abeEi>V[Vh_pO.L/6`#?gL#<("?JW"].n;R\4S!.)XRG->1750%ZRs4S=BAfHhh0o$cO2LBh!#K(n)I:l1a;^l5(*Y#OA72#%r7uq[O4MV<KG@MDTb%=0=2/]!$4=RJXXkF#YMtqa$rTQj-E7m^&YWG:eT4Js2(H=7Y=:.YK((WJQAAEr&'6tC3/B`Bj5E+i)")Q0%9M;*G>PJuEPP!]JK\Z!tMZR:$9p>!ZGnOQE)XVq;"T1ZJj[:EDKKqQEYOh-`]q^Xq"2ZQUp'3lNF^7pNnc'<YGXFM4NJm!lD+UB3%1J%"TauR2>E(u1S7Lo'\cTS_s^ILBf5dHI\`36,fMEW,;N)Poi1orBM]BXsoF1f$Fa]#K7e>0V@A(O_)o.3uu1sZ6U(?8K[h\66d%@@Tj)SiG@BD\%(WM..N^A^PU(Q`35m/2GE**F`&7Aj+uf]IZ<(ij$=\KB-9bShaOo99SNpKd%j*:2dn`TE9qQNDA_tEi6-m?)O*0%OdF*2pPu?4<R)dj+?ed#Q].Ss<d$<\Bf*N+?^AI^.FM?rI']a6\jB642GCj84(us\4hMb!^p%'X1\7Lm,lmp-*[VSeg1dbUS!+C9%&A[3^Pn?<V?r:`cLJs9FJ#.tDL<i&dkS^75h6Atm:?[VR?c5V-WC7OgAA:6JV=+\M?G6rQ]$=#-9-'[iT,O^TH1)4q@_r+TkaMT5%QEQ;/;p6^=iDA!nR)g,[#tSHDe=7J(iPJs2I*Z:_r-he?i3l%C(8<=Z#Ifi4+oeAh.N+"a,b?R((9@N%3BXQ95APd1j"S3p>>J<q%a)Z2FnL5VTFOm"Qp."K6FmJ?BoAJ]l#mQ?P)\%8%c1uifn,k`?hTruG0f'JmD^ro$_k:K/os&tq_"eXqOcMfuLNjnDN1:gP0-u^M%+A95o8(H`iH/1GbV6:'G>nLr7aQ)K+UDUEcJuU3W&q5>2djcFV"A)!]4gTpB/],$0VD`Q(V??E&V%aaHN4e:+B5a@4Oo3542Ua0"%nt.S0:IJHo3LM1#EM;5ukWJ_)`ppRsqOh![ih[9'LS-^Jq^nD^os!Z,AoaY\HJ$CP'b-k96L1Yh4%V=#ONggtM;5"/j9IFg6DkF^%cPBg$JTCu^o6KpE3ABB</V=m]&8=?(T)J5>=E9'cgN@bOGRk?JeK2E_8ro:7jV5OAjT'B(B6]qpHP>@,pG&^'C>!pI]H+[Dq\,=>%SFr`Xr+^Oq</,Ir17U6:T.=%pWhjL8U%I3<WI:1e6^=J1WkI8<au1[#*B(laoPhP;mXm.LJ>?&nh$NujO,Lsr?/&`c<amD*a'iAb%+6AXIQu3UG:B0l;<lg3*/IO<?H?tn#j7fg%[cq5k@.H1__)@+!/]#Uoa?(DD789YYJiRWn(t3c6:`t*0nL(^@n;%!$!.'Y)lL/)2%Z1H:-`dAhbHh`+O.2@CtL>-O_%^grS(`6F)&OCkjo!tKXX*@O');RfmE<q?DV\,3")\mGoD>46#;SMb5*25NQ&rkDb:2,];1H8dO%H^j:/)?]chH>0T\_mu7^"u%HtN,Df)N[a#=q0G%]N&[Voja\?Hc"4Zt(_-suV\**"\W]p.4A'oU6^N)jO=LhID_;io\PX*"2fnGZ%#.eYBX[;o^USN?Y*$qXtD$haq9IU2m]aT*?H,PqkKPB9UGIk#RDAoq+#2")kgP>3nlp.aajdD9$=Xre.#WW=p,IU';j<%,s:rNQ^%-QJb&nJ9ohZ(dkg52HrC+ZK7F4@^sbm7)k],Qp7\^"O-(GmK(Z4qW:4.8GE!8'5KiJG!UW'F<&MgdkF0.jtl9QhMnc'T@&[JiTSS%<T/lOjq\o%=h4uh]S-as6>#@E\AJ.@]b%:_[$0e>7iH['SIYl)N8oZ&EHl8!k5N_0n-`:^4c`306Wg''cJk;1oNh#VmU1n'Q2:5b%Q8C3nBWJ)<T0$BlI,uiti67qa)PJB9Mn!SV0B4T+BX6X`HtDMK^PT,V0VAEAia-QLGWH5"7KUBi!"AfZW+FSn_^GI&c1]iJrZI]L%D65M9)1h-sRj-_nR`,XbJ%&&GW5`n<]/@@@`<m`#I/09,WAAcQIGd"JRDEk4HVuGFM)2!`5FgAE7V=u<U\T'!8#Cl#B-\l2H2@,"%UPRXiSWkVqq(R-O=kK!lp8i'_;=;>Q//#[#FVds&r6:D28sC@9dDKT4E)Vj_c=t2e-+pc0`mO]<GT^:M10Y+OOm4V>.Z>bOqjtc\%H)a&-n)nn1><4rfeU!&_ViHHdG.VXMm+*$ThWa(NH.6T#90Pb7kL6aB?/WLaMbGEpJso5!jF(3j@T@C_H\CSBR'i)1JcqmQdq0LZ%40GMu:*2oJ,^cNF2o5cCm<QRekg\=dn+*W'm&8[S#R&OW.lpIUKQk6REf=-]1VU<TgShU8.$+';3=($TR^F_/kK(d*5"kA_DkL0p%k'ZB5N.Uui/prm6&'Y'nBB%_aA?K/BYaR7O;uGs-"fM=.i/ILt6_0pT1:.iIIL-$n[sA,7<[O1r!Xr]Rc>I'%!87is^pT_3bRm]_%+KXl@%JjN85P]1VUO)YO9(5.ie+r[Rd.PTVnpG@fJ2#Go1!OI(B+sP7G]:HD]ISo)C&JhAS6KqP?BqeQY4fh3TDltoi@=&-Sq64p%FkVIjBMOV;$dO2>'-/YD(7%%;`ZE2`W"eIg:6u.N,G&kToa<#O+G,.$>B?$b]J<k#juaVFjU.N<7eNjb2_hogF#.EnM:c.If6Wcc%]%:!T4Ya#hcq:L/26e'FJp!j0NNkJ-C]G7>;q0uud/GL)+Hi@h?D.)'Y#%u/Jh;JkL5Tdmj?S'\B$0.pVAUNQn3E2eIe!tp,H=.p%iCL@jP[5DC(qCEQjb2&$7]p%K_ZJkRjHSA5r'/51H=cDS=e57o'en<B'q\S\78$jh->6^6e9p(PaE%d1T$%kD4OJR3%]5`%juiRu%Q!^B_gYkocb)WaB9LSI'aVc<:f60>M@pM.I[?W%n`&&26e;Atkr8>gce8#g=GbZcj37YB7-"pX0bY>I<$7F]*2BAS]b/@B5Y8FF-%ca$bEX+ZB5+Z?[*5M^U]0A[nec(8Q?M&dCke`XV.V9kR\Up.:dF9a0bFr*HlB+od&J.5ZHQBT;GLKP!ZXcs\-5)\Ijb^:VRaa](9%r8c(/a)#3AgO=(5"d4IS*f0[[8I,\N&G9"S;7`pM<uOe3EH;bK:Bg!WY"%si_^$ag8u3Jli1YiTAWRJd(W.pee6A\s<,^cQ!UZ[B%@^][S%dP'o=07X]m*V_`<+gK--:W"/!1[7`ch93T1oKjhlb@E*(i[RW34Z3h3ETh1>OoTRE];b?nRis>&'"ou"Aq=1H[)q2ZoF$4%j[=I6d=Ss$Ios,!l#U@rnT6cHa%T.&78(o<0FkiB,=eoWe>bu)L3'p<:lE*m1Z\f(!%?RV##3L)>cZV,RGHc;#qLnOHFiO+SkLW(%?l=q?%h%7W7r]V?Kl%"IFK[D,J&W6)\bVN5=[D:oj?/%`Z=:ZG_GEZ7:E[gr%LKjm)-2QgEEdT'.R&;;IqoQJgJKB'hL)Jt`F'+^%gS^fC@-GpJ)tLYf'C6Zl!K#K@ncYR`ZVl2KAqJWGl,^;mn7jtT?RE$@*,NS*I-';gNL`fFnH/N*-%(Xb]Uq"Z&)+g1]E?R$0J'iH%cMRS/F7/$(Bu?m.H\Y3/f`C6ifj_1!.)d'BpAs7+gm+a_*O(uV)&raiq^rX6=RI^5WP?'g<ZLUl6!OM^O3cfg$.g-%]j192-u<S)%kUk2lfq6PMbeCq-e+=c'(RE)[/=&Ws;43M[QpT(u+S<q<MZ@P;IV$i5"dae>FmiBLC`&/=$^q;d$oLdd?SC?/YB*ke&-H6=MkC?0%-TReuR7Hld<3'tkYD]fCeF+G5E%EO`ON94?LEK(7R9l26f8U;nQp6%H]u?b>kD7NXV7,#9g\IkiHDnfO%rj07XLeK7-RRV/`a`tO%H/oCG:B/>pUPD3-:ti;S,)!6P$5VohpBq`*\ATUk5:t`*cFs5F+K\bnrrA'NAgF)on:51hX5id^J)T/&j'neR$p2=W[jk^4R*"Os%.g_i&?5,"7V3%jBR)a2Y&R-]Q8D*'JftU30V^E$@0b8/32cFN15(<BD>3FMpb]$6<L*XpLa=<,CP_FA4%J/IJM8W0Q@>;4>=F]Rl%!K\9=]VT9T%0gK7MqMqYd#kY+h4tH)_9Nid):Ee2g@K$3oPkE[2S;+f[>QGII#X#cESQ>i@+L%D%jrflVg`!NeMa!<8_Od^k4W^q%89'p_qtE>A?r+4'91PLl6=E*.1P>HC5C33l+3Ru3pt5i<18cb8*R>Bc*Rs0,R9[XIs(/;#C$6K:[>/86Ta,2#)9)>pMntt(IrLX^%MZ@LTX?WJN\&'^$N+VtYJLq3K6qC+l)E%;LKhbYkG3c5uJ!CuJn5K6nUj.1KLKP2".a'@7gaH$\X4MOiQlHTb1K_*LbqQHn2RCI?%krP<6EhkH1\Os\\W!rD[+9qdhmEYiQ3K_KuG2J-TLpqWA1sRQoJVp5kQ1T1:]?Z(YY=&Opkr<AE:;?#&\$q2*hs)"Z&@nl.[:iAt%Go#",PQU,[Y=:pi26!b-Mo=fUCS$;E<&N092WM%.;M"C/^:/@g+DV#!D2p9(Vs(l[$2LW:"e^Bj^WMnHJg8VLflWTSIX97Z?JO%9%h;"qa+C7Dt+bo12T8,"RZt>oO;8,-V^D22PQIT8p?tdDRXh)F?^E%^s>]RI]6O9FF\;p,!@D8X<nJ[aH?kiH$h_5H!;\lToS035l%4UpQVY:F[QUa]7e^%R[;DnEXr-Ka\`g[3Od3HH]<.Nph'pMJ;U^AMT[F]_>Cg#<br3]%l^4>^$qr<NKH\l*;ZcVcR3"[i&@hG*>%%:YNIq)UA.TCsCpXf/5[6*OfdZKFuRl@l!p-_iSu9Tbu:J"F/F?Ft]t_X#mQb,85s,**6aC6^N"YT\jA:7qU]qCC%`*ZY(1[OB**s%\^g8Ue];2Hg$)E#2=&0M2m?O4cf%:T$O&Xn`$S_7RUhO"[4:H"jm;@q,,-8a$n,T4.5Q7bFd\\ZMXlp<ag%,=QHBdkJ0[P#,hB&<%bGhl#Hh-\=?\l1P*eaTD2*VdKdhsd&Z`O21'UjEQHb>st[0#E"#]gar/+VK:'5Ua0dO/n%@G%[((XBVjc=_-O1:f;n[Nd$khDM9+%"&MK_R-AYPFS>%kcCbERB(625\5NJi]W(Ve;)#V1$$Y=3f4^dW[GN<2$k9'B51&LYGnXp8jPZldJYX=3DV"-3:kJpJ]n5'P]\]%a%7lMoKTYQFW"4JRODdOjVLX4JR3gTgGs81tTs.oTG+8bfmpOD]Trlr4TO8o4:rS?qb2ZEZir3RHYs/5nA*@LO9L1sK.'50PX2G@#7%e*pql&a)Q^#;WO24YQ$j6!C`g'X&80N@_4KC[p.i3HcEi2@'64SalA]:XR-.)&jCK41tH)\?Z]C-)IcODA4=K]PqMldKQ&8cIITs%>ctiV/.:#]UWuTiW]deEI8q9:@)6&/S@\RuPrm9%$`C:dj_kOc7K;$VeA^Rfl2d_1ngDm`1=S?9N^pKrLIqJqi*I0d;8m$[d3fM/%F`Y9d5?0p'c`VLCNpC9PJ5On_(.YXYbqn_^ZJ;=8V8<e]@9erI?o_Mh#8"M1Wd=(dXd*&@RBstnJX>$o;bK*4IIUn%(fG*Ng/3!&%B.dc4J7:LcDp2ju_bi\"=Z]Jk%:eFNLMH'uMBhR&q2NAV!HPT'ddO*eI+FR,i`n0k%ElL0(AVD:b`RhXbJN3"m_lEXJ62E`Q$sC6%7.VE/A)>?p-iVo3)n:e>"iBS::b.6Y?G4qIT>ruW.tLV*d\HO$RmTXh)\OLseX.c<j+6ttgqH9D8X=G0O2K##[pOt)Vrc<JF?VPp%e-sDRn8D)$pPs*2^R6mD/D<-LI0:Saqob^WX46F+?VPntrE(MNPG)[hQn72E'0naL&=HBC,EX!IDHSNnG&3@4lJ\J$,26j\HO0CE%>?Gk^-:7GYiCXV-&S9YBZf<@1Upi4D`dE5CZ8`]X)@0,5'DC\>9+2Hm-srrPXa>/\d?G$6jg2oPh9JK!]0\8AXpE4aS>ZK30#P1,%0OYu>fiCEAUb'01T/f\p=k!Dc3PuQoq-<3gs$f!niTOBr4tj!8hOiGndqF]P(04:)?VqD:eVst`!'aAe,<F;6>2kh'I&-BS>u)FF%(t&"a;CINR5bFqFOouak,%>f88%G`2eH>3W.I]OUQ!g-*HZSds:Aj$RG%?]Hb8W,XUYf[M"Q_&Q;895Pe"RSR)`?ZP$U*#4-Di<R%LB7pu]0]Jng11K$Fu\*f*b!:XO]RZq"B.r=QAWT*!ibGseHO'#*6&)(V0jl$Zq9oaiQreV:\l,$(FP8jT(UViG4K!.^<Yg..;#3G%nnU[W-8CY#8_Tb8a[g-Sh@l#"A=?>E&In;a"J#(Gp<(j[Yp*Fb`>)gkngbn#[i3_,6H1d.r"]s\JPtTf!=F^.6g,aO,F*Qo62Shj%Q/,7cJqAq)I2:Z3D+-hjG,rO0nKo3n_-@t"(d9$bm&)`EPK4#-fS'@cT8LnU7O#o<*=3fSl^l0s_.:GZ+=EP:5*%0MMC>aaoOS^O%d8Va(I(].;0VStKg>>_B9MVlZ\i,Y6FhJiYf,?!48ZqcGghBV'NXcnd!;tuX)j<U=!:;$*Z/XX3Mp\Y`h0'3NZQf4D[lU:lZd7o/%7jN'Uj;sEcQXJi33,YP-$!BmXBB"qC:0:Lj^(E^&QWN&Q!^E#d.4!0ub,[fdFk2i7(U.8R17m38DK`DG)W@=@-Ca,aq'uR26F;C\%&]93o<RcRMW>GdFqVbH_Q,#[&hgYmF3VLo+36q(r@)M+Hgt8KHdAn/N[U/\_6c#Hm+l+050Xr_#o^i8l(RAE8<tIA::\Ym'cY\ab%#,1DQQ6?R=l*GG@G^VQZ$c>k\$?uH!QO24=mcb]ufa.D`%.L>jj5BXg;UNRXT.SdU9N_6YhS%LI@Bro34\n]VON.(^=OT"-6b*_?%]aPl+a"e?'#,2fXRRQ@5-3.So-11PUX-@.2.i"R8N@7,Q+;8DmR7NW99hFm0Zbc.RilpO2KBq_R+)gd:1W;6-\?iN0J0"Kd3V`KC%:>1fK<1E!$PH'2M5cX*+-Skr.op>WZO#3<`57uA._:=Rn"3."eW<;JCm:d7dVU)H'hiK_NLW_C8s'_l]3#qRLB[39MF^C"@1CtF)%q0,P2-jZQ>H(NcJH,uQ6IZ*@C3"A#qZJ65qDN<eWfbn8:j)gDBZf=7JH!Zr3J,E](fh.pA'o],f\T&hTN/=-Ni;H0B?4=$I,LWda%-DH6T7S[O'-E*jDO@9FBjP"9Fm:`30[V]T!LlrN9dmSWb.erJ:mOulPrIW6NE"/KMqcWjs_"98t!pQ;h^<aRI<S`C;A3WGq"9k(c%MoBV?m-S!(k'V9[b5q$bBHfic]?q$R<+1o\A5E7<8rWM?/i]XUnghU<"+QfSke.AY@%j+^"lCJhd[r;`e#kffZd>09"9#4ANFiu]%e7T/_QG5XhLSLkV%:s=X%H0S%YG1G]OA`Hq0rRr.mshO#8p_Z^4I6qqp"BG&pY50Z+"p;VgRW<1iR+IeUeH1f]M0q19_Ao+138k%%(XTH`3t8W(<R6)aU;-&2YY5E,B5Tr/Fc+gh00.:FQ!`DMe_'FTV;\J#0&eo^0UeA-7*?&TQJ>Kj7eZq&&D](+&'7Tg7nLZc-7ti0%HGnP=ZX2g)AENOhn#,^h`hJA-A=%B^D8n(`gKcMUrHsaS2,j;"jPfGO8$S]F@3fOBg,&I:UDDHN^H=3'"pHI?8a2=M?q%U(!BZJf%B<:jU-P;M8F/KtE9P-RNT&(KFFWuC$,m/3hhS>m*=mKZ<6\]Ur.KlE.((CafKdY6ai\6QqJo@h]8NT79f0YFG>9++Jq_7+V]/S"6%%Pe!=eZsoY[B8+CoDY>(:r0_\P4hOKnfPVLiQmE0W@,CD'fpTH3p,NMDVAb!&S\3M.qljXa3J6.1s:i+T;fTh$i"WLbPp8riO;&M%S,]Jf07W_Ws6IGubQ%1c^]!JJrS*tDoH4)'%tFP=J,@E=q;;5K\)72DTDnD2rUop"r8U$,*e4,Q56'a=J,%c*s69R]YCHH8n,N$P%s6K\:b@d%8q4IZYGQ7Ylr9aLf&j1DQ~>%AI9_PrivateDataEnd